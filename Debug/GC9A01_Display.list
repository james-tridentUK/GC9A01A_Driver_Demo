
GC9A01_Display.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002b50  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001e8  08002ce8  08002ce8  00012ce8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002ed0  08002ed0  0002004c  2**0
                  CONTENTS
  4 .ARM          00000000  08002ed0  08002ed0  0002004c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002ed0  08002ed0  0002004c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002ed0  08002ed0  00012ed0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002ed4  08002ed4  00012ed4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000004c  20000000  08002ed8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  2000004c  08002f24  0002004c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000074  08002f24  00020074  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002004c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002007c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002176  00000000  00000000  000200bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000a0b  00000000  00000000  00022235  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000001d0  00000000  00000000  00022c40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000144  00000000  00000000  00022e10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000f529  00000000  00000000  00022f54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003287  00000000  00000000  0003247d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000549f8  00000000  00000000  00035704  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000950  00000000  00000000  0008a0fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000058  00000000  00000000  0008aa4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	2000004c 	.word	0x2000004c
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08002cd0 	.word	0x08002cd0

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000050 	.word	0x20000050
 80001d4:	08002cd0 	.word	0x08002cd0

080001d8 <__aeabi_dmul>:
 80001d8:	b570      	push	{r4, r5, r6, lr}
 80001da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80001de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80001e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80001e6:	bf1d      	ittte	ne
 80001e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80001ec:	ea94 0f0c 	teqne	r4, ip
 80001f0:	ea95 0f0c 	teqne	r5, ip
 80001f4:	f000 f8de 	bleq	80003b4 <__aeabi_dmul+0x1dc>
 80001f8:	442c      	add	r4, r5
 80001fa:	ea81 0603 	eor.w	r6, r1, r3
 80001fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000202:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000206:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800020a:	bf18      	it	ne
 800020c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000210:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000214:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000218:	d038      	beq.n	800028c <__aeabi_dmul+0xb4>
 800021a:	fba0 ce02 	umull	ip, lr, r0, r2
 800021e:	f04f 0500 	mov.w	r5, #0
 8000222:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000226:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800022a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800022e:	f04f 0600 	mov.w	r6, #0
 8000232:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000236:	f09c 0f00 	teq	ip, #0
 800023a:	bf18      	it	ne
 800023c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000240:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000244:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000248:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800024c:	d204      	bcs.n	8000258 <__aeabi_dmul+0x80>
 800024e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000252:	416d      	adcs	r5, r5
 8000254:	eb46 0606 	adc.w	r6, r6, r6
 8000258:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800025c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000260:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000264:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000268:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800026c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000270:	bf88      	it	hi
 8000272:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000276:	d81e      	bhi.n	80002b6 <__aeabi_dmul+0xde>
 8000278:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	bd70      	pop	{r4, r5, r6, pc}
 800028c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000290:	ea46 0101 	orr.w	r1, r6, r1
 8000294:	ea40 0002 	orr.w	r0, r0, r2
 8000298:	ea81 0103 	eor.w	r1, r1, r3
 800029c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80002a0:	bfc2      	ittt	gt
 80002a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80002a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80002aa:	bd70      	popgt	{r4, r5, r6, pc}
 80002ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002b0:	f04f 0e00 	mov.w	lr, #0
 80002b4:	3c01      	subs	r4, #1
 80002b6:	f300 80ab 	bgt.w	8000410 <__aeabi_dmul+0x238>
 80002ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80002be:	bfde      	ittt	le
 80002c0:	2000      	movle	r0, #0
 80002c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80002c6:	bd70      	pople	{r4, r5, r6, pc}
 80002c8:	f1c4 0400 	rsb	r4, r4, #0
 80002cc:	3c20      	subs	r4, #32
 80002ce:	da35      	bge.n	800033c <__aeabi_dmul+0x164>
 80002d0:	340c      	adds	r4, #12
 80002d2:	dc1b      	bgt.n	800030c <__aeabi_dmul+0x134>
 80002d4:	f104 0414 	add.w	r4, r4, #20
 80002d8:	f1c4 0520 	rsb	r5, r4, #32
 80002dc:	fa00 f305 	lsl.w	r3, r0, r5
 80002e0:	fa20 f004 	lsr.w	r0, r0, r4
 80002e4:	fa01 f205 	lsl.w	r2, r1, r5
 80002e8:	ea40 0002 	orr.w	r0, r0, r2
 80002ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80002f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80002f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80002f8:	fa21 f604 	lsr.w	r6, r1, r4
 80002fc:	eb42 0106 	adc.w	r1, r2, r6
 8000300:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000304:	bf08      	it	eq
 8000306:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800030a:	bd70      	pop	{r4, r5, r6, pc}
 800030c:	f1c4 040c 	rsb	r4, r4, #12
 8000310:	f1c4 0520 	rsb	r5, r4, #32
 8000314:	fa00 f304 	lsl.w	r3, r0, r4
 8000318:	fa20 f005 	lsr.w	r0, r0, r5
 800031c:	fa01 f204 	lsl.w	r2, r1, r4
 8000320:	ea40 0002 	orr.w	r0, r0, r2
 8000324:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000328:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000334:	bf08      	it	eq
 8000336:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800033a:	bd70      	pop	{r4, r5, r6, pc}
 800033c:	f1c4 0520 	rsb	r5, r4, #32
 8000340:	fa00 f205 	lsl.w	r2, r0, r5
 8000344:	ea4e 0e02 	orr.w	lr, lr, r2
 8000348:	fa20 f304 	lsr.w	r3, r0, r4
 800034c:	fa01 f205 	lsl.w	r2, r1, r5
 8000350:	ea43 0302 	orr.w	r3, r3, r2
 8000354:	fa21 f004 	lsr.w	r0, r1, r4
 8000358:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800035c:	fa21 f204 	lsr.w	r2, r1, r4
 8000360:	ea20 0002 	bic.w	r0, r0, r2
 8000364:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000368:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800036c:	bf08      	it	eq
 800036e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000372:	bd70      	pop	{r4, r5, r6, pc}
 8000374:	f094 0f00 	teq	r4, #0
 8000378:	d10f      	bne.n	800039a <__aeabi_dmul+0x1c2>
 800037a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800037e:	0040      	lsls	r0, r0, #1
 8000380:	eb41 0101 	adc.w	r1, r1, r1
 8000384:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000388:	bf08      	it	eq
 800038a:	3c01      	subeq	r4, #1
 800038c:	d0f7      	beq.n	800037e <__aeabi_dmul+0x1a6>
 800038e:	ea41 0106 	orr.w	r1, r1, r6
 8000392:	f095 0f00 	teq	r5, #0
 8000396:	bf18      	it	ne
 8000398:	4770      	bxne	lr
 800039a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800039e:	0052      	lsls	r2, r2, #1
 80003a0:	eb43 0303 	adc.w	r3, r3, r3
 80003a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80003a8:	bf08      	it	eq
 80003aa:	3d01      	subeq	r5, #1
 80003ac:	d0f7      	beq.n	800039e <__aeabi_dmul+0x1c6>
 80003ae:	ea43 0306 	orr.w	r3, r3, r6
 80003b2:	4770      	bx	lr
 80003b4:	ea94 0f0c 	teq	r4, ip
 80003b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80003bc:	bf18      	it	ne
 80003be:	ea95 0f0c 	teqne	r5, ip
 80003c2:	d00c      	beq.n	80003de <__aeabi_dmul+0x206>
 80003c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80003c8:	bf18      	it	ne
 80003ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80003ce:	d1d1      	bne.n	8000374 <__aeabi_dmul+0x19c>
 80003d0:	ea81 0103 	eor.w	r1, r1, r3
 80003d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003d8:	f04f 0000 	mov.w	r0, #0
 80003dc:	bd70      	pop	{r4, r5, r6, pc}
 80003de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80003e2:	bf06      	itte	eq
 80003e4:	4610      	moveq	r0, r2
 80003e6:	4619      	moveq	r1, r3
 80003e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80003ec:	d019      	beq.n	8000422 <__aeabi_dmul+0x24a>
 80003ee:	ea94 0f0c 	teq	r4, ip
 80003f2:	d102      	bne.n	80003fa <__aeabi_dmul+0x222>
 80003f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80003f8:	d113      	bne.n	8000422 <__aeabi_dmul+0x24a>
 80003fa:	ea95 0f0c 	teq	r5, ip
 80003fe:	d105      	bne.n	800040c <__aeabi_dmul+0x234>
 8000400:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000404:	bf1c      	itt	ne
 8000406:	4610      	movne	r0, r2
 8000408:	4619      	movne	r1, r3
 800040a:	d10a      	bne.n	8000422 <__aeabi_dmul+0x24a>
 800040c:	ea81 0103 	eor.w	r1, r1, r3
 8000410:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000414:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000418:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800041c:	f04f 0000 	mov.w	r0, #0
 8000420:	bd70      	pop	{r4, r5, r6, pc}
 8000422:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000426:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800042a:	bd70      	pop	{r4, r5, r6, pc}

0800042c <__aeabi_drsub>:
 800042c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000430:	e002      	b.n	8000438 <__adddf3>
 8000432:	bf00      	nop

08000434 <__aeabi_dsub>:
 8000434:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000438 <__adddf3>:
 8000438:	b530      	push	{r4, r5, lr}
 800043a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800043e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000442:	ea94 0f05 	teq	r4, r5
 8000446:	bf08      	it	eq
 8000448:	ea90 0f02 	teqeq	r0, r2
 800044c:	bf1f      	itttt	ne
 800044e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000452:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000456:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800045a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800045e:	f000 80e2 	beq.w	8000626 <__adddf3+0x1ee>
 8000462:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000466:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800046a:	bfb8      	it	lt
 800046c:	426d      	neglt	r5, r5
 800046e:	dd0c      	ble.n	800048a <__adddf3+0x52>
 8000470:	442c      	add	r4, r5
 8000472:	ea80 0202 	eor.w	r2, r0, r2
 8000476:	ea81 0303 	eor.w	r3, r1, r3
 800047a:	ea82 0000 	eor.w	r0, r2, r0
 800047e:	ea83 0101 	eor.w	r1, r3, r1
 8000482:	ea80 0202 	eor.w	r2, r0, r2
 8000486:	ea81 0303 	eor.w	r3, r1, r3
 800048a:	2d36      	cmp	r5, #54	; 0x36
 800048c:	bf88      	it	hi
 800048e:	bd30      	pophi	{r4, r5, pc}
 8000490:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000494:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000498:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800049c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80004a0:	d002      	beq.n	80004a8 <__adddf3+0x70>
 80004a2:	4240      	negs	r0, r0
 80004a4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80004ac:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80004b0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80004b4:	d002      	beq.n	80004bc <__adddf3+0x84>
 80004b6:	4252      	negs	r2, r2
 80004b8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80004bc:	ea94 0f05 	teq	r4, r5
 80004c0:	f000 80a7 	beq.w	8000612 <__adddf3+0x1da>
 80004c4:	f1a4 0401 	sub.w	r4, r4, #1
 80004c8:	f1d5 0e20 	rsbs	lr, r5, #32
 80004cc:	db0d      	blt.n	80004ea <__adddf3+0xb2>
 80004ce:	fa02 fc0e 	lsl.w	ip, r2, lr
 80004d2:	fa22 f205 	lsr.w	r2, r2, r5
 80004d6:	1880      	adds	r0, r0, r2
 80004d8:	f141 0100 	adc.w	r1, r1, #0
 80004dc:	fa03 f20e 	lsl.w	r2, r3, lr
 80004e0:	1880      	adds	r0, r0, r2
 80004e2:	fa43 f305 	asr.w	r3, r3, r5
 80004e6:	4159      	adcs	r1, r3
 80004e8:	e00e      	b.n	8000508 <__adddf3+0xd0>
 80004ea:	f1a5 0520 	sub.w	r5, r5, #32
 80004ee:	f10e 0e20 	add.w	lr, lr, #32
 80004f2:	2a01      	cmp	r2, #1
 80004f4:	fa03 fc0e 	lsl.w	ip, r3, lr
 80004f8:	bf28      	it	cs
 80004fa:	f04c 0c02 	orrcs.w	ip, ip, #2
 80004fe:	fa43 f305 	asr.w	r3, r3, r5
 8000502:	18c0      	adds	r0, r0, r3
 8000504:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	d507      	bpl.n	800051e <__adddf3+0xe6>
 800050e:	f04f 0e00 	mov.w	lr, #0
 8000512:	f1dc 0c00 	rsbs	ip, ip, #0
 8000516:	eb7e 0000 	sbcs.w	r0, lr, r0
 800051a:	eb6e 0101 	sbc.w	r1, lr, r1
 800051e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000522:	d31b      	bcc.n	800055c <__adddf3+0x124>
 8000524:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000528:	d30c      	bcc.n	8000544 <__adddf3+0x10c>
 800052a:	0849      	lsrs	r1, r1, #1
 800052c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000530:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000534:	f104 0401 	add.w	r4, r4, #1
 8000538:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800053c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000540:	f080 809a 	bcs.w	8000678 <__adddf3+0x240>
 8000544:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000548:	bf08      	it	eq
 800054a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800054e:	f150 0000 	adcs.w	r0, r0, #0
 8000552:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000556:	ea41 0105 	orr.w	r1, r1, r5
 800055a:	bd30      	pop	{r4, r5, pc}
 800055c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000560:	4140      	adcs	r0, r0
 8000562:	eb41 0101 	adc.w	r1, r1, r1
 8000566:	3c01      	subs	r4, #1
 8000568:	bf28      	it	cs
 800056a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800056e:	d2e9      	bcs.n	8000544 <__adddf3+0x10c>
 8000570:	f091 0f00 	teq	r1, #0
 8000574:	bf04      	itt	eq
 8000576:	4601      	moveq	r1, r0
 8000578:	2000      	moveq	r0, #0
 800057a:	fab1 f381 	clz	r3, r1
 800057e:	bf08      	it	eq
 8000580:	3320      	addeq	r3, #32
 8000582:	f1a3 030b 	sub.w	r3, r3, #11
 8000586:	f1b3 0220 	subs.w	r2, r3, #32
 800058a:	da0c      	bge.n	80005a6 <__adddf3+0x16e>
 800058c:	320c      	adds	r2, #12
 800058e:	dd08      	ble.n	80005a2 <__adddf3+0x16a>
 8000590:	f102 0c14 	add.w	ip, r2, #20
 8000594:	f1c2 020c 	rsb	r2, r2, #12
 8000598:	fa01 f00c 	lsl.w	r0, r1, ip
 800059c:	fa21 f102 	lsr.w	r1, r1, r2
 80005a0:	e00c      	b.n	80005bc <__adddf3+0x184>
 80005a2:	f102 0214 	add.w	r2, r2, #20
 80005a6:	bfd8      	it	le
 80005a8:	f1c2 0c20 	rsble	ip, r2, #32
 80005ac:	fa01 f102 	lsl.w	r1, r1, r2
 80005b0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80005b4:	bfdc      	itt	le
 80005b6:	ea41 010c 	orrle.w	r1, r1, ip
 80005ba:	4090      	lslle	r0, r2
 80005bc:	1ae4      	subs	r4, r4, r3
 80005be:	bfa2      	ittt	ge
 80005c0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80005c4:	4329      	orrge	r1, r5
 80005c6:	bd30      	popge	{r4, r5, pc}
 80005c8:	ea6f 0404 	mvn.w	r4, r4
 80005cc:	3c1f      	subs	r4, #31
 80005ce:	da1c      	bge.n	800060a <__adddf3+0x1d2>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc0e      	bgt.n	80005f2 <__adddf3+0x1ba>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0220 	rsb	r2, r4, #32
 80005dc:	fa20 f004 	lsr.w	r0, r0, r4
 80005e0:	fa01 f302 	lsl.w	r3, r1, r2
 80005e4:	ea40 0003 	orr.w	r0, r0, r3
 80005e8:	fa21 f304 	lsr.w	r3, r1, r4
 80005ec:	ea45 0103 	orr.w	r1, r5, r3
 80005f0:	bd30      	pop	{r4, r5, pc}
 80005f2:	f1c4 040c 	rsb	r4, r4, #12
 80005f6:	f1c4 0220 	rsb	r2, r4, #32
 80005fa:	fa20 f002 	lsr.w	r0, r0, r2
 80005fe:	fa01 f304 	lsl.w	r3, r1, r4
 8000602:	ea40 0003 	orr.w	r0, r0, r3
 8000606:	4629      	mov	r1, r5
 8000608:	bd30      	pop	{r4, r5, pc}
 800060a:	fa21 f004 	lsr.w	r0, r1, r4
 800060e:	4629      	mov	r1, r5
 8000610:	bd30      	pop	{r4, r5, pc}
 8000612:	f094 0f00 	teq	r4, #0
 8000616:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800061a:	bf06      	itte	eq
 800061c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000620:	3401      	addeq	r4, #1
 8000622:	3d01      	subne	r5, #1
 8000624:	e74e      	b.n	80004c4 <__adddf3+0x8c>
 8000626:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800062a:	bf18      	it	ne
 800062c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000630:	d029      	beq.n	8000686 <__adddf3+0x24e>
 8000632:	ea94 0f05 	teq	r4, r5
 8000636:	bf08      	it	eq
 8000638:	ea90 0f02 	teqeq	r0, r2
 800063c:	d005      	beq.n	800064a <__adddf3+0x212>
 800063e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000642:	bf04      	itt	eq
 8000644:	4619      	moveq	r1, r3
 8000646:	4610      	moveq	r0, r2
 8000648:	bd30      	pop	{r4, r5, pc}
 800064a:	ea91 0f03 	teq	r1, r3
 800064e:	bf1e      	ittt	ne
 8000650:	2100      	movne	r1, #0
 8000652:	2000      	movne	r0, #0
 8000654:	bd30      	popne	{r4, r5, pc}
 8000656:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800065a:	d105      	bne.n	8000668 <__adddf3+0x230>
 800065c:	0040      	lsls	r0, r0, #1
 800065e:	4149      	adcs	r1, r1
 8000660:	bf28      	it	cs
 8000662:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000666:	bd30      	pop	{r4, r5, pc}
 8000668:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800066c:	bf3c      	itt	cc
 800066e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000672:	bd30      	popcc	{r4, r5, pc}
 8000674:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000678:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800067c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000680:	f04f 0000 	mov.w	r0, #0
 8000684:	bd30      	pop	{r4, r5, pc}
 8000686:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800068a:	bf1a      	itte	ne
 800068c:	4619      	movne	r1, r3
 800068e:	4610      	movne	r0, r2
 8000690:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000694:	bf1c      	itt	ne
 8000696:	460b      	movne	r3, r1
 8000698:	4602      	movne	r2, r0
 800069a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800069e:	bf06      	itte	eq
 80006a0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80006a4:	ea91 0f03 	teqeq	r1, r3
 80006a8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80006ac:	bd30      	pop	{r4, r5, pc}
 80006ae:	bf00      	nop

080006b0 <__aeabi_ui2d>:
 80006b0:	f090 0f00 	teq	r0, #0
 80006b4:	bf04      	itt	eq
 80006b6:	2100      	moveq	r1, #0
 80006b8:	4770      	bxeq	lr
 80006ba:	b530      	push	{r4, r5, lr}
 80006bc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006c0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006c4:	f04f 0500 	mov.w	r5, #0
 80006c8:	f04f 0100 	mov.w	r1, #0
 80006cc:	e750      	b.n	8000570 <__adddf3+0x138>
 80006ce:	bf00      	nop

080006d0 <__aeabi_i2d>:
 80006d0:	f090 0f00 	teq	r0, #0
 80006d4:	bf04      	itt	eq
 80006d6:	2100      	moveq	r1, #0
 80006d8:	4770      	bxeq	lr
 80006da:	b530      	push	{r4, r5, lr}
 80006dc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006e0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006e4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80006e8:	bf48      	it	mi
 80006ea:	4240      	negmi	r0, r0
 80006ec:	f04f 0100 	mov.w	r1, #0
 80006f0:	e73e      	b.n	8000570 <__adddf3+0x138>
 80006f2:	bf00      	nop

080006f4 <__aeabi_f2d>:
 80006f4:	0042      	lsls	r2, r0, #1
 80006f6:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80006fa:	ea4f 0131 	mov.w	r1, r1, rrx
 80006fe:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000702:	bf1f      	itttt	ne
 8000704:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000708:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800070c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000710:	4770      	bxne	lr
 8000712:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000716:	bf08      	it	eq
 8000718:	4770      	bxeq	lr
 800071a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800071e:	bf04      	itt	eq
 8000720:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000724:	4770      	bxeq	lr
 8000726:	b530      	push	{r4, r5, lr}
 8000728:	f44f 7460 	mov.w	r4, #896	; 0x380
 800072c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	e71c      	b.n	8000570 <__adddf3+0x138>
 8000736:	bf00      	nop

08000738 <__aeabi_ul2d>:
 8000738:	ea50 0201 	orrs.w	r2, r0, r1
 800073c:	bf08      	it	eq
 800073e:	4770      	bxeq	lr
 8000740:	b530      	push	{r4, r5, lr}
 8000742:	f04f 0500 	mov.w	r5, #0
 8000746:	e00a      	b.n	800075e <__aeabi_l2d+0x16>

08000748 <__aeabi_l2d>:
 8000748:	ea50 0201 	orrs.w	r2, r0, r1
 800074c:	bf08      	it	eq
 800074e:	4770      	bxeq	lr
 8000750:	b530      	push	{r4, r5, lr}
 8000752:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000756:	d502      	bpl.n	800075e <__aeabi_l2d+0x16>
 8000758:	4240      	negs	r0, r0
 800075a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800075e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000762:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000766:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800076a:	f43f aed8 	beq.w	800051e <__adddf3+0xe6>
 800076e:	f04f 0203 	mov.w	r2, #3
 8000772:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000776:	bf18      	it	ne
 8000778:	3203      	addne	r2, #3
 800077a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800077e:	bf18      	it	ne
 8000780:	3203      	addne	r2, #3
 8000782:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000786:	f1c2 0320 	rsb	r3, r2, #32
 800078a:	fa00 fc03 	lsl.w	ip, r0, r3
 800078e:	fa20 f002 	lsr.w	r0, r0, r2
 8000792:	fa01 fe03 	lsl.w	lr, r1, r3
 8000796:	ea40 000e 	orr.w	r0, r0, lr
 800079a:	fa21 f102 	lsr.w	r1, r1, r2
 800079e:	4414      	add	r4, r2
 80007a0:	e6bd      	b.n	800051e <__adddf3+0xe6>
 80007a2:	bf00      	nop

080007a4 <__gedf2>:
 80007a4:	f04f 3cff 	mov.w	ip, #4294967295
 80007a8:	e006      	b.n	80007b8 <__cmpdf2+0x4>
 80007aa:	bf00      	nop

080007ac <__ledf2>:
 80007ac:	f04f 0c01 	mov.w	ip, #1
 80007b0:	e002      	b.n	80007b8 <__cmpdf2+0x4>
 80007b2:	bf00      	nop

080007b4 <__cmpdf2>:
 80007b4:	f04f 0c01 	mov.w	ip, #1
 80007b8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80007bc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80007c0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80007c4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80007c8:	bf18      	it	ne
 80007ca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80007ce:	d01b      	beq.n	8000808 <__cmpdf2+0x54>
 80007d0:	b001      	add	sp, #4
 80007d2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80007d6:	bf0c      	ite	eq
 80007d8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80007dc:	ea91 0f03 	teqne	r1, r3
 80007e0:	bf02      	ittt	eq
 80007e2:	ea90 0f02 	teqeq	r0, r2
 80007e6:	2000      	moveq	r0, #0
 80007e8:	4770      	bxeq	lr
 80007ea:	f110 0f00 	cmn.w	r0, #0
 80007ee:	ea91 0f03 	teq	r1, r3
 80007f2:	bf58      	it	pl
 80007f4:	4299      	cmppl	r1, r3
 80007f6:	bf08      	it	eq
 80007f8:	4290      	cmpeq	r0, r2
 80007fa:	bf2c      	ite	cs
 80007fc:	17d8      	asrcs	r0, r3, #31
 80007fe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000802:	f040 0001 	orr.w	r0, r0, #1
 8000806:	4770      	bx	lr
 8000808:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800080c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000810:	d102      	bne.n	8000818 <__cmpdf2+0x64>
 8000812:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000816:	d107      	bne.n	8000828 <__cmpdf2+0x74>
 8000818:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800081c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000820:	d1d6      	bne.n	80007d0 <__cmpdf2+0x1c>
 8000822:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000826:	d0d3      	beq.n	80007d0 <__cmpdf2+0x1c>
 8000828:	f85d 0b04 	ldr.w	r0, [sp], #4
 800082c:	4770      	bx	lr
 800082e:	bf00      	nop

08000830 <__aeabi_cdrcmple>:
 8000830:	4684      	mov	ip, r0
 8000832:	4610      	mov	r0, r2
 8000834:	4662      	mov	r2, ip
 8000836:	468c      	mov	ip, r1
 8000838:	4619      	mov	r1, r3
 800083a:	4663      	mov	r3, ip
 800083c:	e000      	b.n	8000840 <__aeabi_cdcmpeq>
 800083e:	bf00      	nop

08000840 <__aeabi_cdcmpeq>:
 8000840:	b501      	push	{r0, lr}
 8000842:	f7ff ffb7 	bl	80007b4 <__cmpdf2>
 8000846:	2800      	cmp	r0, #0
 8000848:	bf48      	it	mi
 800084a:	f110 0f00 	cmnmi.w	r0, #0
 800084e:	bd01      	pop	{r0, pc}

08000850 <__aeabi_dcmpeq>:
 8000850:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000854:	f7ff fff4 	bl	8000840 <__aeabi_cdcmpeq>
 8000858:	bf0c      	ite	eq
 800085a:	2001      	moveq	r0, #1
 800085c:	2000      	movne	r0, #0
 800085e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000862:	bf00      	nop

08000864 <__aeabi_dcmplt>:
 8000864:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000868:	f7ff ffea 	bl	8000840 <__aeabi_cdcmpeq>
 800086c:	bf34      	ite	cc
 800086e:	2001      	movcc	r0, #1
 8000870:	2000      	movcs	r0, #0
 8000872:	f85d fb08 	ldr.w	pc, [sp], #8
 8000876:	bf00      	nop

08000878 <__aeabi_dcmple>:
 8000878:	f84d ed08 	str.w	lr, [sp, #-8]!
 800087c:	f7ff ffe0 	bl	8000840 <__aeabi_cdcmpeq>
 8000880:	bf94      	ite	ls
 8000882:	2001      	movls	r0, #1
 8000884:	2000      	movhi	r0, #0
 8000886:	f85d fb08 	ldr.w	pc, [sp], #8
 800088a:	bf00      	nop

0800088c <__aeabi_dcmpge>:
 800088c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000890:	f7ff ffce 	bl	8000830 <__aeabi_cdrcmple>
 8000894:	bf94      	ite	ls
 8000896:	2001      	movls	r0, #1
 8000898:	2000      	movhi	r0, #0
 800089a:	f85d fb08 	ldr.w	pc, [sp], #8
 800089e:	bf00      	nop

080008a0 <__aeabi_dcmpgt>:
 80008a0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80008a4:	f7ff ffc4 	bl	8000830 <__aeabi_cdrcmple>
 80008a8:	bf34      	ite	cc
 80008aa:	2001      	movcc	r0, #1
 80008ac:	2000      	movcs	r0, #0
 80008ae:	f85d fb08 	ldr.w	pc, [sp], #8
 80008b2:	bf00      	nop

080008b4 <__aeabi_d2iz>:
 80008b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80008b8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 80008bc:	d215      	bcs.n	80008ea <__aeabi_d2iz+0x36>
 80008be:	d511      	bpl.n	80008e4 <__aeabi_d2iz+0x30>
 80008c0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 80008c4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80008c8:	d912      	bls.n	80008f0 <__aeabi_d2iz+0x3c>
 80008ca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80008ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80008d2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80008d6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80008da:	fa23 f002 	lsr.w	r0, r3, r2
 80008de:	bf18      	it	ne
 80008e0:	4240      	negne	r0, r0
 80008e2:	4770      	bx	lr
 80008e4:	f04f 0000 	mov.w	r0, #0
 80008e8:	4770      	bx	lr
 80008ea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80008ee:	d105      	bne.n	80008fc <__aeabi_d2iz+0x48>
 80008f0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 80008f4:	bf08      	it	eq
 80008f6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80008fa:	4770      	bx	lr
 80008fc:	f04f 0000 	mov.w	r0, #0
 8000900:	4770      	bx	lr
 8000902:	bf00      	nop

08000904 <__aeabi_d2uiz>:
 8000904:	004a      	lsls	r2, r1, #1
 8000906:	d211      	bcs.n	800092c <__aeabi_d2uiz+0x28>
 8000908:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 800090c:	d211      	bcs.n	8000932 <__aeabi_d2uiz+0x2e>
 800090e:	d50d      	bpl.n	800092c <__aeabi_d2uiz+0x28>
 8000910:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000914:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000918:	d40e      	bmi.n	8000938 <__aeabi_d2uiz+0x34>
 800091a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800091e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000922:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000926:	fa23 f002 	lsr.w	r0, r3, r2
 800092a:	4770      	bx	lr
 800092c:	f04f 0000 	mov.w	r0, #0
 8000930:	4770      	bx	lr
 8000932:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000936:	d102      	bne.n	800093e <__aeabi_d2uiz+0x3a>
 8000938:	f04f 30ff 	mov.w	r0, #4294967295
 800093c:	4770      	bx	lr
 800093e:	f04f 0000 	mov.w	r0, #0
 8000942:	4770      	bx	lr

08000944 <GC9A01_spi_tx>:
#define CS_OFF              GPIO_WritePin(SPI1_CS_Port, SPI1_CS_Pin, GPIO_LOW)

static void GC9A01_spi_tx(uint8_t *data, size_t len);

static void GC9A01_spi_tx(uint8_t *data, size_t len)
{
 8000944:	b580      	push	{r7, lr}
 8000946:	b082      	sub	sp, #8
 8000948:	af00      	add	r7, sp, #0
 800094a:	6078      	str	r0, [r7, #4]
 800094c:	6039      	str	r1, [r7, #0]

  SPI_Transmit(&HSPI1, (uint8_t*) data, len, 100);
 800094e:	683b      	ldr	r3, [r7, #0]
 8000950:	b29a      	uxth	r2, r3
 8000952:	2364      	movs	r3, #100	; 0x64
 8000954:	6879      	ldr	r1, [r7, #4]
 8000956:	4803      	ldr	r0, [pc, #12]	; (8000964 <GC9A01_spi_tx+0x20>)
 8000958:	f000 ff7c 	bl	8001854 <SPI_Transmit>


}
 800095c:	bf00      	nop
 800095e:	3708      	adds	r7, #8
 8000960:	46bd      	mov	sp, r7
 8000962:	bd80      	pop	{r7, pc}
 8000964:	20000000 	.word	0x20000000

08000968 <GC9A01_set_reset>:

void GC9A01_set_reset(uint8_t val)
{
 8000968:	b580      	push	{r7, lr}
 800096a:	b082      	sub	sp, #8
 800096c:	af00      	add	r7, sp, #0
 800096e:	4603      	mov	r3, r0
 8000970:	71fb      	strb	r3, [r7, #7]
	if (val == 0)
 8000972:	79fb      	ldrb	r3, [r7, #7]
 8000974:	2b00      	cmp	r3, #0
 8000976:	d105      	bne.n	8000984 <GC9A01_set_reset+0x1c>
	{
		RESET_OFF;
 8000978:	2200      	movs	r2, #0
 800097a:	210c      	movs	r1, #12
 800097c:	4806      	ldr	r0, [pc, #24]	; (8000998 <GC9A01_set_reset+0x30>)
 800097e:	f000 fe69 	bl	8001654 <GPIO_WritePin>
	}
	else
	{
		RESET_ON;
	}
}
 8000982:	e004      	b.n	800098e <GC9A01_set_reset+0x26>
		RESET_ON;
 8000984:	2201      	movs	r2, #1
 8000986:	210c      	movs	r1, #12
 8000988:	4803      	ldr	r0, [pc, #12]	; (8000998 <GC9A01_set_reset+0x30>)
 800098a:	f000 fe63 	bl	8001654 <GPIO_WritePin>
}
 800098e:	bf00      	nop
 8000990:	3708      	adds	r7, #8
 8000992:	46bd      	mov	sp, r7
 8000994:	bd80      	pop	{r7, pc}
 8000996:	bf00      	nop
 8000998:	40020000 	.word	0x40020000

0800099c <GC9A01_set_data_command>:

void GC9A01_set_data_command(uint8_t val)
{
 800099c:	b580      	push	{r7, lr}
 800099e:	b082      	sub	sp, #8
 80009a0:	af00      	add	r7, sp, #0
 80009a2:	4603      	mov	r3, r0
 80009a4:	71fb      	strb	r3, [r7, #7]
	if (val == 0)
 80009a6:	79fb      	ldrb	r3, [r7, #7]
 80009a8:	2b00      	cmp	r3, #0
 80009aa:	d105      	bne.n	80009b8 <GC9A01_set_data_command+0x1c>
	{
		DC_OFF;
 80009ac:	2200      	movs	r2, #0
 80009ae:	2101      	movs	r1, #1
 80009b0:	4806      	ldr	r0, [pc, #24]	; (80009cc <GC9A01_set_data_command+0x30>)
 80009b2:	f000 fe4f 	bl	8001654 <GPIO_WritePin>
	}
	else
	{
		DC_ON;
	}
}
 80009b6:	e004      	b.n	80009c2 <GC9A01_set_data_command+0x26>
		DC_ON;
 80009b8:	2201      	movs	r2, #1
 80009ba:	2101      	movs	r1, #1
 80009bc:	4803      	ldr	r0, [pc, #12]	; (80009cc <GC9A01_set_data_command+0x30>)
 80009be:	f000 fe49 	bl	8001654 <GPIO_WritePin>
}
 80009c2:	bf00      	nop
 80009c4:	3708      	adds	r7, #8
 80009c6:	46bd      	mov	sp, r7
 80009c8:	bd80      	pop	{r7, pc}
 80009ca:	bf00      	nop
 80009cc:	40020000 	.word	0x40020000

080009d0 <GC9A01_set_chip_select>:

void GC9A01_set_chip_select(uint8_t val)
{
 80009d0:	b580      	push	{r7, lr}
 80009d2:	b082      	sub	sp, #8
 80009d4:	af00      	add	r7, sp, #0
 80009d6:	4603      	mov	r3, r0
 80009d8:	71fb      	strb	r3, [r7, #7]
	if (val == 0)
 80009da:	79fb      	ldrb	r3, [r7, #7]
 80009dc:	2b00      	cmp	r3, #0
 80009de:	d105      	bne.n	80009ec <GC9A01_set_chip_select+0x1c>
	{
		CS_OFF;
 80009e0:	2200      	movs	r2, #0
 80009e2:	2104      	movs	r1, #4
 80009e4:	4806      	ldr	r0, [pc, #24]	; (8000a00 <GC9A01_set_chip_select+0x30>)
 80009e6:	f000 fe35 	bl	8001654 <GPIO_WritePin>
	}
	else
	{
		CS_ON;
	}
}
 80009ea:	e004      	b.n	80009f6 <GC9A01_set_chip_select+0x26>
		CS_ON;
 80009ec:	2201      	movs	r2, #1
 80009ee:	2104      	movs	r1, #4
 80009f0:	4803      	ldr	r0, [pc, #12]	; (8000a00 <GC9A01_set_chip_select+0x30>)
 80009f2:	f000 fe2f 	bl	8001654 <GPIO_WritePin>
}
 80009f6:	bf00      	nop
 80009f8:	3708      	adds	r7, #8
 80009fa:	46bd      	mov	sp, r7
 80009fc:	bd80      	pop	{r7, pc}
 80009fe:	bf00      	nop
 8000a00:	40020000 	.word	0x40020000

08000a04 <GC9A01_write_command>:

void GC9A01_write_command(uint8_t cmd)
{
 8000a04:	b580      	push	{r7, lr}
 8000a06:	b082      	sub	sp, #8
 8000a08:	af00      	add	r7, sp, #0
 8000a0a:	4603      	mov	r3, r0
 8000a0c:	71fb      	strb	r3, [r7, #7]
	GC9A01_set_data_command(OFF);
 8000a0e:	2000      	movs	r0, #0
 8000a10:	f7ff ffc4 	bl	800099c <GC9A01_set_data_command>
	GC9A01_set_chip_select(OFF);
 8000a14:	2000      	movs	r0, #0
 8000a16:	f7ff ffdb 	bl	80009d0 <GC9A01_set_chip_select>
	GC9A01_spi_tx(&cmd, sizeof(cmd));
 8000a1a:	1dfb      	adds	r3, r7, #7
 8000a1c:	2101      	movs	r1, #1
 8000a1e:	4618      	mov	r0, r3
 8000a20:	f7ff ff90 	bl	8000944 <GC9A01_spi_tx>
	GC9A01_set_chip_select(ON);
 8000a24:	2001      	movs	r0, #1
 8000a26:	f7ff ffd3 	bl	80009d0 <GC9A01_set_chip_select>
}
 8000a2a:	bf00      	nop
 8000a2c:	3708      	adds	r7, #8
 8000a2e:	46bd      	mov	sp, r7
 8000a30:	bd80      	pop	{r7, pc}

08000a32 <GC9A01_write_data>:

void GC9A01_write_data(uint8_t *data, size_t len)
{
 8000a32:	b580      	push	{r7, lr}
 8000a34:	b082      	sub	sp, #8
 8000a36:	af00      	add	r7, sp, #0
 8000a38:	6078      	str	r0, [r7, #4]
 8000a3a:	6039      	str	r1, [r7, #0]
	GC9A01_set_data_command(ON);
 8000a3c:	2001      	movs	r0, #1
 8000a3e:	f7ff ffad 	bl	800099c <GC9A01_set_data_command>
	GC9A01_set_chip_select(OFF);
 8000a42:	2000      	movs	r0, #0
 8000a44:	f7ff ffc4 	bl	80009d0 <GC9A01_set_chip_select>
	GC9A01_spi_tx(data, len);
 8000a48:	6839      	ldr	r1, [r7, #0]
 8000a4a:	6878      	ldr	r0, [r7, #4]
 8000a4c:	f7ff ff7a 	bl	8000944 <GC9A01_spi_tx>
	GC9A01_set_chip_select(ON);
 8000a50:	2001      	movs	r0, #1
 8000a52:	f7ff ffbd 	bl	80009d0 <GC9A01_set_chip_select>
}
 8000a56:	bf00      	nop
 8000a58:	3708      	adds	r7, #8
 8000a5a:	46bd      	mov	sp, r7
 8000a5c:	bd80      	pop	{r7, pc}

08000a5e <GC9A01_write_byte>:

static inline void GC9A01_write_byte(uint8_t val)
{
 8000a5e:	b580      	push	{r7, lr}
 8000a60:	b082      	sub	sp, #8
 8000a62:	af00      	add	r7, sp, #0
 8000a64:	4603      	mov	r3, r0
 8000a66:	71fb      	strb	r3, [r7, #7]
	GC9A01_write_data(&val, sizeof(val));
 8000a68:	1dfb      	adds	r3, r7, #7
 8000a6a:	2101      	movs	r1, #1
 8000a6c:	4618      	mov	r0, r3
 8000a6e:	f7ff ffe0 	bl	8000a32 <GC9A01_write_data>
}
 8000a72:	bf00      	nop
 8000a74:	3708      	adds	r7, #8
 8000a76:	46bd      	mov	sp, r7
 8000a78:	bd80      	pop	{r7, pc}

08000a7a <GC9A01_write>:

void GC9A01_write(uint8_t *data, size_t len)
{
 8000a7a:	b580      	push	{r7, lr}
 8000a7c:	b082      	sub	sp, #8
 8000a7e:	af00      	add	r7, sp, #0
 8000a80:	6078      	str	r0, [r7, #4]
 8000a82:	6039      	str	r1, [r7, #0]
	GC9A01_write_command(MEM_WR);
 8000a84:	202c      	movs	r0, #44	; 0x2c
 8000a86:	f7ff ffbd 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_data(data, len);
 8000a8a:	6839      	ldr	r1, [r7, #0]
 8000a8c:	6878      	ldr	r0, [r7, #4]
 8000a8e:	f7ff ffd0 	bl	8000a32 <GC9A01_write_data>
}
 8000a92:	bf00      	nop
 8000a94:	3708      	adds	r7, #8
 8000a96:	46bd      	mov	sp, r7
 8000a98:	bd80      	pop	{r7, pc}

08000a9a <GC9A01_write_continue>:

void GC9A01_write_continue(uint8_t *data, size_t len)
{
 8000a9a:	b580      	push	{r7, lr}
 8000a9c:	b082      	sub	sp, #8
 8000a9e:	af00      	add	r7, sp, #0
 8000aa0:	6078      	str	r0, [r7, #4]
 8000aa2:	6039      	str	r1, [r7, #0]
	GC9A01_write_command(MEM_WR_CONT);
 8000aa4:	203c      	movs	r0, #60	; 0x3c
 8000aa6:	f7ff ffad 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_data(data, len);
 8000aaa:	6839      	ldr	r1, [r7, #0]
 8000aac:	6878      	ldr	r0, [r7, #4]
 8000aae:	f7ff ffc0 	bl	8000a32 <GC9A01_write_data>
}
 8000ab2:	bf00      	nop
 8000ab4:	3708      	adds	r7, #8
 8000ab6:	46bd      	mov	sp, r7
 8000ab8:	bd80      	pop	{r7, pc}

08000aba <GC9A01_init>:

void GC9A01_init(void)
{
 8000aba:	b580      	push	{r7, lr}
 8000abc:	af00      	add	r7, sp, #0

	GC9A01_set_chip_select(ON);
 8000abe:	2001      	movs	r0, #1
 8000ac0:	f7ff ff86 	bl	80009d0 <GC9A01_set_chip_select>
	Time_Delay_Ms(5);
 8000ac4:	2005      	movs	r0, #5
 8000ac6:	f000 ff29 	bl	800191c <Time_Delay_Ms>
	GC9A01_set_reset(OFF);
 8000aca:	2000      	movs	r0, #0
 8000acc:	f7ff ff4c 	bl	8000968 <GC9A01_set_reset>
	Time_Delay_Ms(10);
 8000ad0:	200a      	movs	r0, #10
 8000ad2:	f000 ff23 	bl	800191c <Time_Delay_Ms>
	GC9A01_set_reset(ON);
 8000ad6:	2001      	movs	r0, #1
 8000ad8:	f7ff ff46 	bl	8000968 <GC9A01_set_reset>
	Time_Delay_Ms(120);
 8000adc:	2078      	movs	r0, #120	; 0x78
 8000ade:	f000 ff1d 	bl	800191c <Time_Delay_Ms>

	/* Initial Sequence */

	GC9A01_write_command(0xEF);
 8000ae2:	20ef      	movs	r0, #239	; 0xef
 8000ae4:	f7ff ff8e 	bl	8000a04 <GC9A01_write_command>

	GC9A01_write_command(0xEB);
 8000ae8:	20eb      	movs	r0, #235	; 0xeb
 8000aea:	f7ff ff8b 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x14);
 8000aee:	2014      	movs	r0, #20
 8000af0:	f7ff ffb5 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xFE);
 8000af4:	20fe      	movs	r0, #254	; 0xfe
 8000af6:	f7ff ff85 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_command(0xEF);
 8000afa:	20ef      	movs	r0, #239	; 0xef
 8000afc:	f7ff ff82 	bl	8000a04 <GC9A01_write_command>

	GC9A01_write_command(0xEB);
 8000b00:	20eb      	movs	r0, #235	; 0xeb
 8000b02:	f7ff ff7f 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x14);
 8000b06:	2014      	movs	r0, #20
 8000b08:	f7ff ffa9 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x84);
 8000b0c:	2084      	movs	r0, #132	; 0x84
 8000b0e:	f7ff ff79 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x40);
 8000b12:	2040      	movs	r0, #64	; 0x40
 8000b14:	f7ff ffa3 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x85);
 8000b18:	2085      	movs	r0, #133	; 0x85
 8000b1a:	f7ff ff73 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0xFF);
 8000b1e:	20ff      	movs	r0, #255	; 0xff
 8000b20:	f7ff ff9d 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x86);
 8000b24:	2086      	movs	r0, #134	; 0x86
 8000b26:	f7ff ff6d 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0xFF);
 8000b2a:	20ff      	movs	r0, #255	; 0xff
 8000b2c:	f7ff ff97 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x87);
 8000b30:	2087      	movs	r0, #135	; 0x87
 8000b32:	f7ff ff67 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0xFF);
 8000b36:	20ff      	movs	r0, #255	; 0xff
 8000b38:	f7ff ff91 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x88);
 8000b3c:	2088      	movs	r0, #136	; 0x88
 8000b3e:	f7ff ff61 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x0A);
 8000b42:	200a      	movs	r0, #10
 8000b44:	f7ff ff8b 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x89);
 8000b48:	2089      	movs	r0, #137	; 0x89
 8000b4a:	f7ff ff5b 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x21);
 8000b4e:	2021      	movs	r0, #33	; 0x21
 8000b50:	f7ff ff85 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x8A);
 8000b54:	208a      	movs	r0, #138	; 0x8a
 8000b56:	f7ff ff55 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x00);
 8000b5a:	2000      	movs	r0, #0
 8000b5c:	f7ff ff7f 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x8B);
 8000b60:	208b      	movs	r0, #139	; 0x8b
 8000b62:	f7ff ff4f 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x80);
 8000b66:	2080      	movs	r0, #128	; 0x80
 8000b68:	f7ff ff79 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x8C);
 8000b6c:	208c      	movs	r0, #140	; 0x8c
 8000b6e:	f7ff ff49 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x01);
 8000b72:	2001      	movs	r0, #1
 8000b74:	f7ff ff73 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x8D);
 8000b78:	208d      	movs	r0, #141	; 0x8d
 8000b7a:	f7ff ff43 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x01);
 8000b7e:	2001      	movs	r0, #1
 8000b80:	f7ff ff6d 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x8E);
 8000b84:	208e      	movs	r0, #142	; 0x8e
 8000b86:	f7ff ff3d 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0xFF);
 8000b8a:	20ff      	movs	r0, #255	; 0xff
 8000b8c:	f7ff ff67 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x8F);
 8000b90:	208f      	movs	r0, #143	; 0x8f
 8000b92:	f7ff ff37 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0xFF);
 8000b96:	20ff      	movs	r0, #255	; 0xff
 8000b98:	f7ff ff61 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xB6);
 8000b9c:	20b6      	movs	r0, #182	; 0xb6
 8000b9e:	f7ff ff31 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x00);
 8000ba2:	2000      	movs	r0, #0
 8000ba4:	f7ff ff5b 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000ba8:	2000      	movs	r0, #0
 8000baa:	f7ff ff58 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x36);
 8000bae:	2036      	movs	r0, #54	; 0x36
 8000bb0:	f7ff ff28 	bl	8000a04 <GC9A01_write_command>
#if ORIENTATION == 0
    GC9A01_write_byte(0x18);
#elif ORIENTATION == 1
    GC9A01_write_byte(0x28);
#elif ORIENTATION == 2
	GC9A01_write_byte(0x48);
 8000bb4:	2048      	movs	r0, #72	; 0x48
 8000bb6:	f7ff ff52 	bl	8000a5e <GC9A01_write_byte>
#else
    GC9A01_write_byte(0x88);
#endif

	GC9A01_write_command(COLOR_MODE);
 8000bba:	203a      	movs	r0, #58	; 0x3a
 8000bbc:	f7ff ff22 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(COLOR_MODE__18_BIT);
 8000bc0:	2006      	movs	r0, #6
 8000bc2:	f7ff ff4c 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x90);
 8000bc6:	2090      	movs	r0, #144	; 0x90
 8000bc8:	f7ff ff1c 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x08);
 8000bcc:	2008      	movs	r0, #8
 8000bce:	f7ff ff46 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000bd2:	2008      	movs	r0, #8
 8000bd4:	f7ff ff43 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000bd8:	2008      	movs	r0, #8
 8000bda:	f7ff ff40 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000bde:	2008      	movs	r0, #8
 8000be0:	f7ff ff3d 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xBD);
 8000be4:	20bd      	movs	r0, #189	; 0xbd
 8000be6:	f7ff ff0d 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x06);
 8000bea:	2006      	movs	r0, #6
 8000bec:	f7ff ff37 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xBC);
 8000bf0:	20bc      	movs	r0, #188	; 0xbc
 8000bf2:	f7ff ff07 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x00);
 8000bf6:	2000      	movs	r0, #0
 8000bf8:	f7ff ff31 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xFF);
 8000bfc:	20ff      	movs	r0, #255	; 0xff
 8000bfe:	f7ff ff01 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x60);
 8000c02:	2060      	movs	r0, #96	; 0x60
 8000c04:	f7ff ff2b 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x01);
 8000c08:	2001      	movs	r0, #1
 8000c0a:	f7ff ff28 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x04);
 8000c0e:	2004      	movs	r0, #4
 8000c10:	f7ff ff25 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xC3);
 8000c14:	20c3      	movs	r0, #195	; 0xc3
 8000c16:	f7ff fef5 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x13);
 8000c1a:	2013      	movs	r0, #19
 8000c1c:	f7ff ff1f 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_command(0xC4);
 8000c20:	20c4      	movs	r0, #196	; 0xc4
 8000c22:	f7ff feef 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x13);
 8000c26:	2013      	movs	r0, #19
 8000c28:	f7ff ff19 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xC9);
 8000c2c:	20c9      	movs	r0, #201	; 0xc9
 8000c2e:	f7ff fee9 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x22);
 8000c32:	2022      	movs	r0, #34	; 0x22
 8000c34:	f7ff ff13 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xBE);
 8000c38:	20be      	movs	r0, #190	; 0xbe
 8000c3a:	f7ff fee3 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x11);
 8000c3e:	2011      	movs	r0, #17
 8000c40:	f7ff ff0d 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xE1);
 8000c44:	20e1      	movs	r0, #225	; 0xe1
 8000c46:	f7ff fedd 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x10);
 8000c4a:	2010      	movs	r0, #16
 8000c4c:	f7ff ff07 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0E);
 8000c50:	200e      	movs	r0, #14
 8000c52:	f7ff ff04 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xDF);
 8000c56:	20df      	movs	r0, #223	; 0xdf
 8000c58:	f7ff fed4 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x21);
 8000c5c:	2021      	movs	r0, #33	; 0x21
 8000c5e:	f7ff fefe 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0c);
 8000c62:	200c      	movs	r0, #12
 8000c64:	f7ff fefb 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x02);
 8000c68:	2002      	movs	r0, #2
 8000c6a:	f7ff fef8 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xF0);
 8000c6e:	20f0      	movs	r0, #240	; 0xf0
 8000c70:	f7ff fec8 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x45);
 8000c74:	2045      	movs	r0, #69	; 0x45
 8000c76:	f7ff fef2 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x09);
 8000c7a:	2009      	movs	r0, #9
 8000c7c:	f7ff feef 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000c80:	2008      	movs	r0, #8
 8000c82:	f7ff feec 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000c86:	2008      	movs	r0, #8
 8000c88:	f7ff fee9 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x26);
 8000c8c:	2026      	movs	r0, #38	; 0x26
 8000c8e:	f7ff fee6 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x2A);
 8000c92:	202a      	movs	r0, #42	; 0x2a
 8000c94:	f7ff fee3 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xF1);
 8000c98:	20f1      	movs	r0, #241	; 0xf1
 8000c9a:	f7ff feb3 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x43);
 8000c9e:	2043      	movs	r0, #67	; 0x43
 8000ca0:	f7ff fedd 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000ca4:	2070      	movs	r0, #112	; 0x70
 8000ca6:	f7ff feda 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x72);
 8000caa:	2072      	movs	r0, #114	; 0x72
 8000cac:	f7ff fed7 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x36);
 8000cb0:	2036      	movs	r0, #54	; 0x36
 8000cb2:	f7ff fed4 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x37);
 8000cb6:	2037      	movs	r0, #55	; 0x37
 8000cb8:	f7ff fed1 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x6F);
 8000cbc:	206f      	movs	r0, #111	; 0x6f
 8000cbe:	f7ff fece 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xF2);
 8000cc2:	20f2      	movs	r0, #242	; 0xf2
 8000cc4:	f7ff fe9e 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x45);
 8000cc8:	2045      	movs	r0, #69	; 0x45
 8000cca:	f7ff fec8 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x09);
 8000cce:	2009      	movs	r0, #9
 8000cd0:	f7ff fec5 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000cd4:	2008      	movs	r0, #8
 8000cd6:	f7ff fec2 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000cda:	2008      	movs	r0, #8
 8000cdc:	f7ff febf 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x26);
 8000ce0:	2026      	movs	r0, #38	; 0x26
 8000ce2:	f7ff febc 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x2A);
 8000ce6:	202a      	movs	r0, #42	; 0x2a
 8000ce8:	f7ff feb9 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xF3);
 8000cec:	20f3      	movs	r0, #243	; 0xf3
 8000cee:	f7ff fe89 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x43);
 8000cf2:	2043      	movs	r0, #67	; 0x43
 8000cf4:	f7ff feb3 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000cf8:	2070      	movs	r0, #112	; 0x70
 8000cfa:	f7ff feb0 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x72);
 8000cfe:	2072      	movs	r0, #114	; 0x72
 8000d00:	f7ff fead 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x36);
 8000d04:	2036      	movs	r0, #54	; 0x36
 8000d06:	f7ff feaa 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x37);
 8000d0a:	2037      	movs	r0, #55	; 0x37
 8000d0c:	f7ff fea7 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x6F);
 8000d10:	206f      	movs	r0, #111	; 0x6f
 8000d12:	f7ff fea4 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xED);
 8000d16:	20ed      	movs	r0, #237	; 0xed
 8000d18:	f7ff fe74 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x1B);
 8000d1c:	201b      	movs	r0, #27
 8000d1e:	f7ff fe9e 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0B);
 8000d22:	200b      	movs	r0, #11
 8000d24:	f7ff fe9b 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xAE);
 8000d28:	20ae      	movs	r0, #174	; 0xae
 8000d2a:	f7ff fe6b 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x77);
 8000d2e:	2077      	movs	r0, #119	; 0x77
 8000d30:	f7ff fe95 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xCD);
 8000d34:	20cd      	movs	r0, #205	; 0xcd
 8000d36:	f7ff fe65 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x63);
 8000d3a:	2063      	movs	r0, #99	; 0x63
 8000d3c:	f7ff fe8f 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x70);
 8000d40:	2070      	movs	r0, #112	; 0x70
 8000d42:	f7ff fe5f 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x07);
 8000d46:	2007      	movs	r0, #7
 8000d48:	f7ff fe89 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x07);
 8000d4c:	2007      	movs	r0, #7
 8000d4e:	f7ff fe86 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x04);
 8000d52:	2004      	movs	r0, #4
 8000d54:	f7ff fe83 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0E);
 8000d58:	200e      	movs	r0, #14
 8000d5a:	f7ff fe80 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0F);
 8000d5e:	200f      	movs	r0, #15
 8000d60:	f7ff fe7d 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x09);
 8000d64:	2009      	movs	r0, #9
 8000d66:	f7ff fe7a 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x07);
 8000d6a:	2007      	movs	r0, #7
 8000d6c:	f7ff fe77 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x08);
 8000d70:	2008      	movs	r0, #8
 8000d72:	f7ff fe74 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x03);
 8000d76:	2003      	movs	r0, #3
 8000d78:	f7ff fe71 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0xE8);
 8000d7c:	20e8      	movs	r0, #232	; 0xe8
 8000d7e:	f7ff fe41 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x34);
 8000d82:	2034      	movs	r0, #52	; 0x34
 8000d84:	f7ff fe6b 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x62);
 8000d88:	2062      	movs	r0, #98	; 0x62
 8000d8a:	f7ff fe3b 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x18);
 8000d8e:	2018      	movs	r0, #24
 8000d90:	f7ff fe65 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0D);
 8000d94:	200d      	movs	r0, #13
 8000d96:	f7ff fe62 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x71);
 8000d9a:	2071      	movs	r0, #113	; 0x71
 8000d9c:	f7ff fe5f 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xED);
 8000da0:	20ed      	movs	r0, #237	; 0xed
 8000da2:	f7ff fe5c 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000da6:	2070      	movs	r0, #112	; 0x70
 8000da8:	f7ff fe59 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000dac:	2070      	movs	r0, #112	; 0x70
 8000dae:	f7ff fe56 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x18);
 8000db2:	2018      	movs	r0, #24
 8000db4:	f7ff fe53 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x0F);
 8000db8:	200f      	movs	r0, #15
 8000dba:	f7ff fe50 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x71);
 8000dbe:	2071      	movs	r0, #113	; 0x71
 8000dc0:	f7ff fe4d 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xEF);
 8000dc4:	20ef      	movs	r0, #239	; 0xef
 8000dc6:	f7ff fe4a 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000dca:	2070      	movs	r0, #112	; 0x70
 8000dcc:	f7ff fe47 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000dd0:	2070      	movs	r0, #112	; 0x70
 8000dd2:	f7ff fe44 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x63);
 8000dd6:	2063      	movs	r0, #99	; 0x63
 8000dd8:	f7ff fe14 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x18);
 8000ddc:	2018      	movs	r0, #24
 8000dde:	f7ff fe3e 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x11);
 8000de2:	2011      	movs	r0, #17
 8000de4:	f7ff fe3b 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x71);
 8000de8:	2071      	movs	r0, #113	; 0x71
 8000dea:	f7ff fe38 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xF1);
 8000dee:	20f1      	movs	r0, #241	; 0xf1
 8000df0:	f7ff fe35 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000df4:	2070      	movs	r0, #112	; 0x70
 8000df6:	f7ff fe32 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000dfa:	2070      	movs	r0, #112	; 0x70
 8000dfc:	f7ff fe2f 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x18);
 8000e00:	2018      	movs	r0, #24
 8000e02:	f7ff fe2c 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x13);
 8000e06:	2013      	movs	r0, #19
 8000e08:	f7ff fe29 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x71);
 8000e0c:	2071      	movs	r0, #113	; 0x71
 8000e0e:	f7ff fe26 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xF3);
 8000e12:	20f3      	movs	r0, #243	; 0xf3
 8000e14:	f7ff fe23 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000e18:	2070      	movs	r0, #112	; 0x70
 8000e1a:	f7ff fe20 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x70);
 8000e1e:	2070      	movs	r0, #112	; 0x70
 8000e20:	f7ff fe1d 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x64);
 8000e24:	2064      	movs	r0, #100	; 0x64
 8000e26:	f7ff fded 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x28);
 8000e2a:	2028      	movs	r0, #40	; 0x28
 8000e2c:	f7ff fe17 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x29);
 8000e30:	2029      	movs	r0, #41	; 0x29
 8000e32:	f7ff fe14 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xF1);
 8000e36:	20f1      	movs	r0, #241	; 0xf1
 8000e38:	f7ff fe11 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x01);
 8000e3c:	2001      	movs	r0, #1
 8000e3e:	f7ff fe0e 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xF1);
 8000e42:	20f1      	movs	r0, #241	; 0xf1
 8000e44:	f7ff fe0b 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000e48:	2000      	movs	r0, #0
 8000e4a:	f7ff fe08 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x07);
 8000e4e:	2007      	movs	r0, #7
 8000e50:	f7ff fe05 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x66);
 8000e54:	2066      	movs	r0, #102	; 0x66
 8000e56:	f7ff fdd5 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x3C);
 8000e5a:	203c      	movs	r0, #60	; 0x3c
 8000e5c:	f7ff fdff 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000e60:	2000      	movs	r0, #0
 8000e62:	f7ff fdfc 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0xCD);
 8000e66:	20cd      	movs	r0, #205	; 0xcd
 8000e68:	f7ff fdf9 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x67);
 8000e6c:	2067      	movs	r0, #103	; 0x67
 8000e6e:	f7ff fdf6 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x45);
 8000e72:	2045      	movs	r0, #69	; 0x45
 8000e74:	f7ff fdf3 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x45);
 8000e78:	2045      	movs	r0, #69	; 0x45
 8000e7a:	f7ff fdf0 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x10);
 8000e7e:	2010      	movs	r0, #16
 8000e80:	f7ff fded 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000e84:	2000      	movs	r0, #0
 8000e86:	f7ff fdea 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000e8a:	2000      	movs	r0, #0
 8000e8c:	f7ff fde7 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000e90:	2000      	movs	r0, #0
 8000e92:	f7ff fde4 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x67);
 8000e96:	2067      	movs	r0, #103	; 0x67
 8000e98:	f7ff fdb4 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x00);
 8000e9c:	2000      	movs	r0, #0
 8000e9e:	f7ff fdde 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x3C);
 8000ea2:	203c      	movs	r0, #60	; 0x3c
 8000ea4:	f7ff fddb 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000ea8:	2000      	movs	r0, #0
 8000eaa:	f7ff fdd8 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000eae:	2000      	movs	r0, #0
 8000eb0:	f7ff fdd5 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000eb4:	2000      	movs	r0, #0
 8000eb6:	f7ff fdd2 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x01);
 8000eba:	2001      	movs	r0, #1
 8000ebc:	f7ff fdcf 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x54);
 8000ec0:	2054      	movs	r0, #84	; 0x54
 8000ec2:	f7ff fdcc 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x10);
 8000ec6:	2010      	movs	r0, #16
 8000ec8:	f7ff fdc9 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x32);
 8000ecc:	2032      	movs	r0, #50	; 0x32
 8000ece:	f7ff fdc6 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x98);
 8000ed2:	2098      	movs	r0, #152	; 0x98
 8000ed4:	f7ff fdc3 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x74);
 8000ed8:	2074      	movs	r0, #116	; 0x74
 8000eda:	f7ff fd93 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x10);
 8000ede:	2010      	movs	r0, #16
 8000ee0:	f7ff fdbd 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x85);
 8000ee4:	2085      	movs	r0, #133	; 0x85
 8000ee6:	f7ff fdba 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x80);
 8000eea:	2080      	movs	r0, #128	; 0x80
 8000eec:	f7ff fdb7 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000ef0:	2000      	movs	r0, #0
 8000ef2:	f7ff fdb4 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000ef6:	2000      	movs	r0, #0
 8000ef8:	f7ff fdb1 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x4E);
 8000efc:	204e      	movs	r0, #78	; 0x4e
 8000efe:	f7ff fdae 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x00);
 8000f02:	2000      	movs	r0, #0
 8000f04:	f7ff fdab 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x98);
 8000f08:	2098      	movs	r0, #152	; 0x98
 8000f0a:	f7ff fd7b 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_byte(0x3e);
 8000f0e:	203e      	movs	r0, #62	; 0x3e
 8000f10:	f7ff fda5 	bl	8000a5e <GC9A01_write_byte>
	GC9A01_write_byte(0x07);
 8000f14:	2007      	movs	r0, #7
 8000f16:	f7ff fda2 	bl	8000a5e <GC9A01_write_byte>

	GC9A01_write_command(0x35);
 8000f1a:	2035      	movs	r0, #53	; 0x35
 8000f1c:	f7ff fd72 	bl	8000a04 <GC9A01_write_command>
	GC9A01_write_command(0x21);
 8000f20:	2021      	movs	r0, #33	; 0x21
 8000f22:	f7ff fd6f 	bl	8000a04 <GC9A01_write_command>

	GC9A01_write_command(0x11);
 8000f26:	2011      	movs	r0, #17
 8000f28:	f7ff fd6c 	bl	8000a04 <GC9A01_write_command>
	Time_Delay_Ms(120);
 8000f2c:	2078      	movs	r0, #120	; 0x78
 8000f2e:	f000 fcf5 	bl	800191c <Time_Delay_Ms>
	GC9A01_write_command(0x29);
 8000f32:	2029      	movs	r0, #41	; 0x29
 8000f34:	f7ff fd66 	bl	8000a04 <GC9A01_write_command>
	Time_Delay_Ms(20);
 8000f38:	2014      	movs	r0, #20
 8000f3a:	f000 fcef 	bl	800191c <Time_Delay_Ms>

}
 8000f3e:	bf00      	nop
 8000f40:	bd80      	pop	{r7, pc}
	...

08000f44 <GPIO_Configure>:
/**
 * @brief Configure GPIO pins
 *
 */
static void GPIO_Configure(void)
{
 8000f44:	b580      	push	{r7, lr}
 8000f46:	af00      	add	r7, sp, #0
	/*Start the GPIOA clock*/
	GPIO_Clock_Init(GPIOA_CLK);
 8000f48:	2000      	movs	r0, #0
 8000f4a:	f000 fa19 	bl	8001380 <GPIO_Clock_Init>

	/*Start the GPIOC clock*/
	GPIO_Clock_Init(GPIOC_CLK);
 8000f4e:	2002      	movs	r0, #2
 8000f50:	f000 fa16 	bl	8001380 <GPIO_Clock_Init>

	/*LCD Rst Pin*/
	GPIO_PinConfig(GPIO_MODE_OUTPUT, LCD_RST_Port, LCD_RST_Pin);
 8000f54:	220c      	movs	r2, #12
 8000f56:	491e      	ldr	r1, [pc, #120]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f58:	2001      	movs	r0, #1
 8000f5a:	f000 fa4b 	bl	80013f4 <GPIO_PinConfig>
	GPIO_SetOutputType(GPIO_OUT_PUSH_PULL, LCD_RST_Port, LCD_RST_Pin);
 8000f5e:	220c      	movs	r2, #12
 8000f60:	491b      	ldr	r1, [pc, #108]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f62:	2000      	movs	r0, #0
 8000f64:	f000 fad4 	bl	8001510 <GPIO_SetOutputType>
	GPIO_SetOutputSpeed(GPIO_OUT_SPEED_HIGH, LCD_RST_Port, LCD_RST_Pin);
 8000f68:	220c      	movs	r2, #12
 8000f6a:	4919      	ldr	r1, [pc, #100]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f6c:	2002      	movs	r0, #2
 8000f6e:	f000 faf9 	bl	8001564 <GPIO_SetOutputSpeed>

	/*LCD DC Pin*/
	GPIO_PinConfig(GPIO_MODE_OUTPUT, LCD_DC_Port, LCD_DC_Pin);
 8000f72:	2201      	movs	r2, #1
 8000f74:	4916      	ldr	r1, [pc, #88]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f76:	2001      	movs	r0, #1
 8000f78:	f000 fa3c 	bl	80013f4 <GPIO_PinConfig>
	GPIO_SetOutputType(GPIO_OUT_PUSH_PULL, LCD_DC_Port, LCD_DC_Pin);
 8000f7c:	2201      	movs	r2, #1
 8000f7e:	4914      	ldr	r1, [pc, #80]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f80:	2000      	movs	r0, #0
 8000f82:	f000 fac5 	bl	8001510 <GPIO_SetOutputType>
	GPIO_SetOutputSpeed(GPIO_OUT_SPEED_HIGH, LCD_DC_Port, LCD_DC_Pin);
 8000f86:	2201      	movs	r2, #1
 8000f88:	4911      	ldr	r1, [pc, #68]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f8a:	2002      	movs	r0, #2
 8000f8c:	f000 faea 	bl	8001564 <GPIO_SetOutputSpeed>

	/*LCD SPI chip select*/
	GPIO_PinConfig(GPIO_MODE_OUTPUT, SPI1_CS_Port, SPI1_CS_Pin);
 8000f90:	2204      	movs	r2, #4
 8000f92:	490f      	ldr	r1, [pc, #60]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f94:	2001      	movs	r0, #1
 8000f96:	f000 fa2d 	bl	80013f4 <GPIO_PinConfig>
	GPIO_SetOutputType(GPIO_OUT_PUSH_PULL, SPI1_CS_Port, SPI1_CS_Pin);
 8000f9a:	2204      	movs	r2, #4
 8000f9c:	490c      	ldr	r1, [pc, #48]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000f9e:	2000      	movs	r0, #0
 8000fa0:	f000 fab6 	bl	8001510 <GPIO_SetOutputType>
	GPIO_SetOutputSpeed(GPIO_OUT_SPEED_HIGH, SPI1_CS_Port, SPI1_CS_Pin);
 8000fa4:	2204      	movs	r2, #4
 8000fa6:	490a      	ldr	r1, [pc, #40]	; (8000fd0 <GPIO_Configure+0x8c>)
 8000fa8:	2002      	movs	r0, #2
 8000faa:	f000 fadb 	bl	8001564 <GPIO_SetOutputSpeed>

	/*User LED Pin*/
	GPIO_PinConfig(GPIO_MODE_OUTPUT, LED_Port, LED_Pin);
 8000fae:	220d      	movs	r2, #13
 8000fb0:	4908      	ldr	r1, [pc, #32]	; (8000fd4 <GPIO_Configure+0x90>)
 8000fb2:	2001      	movs	r0, #1
 8000fb4:	f000 fa1e 	bl	80013f4 <GPIO_PinConfig>
	GPIO_SetOutputType(GPIO_OUT_PUSH_PULL, LED_Port, LED_Pin);
 8000fb8:	220d      	movs	r2, #13
 8000fba:	4906      	ldr	r1, [pc, #24]	; (8000fd4 <GPIO_Configure+0x90>)
 8000fbc:	2000      	movs	r0, #0
 8000fbe:	f000 faa7 	bl	8001510 <GPIO_SetOutputType>
	GPIO_SetOutputSpeed(GPIO_OUT_SPEED_HIGH, LED_Port, LED_Pin);
 8000fc2:	220d      	movs	r2, #13
 8000fc4:	4903      	ldr	r1, [pc, #12]	; (8000fd4 <GPIO_Configure+0x90>)
 8000fc6:	2002      	movs	r0, #2
 8000fc8:	f000 facc 	bl	8001564 <GPIO_SetOutputSpeed>
}
 8000fcc:	bf00      	nop
 8000fce:	bd80      	pop	{r7, pc}
 8000fd0:	40020000 	.word	0x40020000
 8000fd4:	40020800 	.word	0x40020800

08000fd8 <main>:
#else
#define UART_DISPLAY int fputc(int ch, FILE *f)
#endif /* __GNUC__ */

int main(void)
{
 8000fd8:	b580      	push	{r7, lr}
 8000fda:	b08a      	sub	sp, #40	; 0x28
 8000fdc:	af00      	add	r7, sp, #0

	/*Enable the floating point unit*/
	FPU_Enable();
 8000fde:	f000 f9a5 	bl	800132c <FPU_Enable>

	/*Init the timebase*/
	Time_Timebase_Init();
 8000fe2:	f000 fccf 	bl	8001984 <Time_Timebase_Init>

	HSPI1.Instance = SPI1;
 8000fe6:	4bb8      	ldr	r3, [pc, #736]	; (80012c8 <main+0x2f0>)
 8000fe8:	4ab8      	ldr	r2, [pc, #736]	; (80012cc <main+0x2f4>)
 8000fea:	601a      	str	r2, [r3, #0]

	/*Init SPI*/
	SPI_Init(&HSPI1);
 8000fec:	48b6      	ldr	r0, [pc, #728]	; (80012c8 <main+0x2f0>)
 8000fee:	f000 fbcd 	bl	800178c <SPI_Init>

	/*Configure the GPIO*/
	GPIO_Configure();
 8000ff2:	f7ff ffa7 	bl	8000f44 <GPIO_Configure>

	/*Init the display*/
	GC9A01_init();
 8000ff6:	f7ff fd60 	bl	8000aba <GC9A01_init>
	while (1)
	{

		uint8_t color[3];
		// Triangle
		color[0] = 0xFF;
 8000ffa:	23ff      	movs	r3, #255	; 0xff
 8000ffc:	703b      	strb	r3, [r7, #0]
		color[1] = 0xFF;
 8000ffe:	23ff      	movs	r3, #255	; 0xff
 8001000:	707b      	strb	r3, [r7, #1]
		for (int x = 0; x < 240; x++)
 8001002:	2300      	movs	r3, #0
 8001004:	627b      	str	r3, [r7, #36]	; 0x24
 8001006:	e025      	b.n	8001054 <main+0x7c>
		{
			for (int y = 0; y < 240; y++)
 8001008:	2300      	movs	r3, #0
 800100a:	623b      	str	r3, [r7, #32]
 800100c:	e01c      	b.n	8001048 <main+0x70>
			{
				if (x < y)
 800100e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001010:	6a3b      	ldr	r3, [r7, #32]
 8001012:	429a      	cmp	r2, r3
 8001014:	da02      	bge.n	800101c <main+0x44>
				{
					color[2] = 0xFF;
 8001016:	23ff      	movs	r3, #255	; 0xff
 8001018:	70bb      	strb	r3, [r7, #2]
 800101a:	e001      	b.n	8001020 <main+0x48>
				}
				else
				{
					color[2] = 0x00;
 800101c:	2300      	movs	r3, #0
 800101e:	70bb      	strb	r3, [r7, #2]
				}
				if (x == 0 && y == 0)
 8001020:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001022:	2b00      	cmp	r3, #0
 8001024:	d108      	bne.n	8001038 <main+0x60>
 8001026:	6a3b      	ldr	r3, [r7, #32]
 8001028:	2b00      	cmp	r3, #0
 800102a:	d105      	bne.n	8001038 <main+0x60>
				{
					GC9A01_write(color, sizeof(color));
 800102c:	463b      	mov	r3, r7
 800102e:	2103      	movs	r1, #3
 8001030:	4618      	mov	r0, r3
 8001032:	f7ff fd22 	bl	8000a7a <GC9A01_write>
 8001036:	e004      	b.n	8001042 <main+0x6a>
				}
				else
				{
					GC9A01_write_continue(color, sizeof(color));
 8001038:	463b      	mov	r3, r7
 800103a:	2103      	movs	r1, #3
 800103c:	4618      	mov	r0, r3
 800103e:	f7ff fd2c 	bl	8000a9a <GC9A01_write_continue>
			for (int y = 0; y < 240; y++)
 8001042:	6a3b      	ldr	r3, [r7, #32]
 8001044:	3301      	adds	r3, #1
 8001046:	623b      	str	r3, [r7, #32]
 8001048:	6a3b      	ldr	r3, [r7, #32]
 800104a:	2bef      	cmp	r3, #239	; 0xef
 800104c:	dddf      	ble.n	800100e <main+0x36>
		for (int x = 0; x < 240; x++)
 800104e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001050:	3301      	adds	r3, #1
 8001052:	627b      	str	r3, [r7, #36]	; 0x24
 8001054:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001056:	2bef      	cmp	r3, #239	; 0xef
 8001058:	ddd6      	ble.n	8001008 <main+0x30>
				}
			}
		}

		Time_Delay_Ms(500);
 800105a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800105e:	f000 fc5d 	bl	800191c <Time_Delay_Ms>

		// Rainbow
		float frequency = 0.026;
 8001062:	4b9b      	ldr	r3, [pc, #620]	; (80012d0 <main+0x2f8>)
 8001064:	607b      	str	r3, [r7, #4]
		for (int x = 0; x < 240; x++)
 8001066:	2300      	movs	r3, #0
 8001068:	61fb      	str	r3, [r7, #28]
 800106a:	e0ac      	b.n	80011c6 <main+0x1ee>
		{
			color[0] = sin(frequency * x + 0) * 127 + 128;
 800106c:	69fb      	ldr	r3, [r7, #28]
 800106e:	ee07 3a90 	vmov	s15, r3
 8001072:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001076:	edd7 7a01 	vldr	s15, [r7, #4]
 800107a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800107e:	ed9f 7a95 	vldr	s14, [pc, #596]	; 80012d4 <main+0x2fc>
 8001082:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001086:	ee17 0a90 	vmov	r0, s15
 800108a:	f7ff fb33 	bl	80006f4 <__aeabi_f2d>
 800108e:	4602      	mov	r2, r0
 8001090:	460b      	mov	r3, r1
 8001092:	ec43 2b10 	vmov	d0, r2, r3
 8001096:	f000 fddb 	bl	8001c50 <sin>
 800109a:	ec51 0b10 	vmov	r0, r1, d0
 800109e:	a388      	add	r3, pc, #544	; (adr r3, 80012c0 <main+0x2e8>)
 80010a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010a4:	f7ff f898 	bl	80001d8 <__aeabi_dmul>
 80010a8:	4602      	mov	r2, r0
 80010aa:	460b      	mov	r3, r1
 80010ac:	4610      	mov	r0, r2
 80010ae:	4619      	mov	r1, r3
 80010b0:	f04f 0200 	mov.w	r2, #0
 80010b4:	4b88      	ldr	r3, [pc, #544]	; (80012d8 <main+0x300>)
 80010b6:	f7ff f9bf 	bl	8000438 <__adddf3>
 80010ba:	4602      	mov	r2, r0
 80010bc:	460b      	mov	r3, r1
 80010be:	4610      	mov	r0, r2
 80010c0:	4619      	mov	r1, r3
 80010c2:	f7ff fc1f 	bl	8000904 <__aeabi_d2uiz>
 80010c6:	4603      	mov	r3, r0
 80010c8:	b2db      	uxtb	r3, r3
 80010ca:	703b      	strb	r3, [r7, #0]
			color[1] = sin(frequency * x + 2) * 127 + 128;
 80010cc:	69fb      	ldr	r3, [r7, #28]
 80010ce:	ee07 3a90 	vmov	s15, r3
 80010d2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80010d6:	edd7 7a01 	vldr	s15, [r7, #4]
 80010da:	ee67 7a27 	vmul.f32	s15, s14, s15
 80010de:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 80010e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80010e6:	ee17 0a90 	vmov	r0, s15
 80010ea:	f7ff fb03 	bl	80006f4 <__aeabi_f2d>
 80010ee:	4602      	mov	r2, r0
 80010f0:	460b      	mov	r3, r1
 80010f2:	ec43 2b10 	vmov	d0, r2, r3
 80010f6:	f000 fdab 	bl	8001c50 <sin>
 80010fa:	ec51 0b10 	vmov	r0, r1, d0
 80010fe:	a370      	add	r3, pc, #448	; (adr r3, 80012c0 <main+0x2e8>)
 8001100:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001104:	f7ff f868 	bl	80001d8 <__aeabi_dmul>
 8001108:	4602      	mov	r2, r0
 800110a:	460b      	mov	r3, r1
 800110c:	4610      	mov	r0, r2
 800110e:	4619      	mov	r1, r3
 8001110:	f04f 0200 	mov.w	r2, #0
 8001114:	4b70      	ldr	r3, [pc, #448]	; (80012d8 <main+0x300>)
 8001116:	f7ff f98f 	bl	8000438 <__adddf3>
 800111a:	4602      	mov	r2, r0
 800111c:	460b      	mov	r3, r1
 800111e:	4610      	mov	r0, r2
 8001120:	4619      	mov	r1, r3
 8001122:	f7ff fbef 	bl	8000904 <__aeabi_d2uiz>
 8001126:	4603      	mov	r3, r0
 8001128:	b2db      	uxtb	r3, r3
 800112a:	707b      	strb	r3, [r7, #1]
			color[2] = sin(frequency * x + 4) * 127 + 128;
 800112c:	69fb      	ldr	r3, [r7, #28]
 800112e:	ee07 3a90 	vmov	s15, r3
 8001132:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001136:	edd7 7a01 	vldr	s15, [r7, #4]
 800113a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800113e:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8001142:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001146:	ee17 0a90 	vmov	r0, s15
 800114a:	f7ff fad3 	bl	80006f4 <__aeabi_f2d>
 800114e:	4602      	mov	r2, r0
 8001150:	460b      	mov	r3, r1
 8001152:	ec43 2b10 	vmov	d0, r2, r3
 8001156:	f000 fd7b 	bl	8001c50 <sin>
 800115a:	ec51 0b10 	vmov	r0, r1, d0
 800115e:	a358      	add	r3, pc, #352	; (adr r3, 80012c0 <main+0x2e8>)
 8001160:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001164:	f7ff f838 	bl	80001d8 <__aeabi_dmul>
 8001168:	4602      	mov	r2, r0
 800116a:	460b      	mov	r3, r1
 800116c:	4610      	mov	r0, r2
 800116e:	4619      	mov	r1, r3
 8001170:	f04f 0200 	mov.w	r2, #0
 8001174:	4b58      	ldr	r3, [pc, #352]	; (80012d8 <main+0x300>)
 8001176:	f7ff f95f 	bl	8000438 <__adddf3>
 800117a:	4602      	mov	r2, r0
 800117c:	460b      	mov	r3, r1
 800117e:	4610      	mov	r0, r2
 8001180:	4619      	mov	r1, r3
 8001182:	f7ff fbbf 	bl	8000904 <__aeabi_d2uiz>
 8001186:	4603      	mov	r3, r0
 8001188:	b2db      	uxtb	r3, r3
 800118a:	70bb      	strb	r3, [r7, #2]
			for (int y = 0; y < 240; y++)
 800118c:	2300      	movs	r3, #0
 800118e:	61bb      	str	r3, [r7, #24]
 8001190:	e013      	b.n	80011ba <main+0x1e2>
			{
				if (x == 0 && y == 0)
 8001192:	69fb      	ldr	r3, [r7, #28]
 8001194:	2b00      	cmp	r3, #0
 8001196:	d108      	bne.n	80011aa <main+0x1d2>
 8001198:	69bb      	ldr	r3, [r7, #24]
 800119a:	2b00      	cmp	r3, #0
 800119c:	d105      	bne.n	80011aa <main+0x1d2>
				{
					GC9A01_write(color, sizeof(color));
 800119e:	463b      	mov	r3, r7
 80011a0:	2103      	movs	r1, #3
 80011a2:	4618      	mov	r0, r3
 80011a4:	f7ff fc69 	bl	8000a7a <GC9A01_write>
 80011a8:	e004      	b.n	80011b4 <main+0x1dc>
				}
				else
				{
					GC9A01_write_continue(color, sizeof(color));
 80011aa:	463b      	mov	r3, r7
 80011ac:	2103      	movs	r1, #3
 80011ae:	4618      	mov	r0, r3
 80011b0:	f7ff fc73 	bl	8000a9a <GC9A01_write_continue>
			for (int y = 0; y < 240; y++)
 80011b4:	69bb      	ldr	r3, [r7, #24]
 80011b6:	3301      	adds	r3, #1
 80011b8:	61bb      	str	r3, [r7, #24]
 80011ba:	69bb      	ldr	r3, [r7, #24]
 80011bc:	2bef      	cmp	r3, #239	; 0xef
 80011be:	dde8      	ble.n	8001192 <main+0x1ba>
		for (int x = 0; x < 240; x++)
 80011c0:	69fb      	ldr	r3, [r7, #28]
 80011c2:	3301      	adds	r3, #1
 80011c4:	61fb      	str	r3, [r7, #28]
 80011c6:	69fb      	ldr	r3, [r7, #28]
 80011c8:	2bef      	cmp	r3, #239	; 0xef
 80011ca:	f77f af4f 	ble.w	800106c <main+0x94>
				}
			}
		}

		Time_Delay_Ms(500);
 80011ce:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80011d2:	f000 fba3 	bl	800191c <Time_Delay_Ms>

		// Checkerboard
		for (int x = 0; x < 240; x++)
 80011d6:	2300      	movs	r3, #0
 80011d8:	617b      	str	r3, [r7, #20]
 80011da:	e044      	b.n	8001266 <main+0x28e>
		{
			for (int y = 0; y < 240; y++)
 80011dc:	2300      	movs	r3, #0
 80011de:	613b      	str	r3, [r7, #16]
 80011e0:	e03b      	b.n	800125a <main+0x282>
			{
				if ((x / 10) % 2 == (y / 10) % 2)
 80011e2:	697b      	ldr	r3, [r7, #20]
 80011e4:	4a3d      	ldr	r2, [pc, #244]	; (80012dc <main+0x304>)
 80011e6:	fb82 1203 	smull	r1, r2, r2, r3
 80011ea:	1092      	asrs	r2, r2, #2
 80011ec:	17db      	asrs	r3, r3, #31
 80011ee:	1ad3      	subs	r3, r2, r3
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	f003 0301 	and.w	r3, r3, #1
 80011f6:	bfb8      	it	lt
 80011f8:	425b      	neglt	r3, r3
 80011fa:	461a      	mov	r2, r3
 80011fc:	693b      	ldr	r3, [r7, #16]
 80011fe:	4937      	ldr	r1, [pc, #220]	; (80012dc <main+0x304>)
 8001200:	fb81 0103 	smull	r0, r1, r1, r3
 8001204:	1089      	asrs	r1, r1, #2
 8001206:	17db      	asrs	r3, r3, #31
 8001208:	1acb      	subs	r3, r1, r3
 800120a:	2b00      	cmp	r3, #0
 800120c:	f003 0301 	and.w	r3, r3, #1
 8001210:	bfb8      	it	lt
 8001212:	425b      	neglt	r3, r3
 8001214:	429a      	cmp	r2, r3
 8001216:	d106      	bne.n	8001226 <main+0x24e>
				{
					color[0] = 0xFF;
 8001218:	23ff      	movs	r3, #255	; 0xff
 800121a:	703b      	strb	r3, [r7, #0]
					color[1] = 0xFF;
 800121c:	23ff      	movs	r3, #255	; 0xff
 800121e:	707b      	strb	r3, [r7, #1]
					color[2] = 0xFF;
 8001220:	23ff      	movs	r3, #255	; 0xff
 8001222:	70bb      	strb	r3, [r7, #2]
 8001224:	e005      	b.n	8001232 <main+0x25a>
				}
				else
				{
					color[0] = 0x00;
 8001226:	2300      	movs	r3, #0
 8001228:	703b      	strb	r3, [r7, #0]
					color[1] = 0x00;
 800122a:	2300      	movs	r3, #0
 800122c:	707b      	strb	r3, [r7, #1]
					color[2] = 0x00;
 800122e:	2300      	movs	r3, #0
 8001230:	70bb      	strb	r3, [r7, #2]
				}
				if (x == 0 && y == 0)
 8001232:	697b      	ldr	r3, [r7, #20]
 8001234:	2b00      	cmp	r3, #0
 8001236:	d108      	bne.n	800124a <main+0x272>
 8001238:	693b      	ldr	r3, [r7, #16]
 800123a:	2b00      	cmp	r3, #0
 800123c:	d105      	bne.n	800124a <main+0x272>
				{
					GC9A01_write(color, sizeof(color));
 800123e:	463b      	mov	r3, r7
 8001240:	2103      	movs	r1, #3
 8001242:	4618      	mov	r0, r3
 8001244:	f7ff fc19 	bl	8000a7a <GC9A01_write>
 8001248:	e004      	b.n	8001254 <main+0x27c>
				}
				else
				{
					GC9A01_write_continue(color, sizeof(color));
 800124a:	463b      	mov	r3, r7
 800124c:	2103      	movs	r1, #3
 800124e:	4618      	mov	r0, r3
 8001250:	f7ff fc23 	bl	8000a9a <GC9A01_write_continue>
			for (int y = 0; y < 240; y++)
 8001254:	693b      	ldr	r3, [r7, #16]
 8001256:	3301      	adds	r3, #1
 8001258:	613b      	str	r3, [r7, #16]
 800125a:	693b      	ldr	r3, [r7, #16]
 800125c:	2bef      	cmp	r3, #239	; 0xef
 800125e:	ddc0      	ble.n	80011e2 <main+0x20a>
		for (int x = 0; x < 240; x++)
 8001260:	697b      	ldr	r3, [r7, #20]
 8001262:	3301      	adds	r3, #1
 8001264:	617b      	str	r3, [r7, #20]
 8001266:	697b      	ldr	r3, [r7, #20]
 8001268:	2bef      	cmp	r3, #239	; 0xef
 800126a:	ddb7      	ble.n	80011dc <main+0x204>
				}
			}
		}

		Time_Delay_Ms(1000);
 800126c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001270:	f000 fb54 	bl	800191c <Time_Delay_Ms>

		// Blue cross
		color[0] = 0x25;
 8001274:	2325      	movs	r3, #37	; 0x25
 8001276:	703b      	strb	r3, [r7, #0]
		for (int x = 0; x < 240; x++)
 8001278:	2300      	movs	r3, #0
 800127a:	60fb      	str	r3, [r7, #12]
 800127c:	e04e      	b.n	800131c <main+0x344>
		{
			for (int y = 0; y < 240; y++)
 800127e:	2300      	movs	r3, #0
 8001280:	60bb      	str	r3, [r7, #8]
 8001282:	e045      	b.n	8001310 <main+0x338>
			{
				if ((x >= 1 * 48 && x < 4 * 48 && y >= 2 * 48 && y < 3 * 48)
 8001284:	68fb      	ldr	r3, [r7, #12]
 8001286:	2b2f      	cmp	r3, #47	; 0x2f
 8001288:	dd08      	ble.n	800129c <main+0x2c4>
 800128a:	68fb      	ldr	r3, [r7, #12]
 800128c:	2bbf      	cmp	r3, #191	; 0xbf
 800128e:	dc05      	bgt.n	800129c <main+0x2c4>
 8001290:	68bb      	ldr	r3, [r7, #8]
 8001292:	2b5f      	cmp	r3, #95	; 0x5f
 8001294:	dd02      	ble.n	800129c <main+0x2c4>
 8001296:	68bb      	ldr	r3, [r7, #8]
 8001298:	2b8f      	cmp	r3, #143	; 0x8f
 800129a:	dd0b      	ble.n	80012b4 <main+0x2dc>
						|| (x >= 2 * 48 && x < 3 * 48 && y >= 1 * 48
 800129c:	68fb      	ldr	r3, [r7, #12]
 800129e:	2b5f      	cmp	r3, #95	; 0x5f
 80012a0:	dd1e      	ble.n	80012e0 <main+0x308>
 80012a2:	68fb      	ldr	r3, [r7, #12]
 80012a4:	2b8f      	cmp	r3, #143	; 0x8f
 80012a6:	dc1b      	bgt.n	80012e0 <main+0x308>
 80012a8:	68bb      	ldr	r3, [r7, #8]
 80012aa:	2b2f      	cmp	r3, #47	; 0x2f
 80012ac:	dd18      	ble.n	80012e0 <main+0x308>
								&& y < 4 * 48))
 80012ae:	68bb      	ldr	r3, [r7, #8]
 80012b0:	2bbf      	cmp	r3, #191	; 0xbf
 80012b2:	dc15      	bgt.n	80012e0 <main+0x308>
				{
					color[1] = 0x96;
 80012b4:	2396      	movs	r3, #150	; 0x96
 80012b6:	707b      	strb	r3, [r7, #1]
					color[2] = 0xBE;
 80012b8:	23be      	movs	r3, #190	; 0xbe
 80012ba:	70bb      	strb	r3, [r7, #2]
 80012bc:	e014      	b.n	80012e8 <main+0x310>
 80012be:	bf00      	nop
 80012c0:	00000000 	.word	0x00000000
 80012c4:	405fc000 	.word	0x405fc000
 80012c8:	20000000 	.word	0x20000000
 80012cc:	40013000 	.word	0x40013000
 80012d0:	3cd4fdf4 	.word	0x3cd4fdf4
 80012d4:	00000000 	.word	0x00000000
 80012d8:	40600000 	.word	0x40600000
 80012dc:	66666667 	.word	0x66666667
				}
				else
				{
					color[1] = 0x00;
 80012e0:	2300      	movs	r3, #0
 80012e2:	707b      	strb	r3, [r7, #1]
					color[2] = 0x00;
 80012e4:	2300      	movs	r3, #0
 80012e6:	70bb      	strb	r3, [r7, #2]
				}
				if (x == 0 && y == 0)
 80012e8:	68fb      	ldr	r3, [r7, #12]
 80012ea:	2b00      	cmp	r3, #0
 80012ec:	d108      	bne.n	8001300 <main+0x328>
 80012ee:	68bb      	ldr	r3, [r7, #8]
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d105      	bne.n	8001300 <main+0x328>
				{
					GC9A01_write(color, sizeof(color));
 80012f4:	463b      	mov	r3, r7
 80012f6:	2103      	movs	r1, #3
 80012f8:	4618      	mov	r0, r3
 80012fa:	f7ff fbbe 	bl	8000a7a <GC9A01_write>
 80012fe:	e004      	b.n	800130a <main+0x332>
				}
				else
				{
					GC9A01_write_continue(color, sizeof(color));
 8001300:	463b      	mov	r3, r7
 8001302:	2103      	movs	r1, #3
 8001304:	4618      	mov	r0, r3
 8001306:	f7ff fbc8 	bl	8000a9a <GC9A01_write_continue>
			for (int y = 0; y < 240; y++)
 800130a:	68bb      	ldr	r3, [r7, #8]
 800130c:	3301      	adds	r3, #1
 800130e:	60bb      	str	r3, [r7, #8]
 8001310:	68bb      	ldr	r3, [r7, #8]
 8001312:	2bef      	cmp	r3, #239	; 0xef
 8001314:	ddb6      	ble.n	8001284 <main+0x2ac>
		for (int x = 0; x < 240; x++)
 8001316:	68fb      	ldr	r3, [r7, #12]
 8001318:	3301      	adds	r3, #1
 800131a:	60fb      	str	r3, [r7, #12]
 800131c:	68fb      	ldr	r3, [r7, #12]
 800131e:	2bef      	cmp	r3, #239	; 0xef
 8001320:	ddad      	ble.n	800127e <main+0x2a6>
				}
			}
		}


		Time_Delay_Ms(1000);
 8001322:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001326:	f000 faf9 	bl	800191c <Time_Delay_Ms>
	{
 800132a:	e666      	b.n	8000ffa <main+0x22>

0800132c <FPU_Enable>:
/**
 * @brief Enables the floating point unit
 *
 */
void FPU_Enable(void)
{
 800132c:	b480      	push	{r7}
 800132e:	af00      	add	r7, sp, #0
	/*Enable floating point unit:  Enable CP10 and CP11 full access*/
	SCB->CPACR |=(1<<20);
 8001330:	4b12      	ldr	r3, [pc, #72]	; (800137c <FPU_Enable+0x50>)
 8001332:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001336:	4a11      	ldr	r2, [pc, #68]	; (800137c <FPU_Enable+0x50>)
 8001338:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800133c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	SCB->CPACR |=(1<<21);
 8001340:	4b0e      	ldr	r3, [pc, #56]	; (800137c <FPU_Enable+0x50>)
 8001342:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001346:	4a0d      	ldr	r2, [pc, #52]	; (800137c <FPU_Enable+0x50>)
 8001348:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800134c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	SCB->CPACR |=(1<<22);
 8001350:	4b0a      	ldr	r3, [pc, #40]	; (800137c <FPU_Enable+0x50>)
 8001352:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001356:	4a09      	ldr	r2, [pc, #36]	; (800137c <FPU_Enable+0x50>)
 8001358:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800135c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	SCB->CPACR |=(1<<23);
 8001360:	4b06      	ldr	r3, [pc, #24]	; (800137c <FPU_Enable+0x50>)
 8001362:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001366:	4a05      	ldr	r2, [pc, #20]	; (800137c <FPU_Enable+0x50>)
 8001368:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800136c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
}
 8001370:	bf00      	nop
 8001372:	46bd      	mov	sp, r7
 8001374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001378:	4770      	bx	lr
 800137a:	bf00      	nop
 800137c:	e000ed00 	.word	0xe000ed00

08001380 <GPIO_Clock_Init>:
 * @brief Activate a GPIO AHB1 Clock
 *
 * @param gpio_port_clk
 */
void GPIO_Clock_Init(GPIO_CLK_t gpio_port_clk)
{
 8001380:	b480      	push	{r7}
 8001382:	b083      	sub	sp, #12
 8001384:	af00      	add	r7, sp, #0
 8001386:	4603      	mov	r3, r0
 8001388:	71fb      	strb	r3, [r7, #7]
	/*Activate the appropriate gpio bus clock*/
	if (gpio_port_clk == GPIOA_CLK)
 800138a:	79fb      	ldrb	r3, [r7, #7]
 800138c:	2b00      	cmp	r3, #0
 800138e:	d105      	bne.n	800139c <GPIO_Clock_Init+0x1c>
	{
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001390:	4b17      	ldr	r3, [pc, #92]	; (80013f0 <GPIO_Clock_Init+0x70>)
 8001392:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001394:	4a16      	ldr	r2, [pc, #88]	; (80013f0 <GPIO_Clock_Init+0x70>)
 8001396:	f043 0301 	orr.w	r3, r3, #1
 800139a:	6313      	str	r3, [r2, #48]	; 0x30
	}
	if (gpio_port_clk == GPIOB_CLK)
 800139c:	79fb      	ldrb	r3, [r7, #7]
 800139e:	2b01      	cmp	r3, #1
 80013a0:	d105      	bne.n	80013ae <GPIO_Clock_Init+0x2e>
	{
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 80013a2:	4b13      	ldr	r3, [pc, #76]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013a6:	4a12      	ldr	r2, [pc, #72]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013a8:	f043 0302 	orr.w	r3, r3, #2
 80013ac:	6313      	str	r3, [r2, #48]	; 0x30
	}
	if (gpio_port_clk == GPIOC_CLK)
 80013ae:	79fb      	ldrb	r3, [r7, #7]
 80013b0:	2b02      	cmp	r3, #2
 80013b2:	d105      	bne.n	80013c0 <GPIO_Clock_Init+0x40>
	{
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 80013b4:	4b0e      	ldr	r3, [pc, #56]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013b8:	4a0d      	ldr	r2, [pc, #52]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013ba:	f043 0304 	orr.w	r3, r3, #4
 80013be:	6313      	str	r3, [r2, #48]	; 0x30
	}
	if (gpio_port_clk == GPIOD_CLK)
 80013c0:	79fb      	ldrb	r3, [r7, #7]
 80013c2:	2b03      	cmp	r3, #3
 80013c4:	d105      	bne.n	80013d2 <GPIO_Clock_Init+0x52>
	{
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80013c6:	4b0a      	ldr	r3, [pc, #40]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013ca:	4a09      	ldr	r2, [pc, #36]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013cc:	f043 0308 	orr.w	r3, r3, #8
 80013d0:	6313      	str	r3, [r2, #48]	; 0x30
	}
	if (gpio_port_clk == GPIOE_CLK)
 80013d2:	79fb      	ldrb	r3, [r7, #7]
 80013d4:	2b04      	cmp	r3, #4
 80013d6:	d105      	bne.n	80013e4 <GPIO_Clock_Init+0x64>
	{
		RCC->AHB1ENR |= RCC_AHB1ENR_GPIOEEN;
 80013d8:	4b05      	ldr	r3, [pc, #20]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013dc:	4a04      	ldr	r2, [pc, #16]	; (80013f0 <GPIO_Clock_Init+0x70>)
 80013de:	f043 0310 	orr.w	r3, r3, #16
 80013e2:	6313      	str	r3, [r2, #48]	; 0x30
	}
}
 80013e4:	bf00      	nop
 80013e6:	370c      	adds	r7, #12
 80013e8:	46bd      	mov	sp, r7
 80013ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ee:	4770      	bx	lr
 80013f0:	40023800 	.word	0x40023800

080013f4 <GPIO_PinConfig>:
	}
}

void GPIO_PinConfig(GPIO_Mode_t mode, GPIO_TypeDef *port,
		uint16_t pin)
{
 80013f4:	b480      	push	{r7}
 80013f6:	b083      	sub	sp, #12
 80013f8:	af00      	add	r7, sp, #0
 80013fa:	4603      	mov	r3, r0
 80013fc:	6039      	str	r1, [r7, #0]
 80013fe:	71fb      	strb	r3, [r7, #7]
 8001400:	4613      	mov	r3, r2
 8001402:	80bb      	strh	r3, [r7, #4]
	 01: Output
	 10: Alternate function
	 11: Analog
	 */

	port->MODER &= ~(1U << (pin * 2));      // Clear existing setting
 8001404:	683b      	ldr	r3, [r7, #0]
 8001406:	681a      	ldr	r2, [r3, #0]
 8001408:	88bb      	ldrh	r3, [r7, #4]
 800140a:	005b      	lsls	r3, r3, #1
 800140c:	2101      	movs	r1, #1
 800140e:	fa01 f303 	lsl.w	r3, r1, r3
 8001412:	43db      	mvns	r3, r3
 8001414:	401a      	ands	r2, r3
 8001416:	683b      	ldr	r3, [r7, #0]
 8001418:	601a      	str	r2, [r3, #0]
	port->MODER &= ~(1U << (pin * 2 + 1));   // Clear existing setting
 800141a:	683b      	ldr	r3, [r7, #0]
 800141c:	681a      	ldr	r2, [r3, #0]
 800141e:	88bb      	ldrh	r3, [r7, #4]
 8001420:	005b      	lsls	r3, r3, #1
 8001422:	3301      	adds	r3, #1
 8001424:	2101      	movs	r1, #1
 8001426:	fa01 f303 	lsl.w	r3, r1, r3
 800142a:	43db      	mvns	r3, r3
 800142c:	401a      	ands	r2, r3
 800142e:	683b      	ldr	r3, [r7, #0]
 8001430:	601a      	str	r2, [r3, #0]

	switch (mode)
 8001432:	79fb      	ldrb	r3, [r7, #7]
 8001434:	2b03      	cmp	r3, #3
 8001436:	d864      	bhi.n	8001502 <GPIO_PinConfig+0x10e>
 8001438:	a201      	add	r2, pc, #4	; (adr r2, 8001440 <GPIO_PinConfig+0x4c>)
 800143a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800143e:	bf00      	nop
 8001440:	08001451 	.word	0x08001451
 8001444:	08001481 	.word	0x08001481
 8001448:	080014af 	.word	0x080014af
 800144c:	080014dd 	.word	0x080014dd
	{
	case GPIO_MODE_INPUT:

		port->MODER &= ~(1U << (pin * 2));      // Set as input
 8001450:	683b      	ldr	r3, [r7, #0]
 8001452:	681a      	ldr	r2, [r3, #0]
 8001454:	88bb      	ldrh	r3, [r7, #4]
 8001456:	005b      	lsls	r3, r3, #1
 8001458:	2101      	movs	r1, #1
 800145a:	fa01 f303 	lsl.w	r3, r1, r3
 800145e:	43db      	mvns	r3, r3
 8001460:	401a      	ands	r2, r3
 8001462:	683b      	ldr	r3, [r7, #0]
 8001464:	601a      	str	r2, [r3, #0]
		port->MODER &= ~(1U << (pin * 2 + 1));   // Set as input
 8001466:	683b      	ldr	r3, [r7, #0]
 8001468:	681a      	ldr	r2, [r3, #0]
 800146a:	88bb      	ldrh	r3, [r7, #4]
 800146c:	005b      	lsls	r3, r3, #1
 800146e:	3301      	adds	r3, #1
 8001470:	2101      	movs	r1, #1
 8001472:	fa01 f303 	lsl.w	r3, r1, r3
 8001476:	43db      	mvns	r3, r3
 8001478:	401a      	ands	r2, r3
 800147a:	683b      	ldr	r3, [r7, #0]
 800147c:	601a      	str	r2, [r3, #0]

		break;
 800147e:	e041      	b.n	8001504 <GPIO_PinConfig+0x110>
	case GPIO_MODE_OUTPUT:

		port->MODER |= (1U << (pin * 2));   // Set as Output
 8001480:	683b      	ldr	r3, [r7, #0]
 8001482:	681a      	ldr	r2, [r3, #0]
 8001484:	88bb      	ldrh	r3, [r7, #4]
 8001486:	005b      	lsls	r3, r3, #1
 8001488:	2101      	movs	r1, #1
 800148a:	fa01 f303 	lsl.w	r3, r1, r3
 800148e:	431a      	orrs	r2, r3
 8001490:	683b      	ldr	r3, [r7, #0]
 8001492:	601a      	str	r2, [r3, #0]
		port->MODER &= ~(1U << (pin * 2 + 1));
 8001494:	683b      	ldr	r3, [r7, #0]
 8001496:	681a      	ldr	r2, [r3, #0]
 8001498:	88bb      	ldrh	r3, [r7, #4]
 800149a:	005b      	lsls	r3, r3, #1
 800149c:	3301      	adds	r3, #1
 800149e:	2101      	movs	r1, #1
 80014a0:	fa01 f303 	lsl.w	r3, r1, r3
 80014a4:	43db      	mvns	r3, r3
 80014a6:	401a      	ands	r2, r3
 80014a8:	683b      	ldr	r3, [r7, #0]
 80014aa:	601a      	str	r2, [r3, #0]

		break;
 80014ac:	e02a      	b.n	8001504 <GPIO_PinConfig+0x110>

	case GPIO_MODE_AF:

		port->MODER |= (1U << (pin * 2 + 1));   // Set as AF
 80014ae:	683b      	ldr	r3, [r7, #0]
 80014b0:	681a      	ldr	r2, [r3, #0]
 80014b2:	88bb      	ldrh	r3, [r7, #4]
 80014b4:	005b      	lsls	r3, r3, #1
 80014b6:	3301      	adds	r3, #1
 80014b8:	2101      	movs	r1, #1
 80014ba:	fa01 f303 	lsl.w	r3, r1, r3
 80014be:	431a      	orrs	r2, r3
 80014c0:	683b      	ldr	r3, [r7, #0]
 80014c2:	601a      	str	r2, [r3, #0]
		port->MODER &= ~(1U << (pin * 2));
 80014c4:	683b      	ldr	r3, [r7, #0]
 80014c6:	681a      	ldr	r2, [r3, #0]
 80014c8:	88bb      	ldrh	r3, [r7, #4]
 80014ca:	005b      	lsls	r3, r3, #1
 80014cc:	2101      	movs	r1, #1
 80014ce:	fa01 f303 	lsl.w	r3, r1, r3
 80014d2:	43db      	mvns	r3, r3
 80014d4:	401a      	ands	r2, r3
 80014d6:	683b      	ldr	r3, [r7, #0]
 80014d8:	601a      	str	r2, [r3, #0]

		break;
 80014da:	e013      	b.n	8001504 <GPIO_PinConfig+0x110>

	case GPIO_MODE_ANALOG:

		port->MODER |= (1U << (pin * 2));   // Set as Analog
 80014dc:	683b      	ldr	r3, [r7, #0]
 80014de:	681a      	ldr	r2, [r3, #0]
 80014e0:	88bb      	ldrh	r3, [r7, #4]
 80014e2:	005b      	lsls	r3, r3, #1
 80014e4:	2101      	movs	r1, #1
 80014e6:	fa01 f303 	lsl.w	r3, r1, r3
 80014ea:	431a      	orrs	r2, r3
 80014ec:	683b      	ldr	r3, [r7, #0]
 80014ee:	601a      	str	r2, [r3, #0]
		port->MODER |= ((pin * 2 + 1));
 80014f0:	683b      	ldr	r3, [r7, #0]
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	88ba      	ldrh	r2, [r7, #4]
 80014f6:	0052      	lsls	r2, r2, #1
 80014f8:	3201      	adds	r2, #1
 80014fa:	431a      	orrs	r2, r3
 80014fc:	683b      	ldr	r3, [r7, #0]
 80014fe:	601a      	str	r2, [r3, #0]

		break;
 8001500:	e000      	b.n	8001504 <GPIO_PinConfig+0x110>

	default:

		break;
 8001502:	bf00      	nop

	}

}
 8001504:	bf00      	nop
 8001506:	370c      	adds	r7, #12
 8001508:	46bd      	mov	sp, r7
 800150a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800150e:	4770      	bx	lr

08001510 <GPIO_SetOutputType>:

/*Set Output type*/
void GPIO_SetOutputType(GPIO_OutputType_t oType, GPIO_TypeDef *port,
		uint16_t pin)
{
 8001510:	b480      	push	{r7}
 8001512:	b083      	sub	sp, #12
 8001514:	af00      	add	r7, sp, #0
 8001516:	4603      	mov	r3, r0
 8001518:	6039      	str	r1, [r7, #0]
 800151a:	71fb      	strb	r3, [r7, #7]
 800151c:	4613      	mov	r3, r2
 800151e:	80bb      	strh	r3, [r7, #4]
	switch (oType)
 8001520:	79fb      	ldrb	r3, [r7, #7]
 8001522:	2b00      	cmp	r3, #0
 8001524:	d002      	beq.n	800152c <GPIO_SetOutputType+0x1c>
 8001526:	2b01      	cmp	r3, #1
 8001528:	d00b      	beq.n	8001542 <GPIO_SetOutputType+0x32>
		port->OTYPER |= (1U << pin);

		break;
	}

}
 800152a:	e014      	b.n	8001556 <GPIO_SetOutputType+0x46>
		port->OTYPER &= ~(1U << pin);
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	685a      	ldr	r2, [r3, #4]
 8001530:	88bb      	ldrh	r3, [r7, #4]
 8001532:	2101      	movs	r1, #1
 8001534:	fa01 f303 	lsl.w	r3, r1, r3
 8001538:	43db      	mvns	r3, r3
 800153a:	401a      	ands	r2, r3
 800153c:	683b      	ldr	r3, [r7, #0]
 800153e:	605a      	str	r2, [r3, #4]
		break;
 8001540:	e009      	b.n	8001556 <GPIO_SetOutputType+0x46>
		port->OTYPER |= (1U << pin);
 8001542:	683b      	ldr	r3, [r7, #0]
 8001544:	685a      	ldr	r2, [r3, #4]
 8001546:	88bb      	ldrh	r3, [r7, #4]
 8001548:	2101      	movs	r1, #1
 800154a:	fa01 f303 	lsl.w	r3, r1, r3
 800154e:	431a      	orrs	r2, r3
 8001550:	683b      	ldr	r3, [r7, #0]
 8001552:	605a      	str	r2, [r3, #4]
		break;
 8001554:	bf00      	nop
}
 8001556:	bf00      	nop
 8001558:	370c      	adds	r7, #12
 800155a:	46bd      	mov	sp, r7
 800155c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001560:	4770      	bx	lr
	...

08001564 <GPIO_SetOutputSpeed>:

/*Set Output speed*/
void GPIO_SetOutputSpeed(GPIO_OutputSpeed_t speed, GPIO_TypeDef *port,
		uint16_t pin)
{
 8001564:	b480      	push	{r7}
 8001566:	b083      	sub	sp, #12
 8001568:	af00      	add	r7, sp, #0
 800156a:	4603      	mov	r3, r0
 800156c:	6039      	str	r1, [r7, #0]
 800156e:	71fb      	strb	r3, [r7, #7]
 8001570:	4613      	mov	r3, r2
 8001572:	80bb      	strh	r3, [r7, #4]

	switch (speed)
 8001574:	79fb      	ldrb	r3, [r7, #7]
 8001576:	2b03      	cmp	r3, #3
 8001578:	d866      	bhi.n	8001648 <GPIO_SetOutputSpeed+0xe4>
 800157a:	a201      	add	r2, pc, #4	; (adr r2, 8001580 <GPIO_SetOutputSpeed+0x1c>)
 800157c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001580:	08001591 	.word	0x08001591
 8001584:	080015c1 	.word	0x080015c1
 8001588:	080015ef 	.word	0x080015ef
 800158c:	0800161d 	.word	0x0800161d
	{
	case GPIO_OUT_SPEED_VLOW:

		port->OSPEEDR &= ~(1U << (pin * 2));      // Set as very low speed
 8001590:	683b      	ldr	r3, [r7, #0]
 8001592:	689a      	ldr	r2, [r3, #8]
 8001594:	88bb      	ldrh	r3, [r7, #4]
 8001596:	005b      	lsls	r3, r3, #1
 8001598:	2101      	movs	r1, #1
 800159a:	fa01 f303 	lsl.w	r3, r1, r3
 800159e:	43db      	mvns	r3, r3
 80015a0:	401a      	ands	r2, r3
 80015a2:	683b      	ldr	r3, [r7, #0]
 80015a4:	609a      	str	r2, [r3, #8]
		port->OSPEEDR &= ~(1U << (pin * 2 + 1));
 80015a6:	683b      	ldr	r3, [r7, #0]
 80015a8:	689a      	ldr	r2, [r3, #8]
 80015aa:	88bb      	ldrh	r3, [r7, #4]
 80015ac:	005b      	lsls	r3, r3, #1
 80015ae:	3301      	adds	r3, #1
 80015b0:	2101      	movs	r1, #1
 80015b2:	fa01 f303 	lsl.w	r3, r1, r3
 80015b6:	43db      	mvns	r3, r3
 80015b8:	401a      	ands	r2, r3
 80015ba:	683b      	ldr	r3, [r7, #0]
 80015bc:	609a      	str	r2, [r3, #8]

		break;
 80015be:	e043      	b.n	8001648 <GPIO_SetOutputSpeed+0xe4>

	case GPIO_OUT_SPEED_LOW:

		port->OSPEEDR |= (1U << (pin * 2));      // Set as low speed
 80015c0:	683b      	ldr	r3, [r7, #0]
 80015c2:	689a      	ldr	r2, [r3, #8]
 80015c4:	88bb      	ldrh	r3, [r7, #4]
 80015c6:	005b      	lsls	r3, r3, #1
 80015c8:	2101      	movs	r1, #1
 80015ca:	fa01 f303 	lsl.w	r3, r1, r3
 80015ce:	431a      	orrs	r2, r3
 80015d0:	683b      	ldr	r3, [r7, #0]
 80015d2:	609a      	str	r2, [r3, #8]
		port->OSPEEDR &= ~(1U << (pin * 2 + 1));
 80015d4:	683b      	ldr	r3, [r7, #0]
 80015d6:	689a      	ldr	r2, [r3, #8]
 80015d8:	88bb      	ldrh	r3, [r7, #4]
 80015da:	005b      	lsls	r3, r3, #1
 80015dc:	3301      	adds	r3, #1
 80015de:	2101      	movs	r1, #1
 80015e0:	fa01 f303 	lsl.w	r3, r1, r3
 80015e4:	43db      	mvns	r3, r3
 80015e6:	401a      	ands	r2, r3
 80015e8:	683b      	ldr	r3, [r7, #0]
 80015ea:	609a      	str	r2, [r3, #8]

		break;
 80015ec:	e02c      	b.n	8001648 <GPIO_SetOutputSpeed+0xe4>

	case GPIO_OUT_SPEED_HIGH:

		port->OSPEEDR &= ~(1U << (pin * 2));      // Set as high speed
 80015ee:	683b      	ldr	r3, [r7, #0]
 80015f0:	689a      	ldr	r2, [r3, #8]
 80015f2:	88bb      	ldrh	r3, [r7, #4]
 80015f4:	005b      	lsls	r3, r3, #1
 80015f6:	2101      	movs	r1, #1
 80015f8:	fa01 f303 	lsl.w	r3, r1, r3
 80015fc:	43db      	mvns	r3, r3
 80015fe:	401a      	ands	r2, r3
 8001600:	683b      	ldr	r3, [r7, #0]
 8001602:	609a      	str	r2, [r3, #8]
		port->OSPEEDR |= (1U << (pin * 2 + 1));
 8001604:	683b      	ldr	r3, [r7, #0]
 8001606:	689a      	ldr	r2, [r3, #8]
 8001608:	88bb      	ldrh	r3, [r7, #4]
 800160a:	005b      	lsls	r3, r3, #1
 800160c:	3301      	adds	r3, #1
 800160e:	2101      	movs	r1, #1
 8001610:	fa01 f303 	lsl.w	r3, r1, r3
 8001614:	431a      	orrs	r2, r3
 8001616:	683b      	ldr	r3, [r7, #0]
 8001618:	609a      	str	r2, [r3, #8]

		break;
 800161a:	e015      	b.n	8001648 <GPIO_SetOutputSpeed+0xe4>

	case GPIO_OUT_SPEED_VHIGH:

		port->OSPEEDR |= (1U << (pin * 2));      // Set as very high speed
 800161c:	683b      	ldr	r3, [r7, #0]
 800161e:	689a      	ldr	r2, [r3, #8]
 8001620:	88bb      	ldrh	r3, [r7, #4]
 8001622:	005b      	lsls	r3, r3, #1
 8001624:	2101      	movs	r1, #1
 8001626:	fa01 f303 	lsl.w	r3, r1, r3
 800162a:	431a      	orrs	r2, r3
 800162c:	683b      	ldr	r3, [r7, #0]
 800162e:	609a      	str	r2, [r3, #8]
		port->OSPEEDR |= (1U << (pin * 2 + 1));
 8001630:	683b      	ldr	r3, [r7, #0]
 8001632:	689a      	ldr	r2, [r3, #8]
 8001634:	88bb      	ldrh	r3, [r7, #4]
 8001636:	005b      	lsls	r3, r3, #1
 8001638:	3301      	adds	r3, #1
 800163a:	2101      	movs	r1, #1
 800163c:	fa01 f303 	lsl.w	r3, r1, r3
 8001640:	431a      	orrs	r2, r3
 8001642:	683b      	ldr	r3, [r7, #0]
 8001644:	609a      	str	r2, [r3, #8]

		break;
 8001646:	bf00      	nop
	}

}
 8001648:	bf00      	nop
 800164a:	370c      	adds	r7, #12
 800164c:	46bd      	mov	sp, r7
 800164e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001652:	4770      	bx	lr

08001654 <GPIO_WritePin>:

}

/*Set the gpio output*/
void GPIO_WritePin(GPIO_TypeDef *port, uint16_t pin, uint8_t val)
{
 8001654:	b480      	push	{r7}
 8001656:	b083      	sub	sp, #12
 8001658:	af00      	add	r7, sp, #0
 800165a:	6078      	str	r0, [r7, #4]
 800165c:	460b      	mov	r3, r1
 800165e:	807b      	strh	r3, [r7, #2]
 8001660:	4613      	mov	r3, r2
 8001662:	707b      	strb	r3, [r7, #1]
	if (val > 0)
 8001664:	787b      	ldrb	r3, [r7, #1]
 8001666:	2b00      	cmp	r3, #0
 8001668:	d009      	beq.n	800167e <GPIO_WritePin+0x2a>
	{
		port->ODR |= (1U << pin);
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	695a      	ldr	r2, [r3, #20]
 800166e:	887b      	ldrh	r3, [r7, #2]
 8001670:	2101      	movs	r1, #1
 8001672:	fa01 f303 	lsl.w	r3, r1, r3
 8001676:	431a      	orrs	r2, r3
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	615a      	str	r2, [r3, #20]
	}
	else
	{
		port->ODR &= ~(1U << pin);
	}
}
 800167c:	e009      	b.n	8001692 <GPIO_WritePin+0x3e>
		port->ODR &= ~(1U << pin);
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	695a      	ldr	r2, [r3, #20]
 8001682:	887b      	ldrh	r3, [r7, #2]
 8001684:	2101      	movs	r1, #1
 8001686:	fa01 f303 	lsl.w	r3, r1, r3
 800168a:	43db      	mvns	r3, r3
 800168c:	401a      	ands	r2, r3
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	615a      	str	r2, [r3, #20]
}
 8001692:	bf00      	nop
 8001694:	370c      	adds	r7, #12
 8001696:	46bd      	mov	sp, r7
 8001698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800169c:	4770      	bx	lr
	...

080016a0 <spi1_gpio_init>:
/************************************
 * GLOBAL FUNCTIONS
 ************************************/

void spi1_gpio_init(void)
{
 80016a0:	b580      	push	{r7, lr}
 80016a2:	af00      	add	r7, sp, #0
	/*Start the GPIO Clock*/
	GPIO_Clock_Init(GPIOA_CLK);
 80016a4:	2000      	movs	r0, #0
 80016a6:	f7ff fe6b 	bl	8001380 <GPIO_Clock_Init>

	/*Set PA5,PA6,PA7 mode to alternate function*/

	/*PA5*/
	GPIOA->MODER &= ~(1U << 10);
 80016aa:	4b37      	ldr	r3, [pc, #220]	; (8001788 <spi1_gpio_init+0xe8>)
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	4a36      	ldr	r2, [pc, #216]	; (8001788 <spi1_gpio_init+0xe8>)
 80016b0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80016b4:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 11);
 80016b6:	4b34      	ldr	r3, [pc, #208]	; (8001788 <spi1_gpio_init+0xe8>)
 80016b8:	681b      	ldr	r3, [r3, #0]
 80016ba:	4a33      	ldr	r2, [pc, #204]	; (8001788 <spi1_gpio_init+0xe8>)
 80016bc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80016c0:	6013      	str	r3, [r2, #0]

	/*PA6*/
	GPIOA->MODER &= ~(1U << 12);
 80016c2:	4b31      	ldr	r3, [pc, #196]	; (8001788 <spi1_gpio_init+0xe8>)
 80016c4:	681b      	ldr	r3, [r3, #0]
 80016c6:	4a30      	ldr	r2, [pc, #192]	; (8001788 <spi1_gpio_init+0xe8>)
 80016c8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80016cc:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 13);
 80016ce:	4b2e      	ldr	r3, [pc, #184]	; (8001788 <spi1_gpio_init+0xe8>)
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	4a2d      	ldr	r2, [pc, #180]	; (8001788 <spi1_gpio_init+0xe8>)
 80016d4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80016d8:	6013      	str	r3, [r2, #0]

	/*PA7*/
	GPIOA->MODER &= ~(1U << 14);
 80016da:	4b2b      	ldr	r3, [pc, #172]	; (8001788 <spi1_gpio_init+0xe8>)
 80016dc:	681b      	ldr	r3, [r3, #0]
 80016de:	4a2a      	ldr	r2, [pc, #168]	; (8001788 <spi1_gpio_init+0xe8>)
 80016e0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80016e4:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 15);
 80016e6:	4b28      	ldr	r3, [pc, #160]	; (8001788 <spi1_gpio_init+0xe8>)
 80016e8:	681b      	ldr	r3, [r3, #0]
 80016ea:	4a27      	ldr	r2, [pc, #156]	; (8001788 <spi1_gpio_init+0xe8>)
 80016ec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80016f0:	6013      	str	r3, [r2, #0]

	/*Set PA5,PA6,PA7 alternate function type to SPI1*/
	/*PA5*/
	GPIOA->AFR[0] |= (1U << 20);
 80016f2:	4b25      	ldr	r3, [pc, #148]	; (8001788 <spi1_gpio_init+0xe8>)
 80016f4:	6a1b      	ldr	r3, [r3, #32]
 80016f6:	4a24      	ldr	r2, [pc, #144]	; (8001788 <spi1_gpio_init+0xe8>)
 80016f8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80016fc:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 21);
 80016fe:	4b22      	ldr	r3, [pc, #136]	; (8001788 <spi1_gpio_init+0xe8>)
 8001700:	6a1b      	ldr	r3, [r3, #32]
 8001702:	4a21      	ldr	r2, [pc, #132]	; (8001788 <spi1_gpio_init+0xe8>)
 8001704:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001708:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 22);
 800170a:	4b1f      	ldr	r3, [pc, #124]	; (8001788 <spi1_gpio_init+0xe8>)
 800170c:	6a1b      	ldr	r3, [r3, #32]
 800170e:	4a1e      	ldr	r2, [pc, #120]	; (8001788 <spi1_gpio_init+0xe8>)
 8001710:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001714:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 23);
 8001716:	4b1c      	ldr	r3, [pc, #112]	; (8001788 <spi1_gpio_init+0xe8>)
 8001718:	6a1b      	ldr	r3, [r3, #32]
 800171a:	4a1b      	ldr	r2, [pc, #108]	; (8001788 <spi1_gpio_init+0xe8>)
 800171c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001720:	6213      	str	r3, [r2, #32]

	/*PA6*/
	GPIOA->AFR[0] |= (1U << 24);
 8001722:	4b19      	ldr	r3, [pc, #100]	; (8001788 <spi1_gpio_init+0xe8>)
 8001724:	6a1b      	ldr	r3, [r3, #32]
 8001726:	4a18      	ldr	r2, [pc, #96]	; (8001788 <spi1_gpio_init+0xe8>)
 8001728:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800172c:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 25);
 800172e:	4b16      	ldr	r3, [pc, #88]	; (8001788 <spi1_gpio_init+0xe8>)
 8001730:	6a1b      	ldr	r3, [r3, #32]
 8001732:	4a15      	ldr	r2, [pc, #84]	; (8001788 <spi1_gpio_init+0xe8>)
 8001734:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8001738:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 26);
 800173a:	4b13      	ldr	r3, [pc, #76]	; (8001788 <spi1_gpio_init+0xe8>)
 800173c:	6a1b      	ldr	r3, [r3, #32]
 800173e:	4a12      	ldr	r2, [pc, #72]	; (8001788 <spi1_gpio_init+0xe8>)
 8001740:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001744:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 27);
 8001746:	4b10      	ldr	r3, [pc, #64]	; (8001788 <spi1_gpio_init+0xe8>)
 8001748:	6a1b      	ldr	r3, [r3, #32]
 800174a:	4a0f      	ldr	r2, [pc, #60]	; (8001788 <spi1_gpio_init+0xe8>)
 800174c:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8001750:	6213      	str	r3, [r2, #32]

	/*PA7*/
	GPIOA->AFR[0] |= (1U << 28);
 8001752:	4b0d      	ldr	r3, [pc, #52]	; (8001788 <spi1_gpio_init+0xe8>)
 8001754:	6a1b      	ldr	r3, [r3, #32]
 8001756:	4a0c      	ldr	r2, [pc, #48]	; (8001788 <spi1_gpio_init+0xe8>)
 8001758:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800175c:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 29);
 800175e:	4b0a      	ldr	r3, [pc, #40]	; (8001788 <spi1_gpio_init+0xe8>)
 8001760:	6a1b      	ldr	r3, [r3, #32]
 8001762:	4a09      	ldr	r2, [pc, #36]	; (8001788 <spi1_gpio_init+0xe8>)
 8001764:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8001768:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 30);
 800176a:	4b07      	ldr	r3, [pc, #28]	; (8001788 <spi1_gpio_init+0xe8>)
 800176c:	6a1b      	ldr	r3, [r3, #32]
 800176e:	4a06      	ldr	r2, [pc, #24]	; (8001788 <spi1_gpio_init+0xe8>)
 8001770:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8001774:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U << 31);
 8001776:	4b04      	ldr	r3, [pc, #16]	; (8001788 <spi1_gpio_init+0xe8>)
 8001778:	6a1b      	ldr	r3, [r3, #32]
 800177a:	4a03      	ldr	r2, [pc, #12]	; (8001788 <spi1_gpio_init+0xe8>)
 800177c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8001780:	6213      	str	r3, [r2, #32]

}
 8001782:	bf00      	nop
 8001784:	bd80      	pop	{r7, pc}
 8001786:	bf00      	nop
 8001788:	40020000 	.word	0x40020000

0800178c <SPI_Init>:

StatusTypeDef SPI_Init(SPI_HandleTypeDef *hspi)
{
 800178c:	b580      	push	{r7, lr}
 800178e:	b082      	sub	sp, #8
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]

	spi1_gpio_init(); // Init the GPIO
 8001794:	f7ff ff84 	bl	80016a0 <spi1_gpio_init>

	RCC->APB2ENR |= (1 << 12);  // Enable SPI1 CLock
 8001798:	4b2c      	ldr	r3, [pc, #176]	; (800184c <SPI_Init+0xc0>)
 800179a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800179c:	4a2b      	ldr	r2, [pc, #172]	; (800184c <SPI_Init+0xc0>)
 800179e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80017a2:	6453      	str	r3, [r2, #68]	; 0x44

	hspi->Instance->CR1 |= (1 << 0) | (1 << 1);   // CPOL=1, CPHA=1
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	681b      	ldr	r3, [r3, #0]
 80017a8:	681a      	ldr	r2, [r3, #0]
 80017aa:	687b      	ldr	r3, [r7, #4]
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	f042 0203 	orr.w	r2, r2, #3
 80017b2:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR1 |= (1 << 2);  // Master Mode
 80017b4:	687b      	ldr	r3, [r7, #4]
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	681a      	ldr	r2, [r3, #0]
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	f042 0204 	orr.w	r2, r2, #4
 80017c2:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR1 |=  (1 << 3); // BR[2:0] = 011: fPCLK/2, PCLK2 = 80MHz, SPI clk = 5MHz
 80017c4:	687b      	ldr	r3, [r7, #4]
 80017c6:	681b      	ldr	r3, [r3, #0]
 80017c8:	681a      	ldr	r2, [r3, #0]
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	f042 0208 	orr.w	r2, r2, #8
 80017d2:	601a      	str	r2, [r3, #0]
	hspi->Instance->CR1 &= ~(1 << 4);
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	681a      	ldr	r2, [r3, #0]
 80017da:	687b      	ldr	r3, [r7, #4]
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	f022 0210 	bic.w	r2, r2, #16
 80017e2:	601a      	str	r2, [r3, #0]
	hspi->Instance->CR1 &= ~(1 << 5);
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	681a      	ldr	r2, [r3, #0]
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	f022 0220 	bic.w	r2, r2, #32
 80017f2:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR1 &= ~(1 << 7);  // LSBFIRST = 0, MSB first
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	681b      	ldr	r3, [r3, #0]
 80017f8:	681a      	ldr	r2, [r3, #0]
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	681b      	ldr	r3, [r3, #0]
 80017fe:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001802:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR1 |= (1 << 8) | (1 << 9); // SSM=1, SSi=1 -> Software Slave Management
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	681a      	ldr	r2, [r3, #0]
 800180a:	687b      	ldr	r3, [r7, #4]
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8001812:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR1 &= ~(1 << 10);  // RXONLY = 0, full-duplex
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	681a      	ldr	r2, [r3, #0]
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	681b      	ldr	r3, [r3, #0]
 800181e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001822:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR1 &= ~(1 << 11);  // DFF=0, 8 bit data
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	681a      	ldr	r2, [r3, #0]
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001832:	601a      	str	r2, [r3, #0]

	hspi->Instance->CR2 = 0;
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	681b      	ldr	r3, [r3, #0]
 8001838:	2200      	movs	r2, #0
 800183a:	605a      	str	r2, [r3, #4]

	SPI_Enable(&HSPI1);
 800183c:	4804      	ldr	r0, [pc, #16]	; (8001850 <SPI_Init+0xc4>)
 800183e:	f000 f84b 	bl	80018d8 <SPI_Enable>

	return DEV_OK;
 8001842:	2300      	movs	r3, #0
}
 8001844:	4618      	mov	r0, r3
 8001846:	3708      	adds	r7, #8
 8001848:	46bd      	mov	sp, r7
 800184a:	bd80      	pop	{r7, pc}
 800184c:	40023800 	.word	0x40023800
 8001850:	20000000 	.word	0x20000000

08001854 <SPI_Transmit>:

StatusTypeDef SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *data,
		uint16_t size, uint32_t timeout)
{
 8001854:	b480      	push	{r7}
 8001856:	b089      	sub	sp, #36	; 0x24
 8001858:	af00      	add	r7, sp, #0
 800185a:	60f8      	str	r0, [r7, #12]
 800185c:	60b9      	str	r1, [r7, #8]
 800185e:	603b      	str	r3, [r7, #0]
 8001860:	4613      	mov	r3, r2
 8001862:	80fb      	strh	r3, [r7, #6]

	SPI_TypeDef *SPI = hspi->Instance;
 8001864:	68fb      	ldr	r3, [r7, #12]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	61bb      	str	r3, [r7, #24]

	int i = 0;
 800186a:	2300      	movs	r3, #0
 800186c:	61fb      	str	r3, [r7, #28]
	while (i < size)
 800186e:	e010      	b.n	8001892 <SPI_Transmit+0x3e>
	{
		while (!((SPI->SR) & (1 << 1)))
 8001870:	bf00      	nop
 8001872:	69bb      	ldr	r3, [r7, #24]
 8001874:	689b      	ldr	r3, [r3, #8]
 8001876:	f003 0302 	and.w	r3, r3, #2
 800187a:	2b00      	cmp	r3, #0
 800187c:	d0f9      	beq.n	8001872 <SPI_Transmit+0x1e>
		{
		}; // wait for TXE bit to set -> This will indicate that the buffer is empty
		SPI->DR = data[i];  // load the data into the Data Register
 800187e:	69fb      	ldr	r3, [r7, #28]
 8001880:	68ba      	ldr	r2, [r7, #8]
 8001882:	4413      	add	r3, r2
 8001884:	781b      	ldrb	r3, [r3, #0]
 8001886:	461a      	mov	r2, r3
 8001888:	69bb      	ldr	r3, [r7, #24]
 800188a:	60da      	str	r2, [r3, #12]
		i++;
 800188c:	69fb      	ldr	r3, [r7, #28]
 800188e:	3301      	adds	r3, #1
 8001890:	61fb      	str	r3, [r7, #28]
	while (i < size)
 8001892:	88fb      	ldrh	r3, [r7, #6]
 8001894:	69fa      	ldr	r2, [r7, #28]
 8001896:	429a      	cmp	r2, r3
 8001898:	dbea      	blt.n	8001870 <SPI_Transmit+0x1c>
	}

	while (!((SPI->SR) & (1 << 1)))
 800189a:	bf00      	nop
 800189c:	69bb      	ldr	r3, [r7, #24]
 800189e:	689b      	ldr	r3, [r3, #8]
 80018a0:	f003 0302 	and.w	r3, r3, #2
 80018a4:	2b00      	cmp	r3, #0
 80018a6:	d0f9      	beq.n	800189c <SPI_Transmit+0x48>
	{
	}; // wait for TXE bit to set -> This will indicate that the buffer is empty
	while (((SPI->SR) & (1 << 7)))
 80018a8:	bf00      	nop
 80018aa:	69bb      	ldr	r3, [r7, #24]
 80018ac:	689b      	ldr	r3, [r3, #8]
 80018ae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d1f9      	bne.n	80018aa <SPI_Transmit+0x56>
	{
	}; // wait for BSY bit to Reset -> This will indicate that SPI is not busy in communication

	//  Clear the Overrun flag by reading DR and SR
	uint8_t temp = SPI->DR;
 80018b6:	69bb      	ldr	r3, [r7, #24]
 80018b8:	68db      	ldr	r3, [r3, #12]
 80018ba:	75fb      	strb	r3, [r7, #23]
	temp = SPI1->SR;
 80018bc:	4b05      	ldr	r3, [pc, #20]	; (80018d4 <SPI_Transmit+0x80>)
 80018be:	689b      	ldr	r3, [r3, #8]
 80018c0:	75fb      	strb	r3, [r7, #23]
	temp = 0;
 80018c2:	2300      	movs	r3, #0
 80018c4:	75fb      	strb	r3, [r7, #23]

	return DEV_OK;
 80018c6:	2300      	movs	r3, #0
}
 80018c8:	4618      	mov	r0, r3
 80018ca:	3724      	adds	r7, #36	; 0x24
 80018cc:	46bd      	mov	sp, r7
 80018ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018d2:	4770      	bx	lr
 80018d4:	40013000 	.word	0x40013000

080018d8 <SPI_Enable>:

	return DEV_OK;
}

void SPI_Enable (SPI_HandleTypeDef *hspi)
{
 80018d8:	b480      	push	{r7}
 80018da:	b085      	sub	sp, #20
 80018dc:	af00      	add	r7, sp, #0
 80018de:	6078      	str	r0, [r7, #4]
	SPI_TypeDef *SPI = hspi->Instance;
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	681b      	ldr	r3, [r3, #0]
 80018e4:	60fb      	str	r3, [r7, #12]

	SPI->CR1 |= (1<<6);   // SPE=1, Peripheral enabled
 80018e6:	68fb      	ldr	r3, [r7, #12]
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80018ee:	68fb      	ldr	r3, [r7, #12]
 80018f0:	601a      	str	r2, [r3, #0]
}
 80018f2:	bf00      	nop
 80018f4:	3714      	adds	r7, #20
 80018f6:	46bd      	mov	sp, r7
 80018f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fc:	4770      	bx	lr
	...

08001900 <tick_increment>:
static void tick_increment(void);
/************************************
 * STATIC FUNCTIONS
 ************************************/
static void tick_increment(void)
{
 8001900:	b480      	push	{r7}
 8001902:	af00      	add	r7, sp, #0
	g_curr_tick += TICK_FREQ;
 8001904:	4b04      	ldr	r3, [pc, #16]	; (8001918 <tick_increment+0x18>)
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	3301      	adds	r3, #1
 800190a:	4a03      	ldr	r2, [pc, #12]	; (8001918 <tick_increment+0x18>)
 800190c:	6013      	str	r3, [r2, #0]
}
 800190e:	bf00      	nop
 8001910:	46bd      	mov	sp, r7
 8001912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001916:	4770      	bx	lr
 8001918:	20000068 	.word	0x20000068

0800191c <Time_Delay_Ms>:
 * @brief Adds a blocking delay
 *
 * @param delay in ms
 */
void Time_Delay_Ms(uint32_t delay)
{
 800191c:	b580      	push	{r7, lr}
 800191e:	b084      	sub	sp, #16
 8001920:	af00      	add	r7, sp, #0
 8001922:	6078      	str	r0, [r7, #4]
	uint32_t tickstart = Time_Get_Tick();
 8001924:	f000 f818 	bl	8001958 <Time_Get_Tick>
 8001928:	60b8      	str	r0, [r7, #8]
	uint32_t wait = delay;
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	60fb      	str	r3, [r7, #12]

	if (wait < MAX_DELAY)
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001934:	d002      	beq.n	800193c <Time_Delay_Ms+0x20>
	{
		wait += (uint32_t) TICK_FREQ;
 8001936:	68fb      	ldr	r3, [r7, #12]
 8001938:	3301      	adds	r3, #1
 800193a:	60fb      	str	r3, [r7, #12]
	}

	while ((Time_Get_Tick() - tickstart) < wait)
 800193c:	bf00      	nop
 800193e:	f000 f80b 	bl	8001958 <Time_Get_Tick>
 8001942:	4602      	mov	r2, r0
 8001944:	68bb      	ldr	r3, [r7, #8]
 8001946:	1ad3      	subs	r3, r2, r3
 8001948:	68fa      	ldr	r2, [r7, #12]
 800194a:	429a      	cmp	r2, r3
 800194c:	d8f7      	bhi.n	800193e <Time_Delay_Ms+0x22>
	{
	}

}
 800194e:	bf00      	nop
 8001950:	bf00      	nop
 8001952:	3710      	adds	r7, #16
 8001954:	46bd      	mov	sp, r7
 8001956:	bd80      	pop	{r7, pc}

08001958 <Time_Get_Tick>:
 * @brief Return the current tick count
 *
 * @return uint32_t current ticks
 */
uint32_t Time_Get_Tick(void)
{
 8001958:	b480      	push	{r7}
 800195a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800195c:	b672      	cpsid	i
}
 800195e:	bf00      	nop
	__disable_irq();
	g_curr_tick_p = g_curr_tick;
 8001960:	4b06      	ldr	r3, [pc, #24]	; (800197c <Time_Get_Tick+0x24>)
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	4a06      	ldr	r2, [pc, #24]	; (8001980 <Time_Get_Tick+0x28>)
 8001966:	6013      	str	r3, [r2, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 8001968:	b662      	cpsie	i
}
 800196a:	bf00      	nop
	__enable_irq();

	return g_curr_tick_p;
 800196c:	4b04      	ldr	r3, [pc, #16]	; (8001980 <Time_Get_Tick+0x28>)
 800196e:	681b      	ldr	r3, [r3, #0]
}
 8001970:	4618      	mov	r0, r3
 8001972:	46bd      	mov	sp, r7
 8001974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001978:	4770      	bx	lr
 800197a:	bf00      	nop
 800197c:	20000068 	.word	0x20000068
 8001980:	2000006c 	.word	0x2000006c

08001984 <Time_Timebase_Init>:
/**
 * @brief Init the timebase and set core clock to 84MHZ
 *
 */
void Time_Timebase_Init(void)
{
 8001984:	b580      	push	{r7, lr}
 8001986:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8001988:	b672      	cpsid	i
}
 800198a:	bf00      	nop

	/*Disable global interrupts*/
	__disable_irq();

	RCC->PLLCFGR = 0x00000000;
 800198c:	4b3c      	ldr	r3, [pc, #240]	; (8001a80 <Time_Timebase_Init+0xfc>)
 800198e:	2200      	movs	r2, #0
 8001990:	605a      	str	r2, [r3, #4]

	RCC->CR |= RCC_CR_HSEON;
 8001992:	4b3b      	ldr	r3, [pc, #236]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001994:	681b      	ldr	r3, [r3, #0]
 8001996:	4a3a      	ldr	r2, [pc, #232]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001998:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800199c:	6013      	str	r3, [r2, #0]
	while (!(RCC->CR & RCC_CR_HSERDY))
 800199e:	bf00      	nop
 80019a0:	4b37      	ldr	r3, [pc, #220]	; (8001a80 <Time_Timebase_Init+0xfc>)
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80019a8:	2b00      	cmp	r3, #0
 80019aa:	d0f9      	beq.n	80019a0 <Time_Timebase_Init+0x1c>
	{
	}

	RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 80019ac:	4b34      	ldr	r3, [pc, #208]	; (8001a80 <Time_Timebase_Init+0xfc>)
 80019ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019b0:	4a33      	ldr	r2, [pc, #204]	; (8001a80 <Time_Timebase_Init+0xfc>)
 80019b2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80019b6:	6413      	str	r3, [r2, #64]	; 0x40
	PWR->CR |= PWR_CR_VOS;
 80019b8:	4b32      	ldr	r3, [pc, #200]	; (8001a84 <Time_Timebase_Init+0x100>)
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	4a31      	ldr	r2, [pc, #196]	; (8001a84 <Time_Timebase_Init+0x100>)
 80019be:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80019c2:	6013      	str	r3, [r2, #0]
	FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_PRFTEN | FLASH_ACR_DCEN |
 80019c4:	4b30      	ldr	r3, [pc, #192]	; (8001a88 <Time_Timebase_Init+0x104>)
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	4a2f      	ldr	r2, [pc, #188]	; (8001a88 <Time_Timebase_Init+0x104>)
 80019ca:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80019ce:	f043 0303 	orr.w	r3, r3, #3
 80019d2:	6013      	str	r3, [r2, #0]
	FLASH_ACR_LATENCY_3WS;

	RCC->PLLCFGR |= (pll_q << 24) | (pll_p << 16) | (pll_n << 6) | (pll_m << 0);
 80019d4:	4b2a      	ldr	r3, [pc, #168]	; (8001a80 <Time_Timebase_Init+0xfc>)
 80019d6:	685b      	ldr	r3, [r3, #4]
 80019d8:	4a2c      	ldr	r2, [pc, #176]	; (8001a8c <Time_Timebase_Init+0x108>)
 80019da:	7812      	ldrb	r2, [r2, #0]
 80019dc:	0611      	lsls	r1, r2, #24
 80019de:	4a2c      	ldr	r2, [pc, #176]	; (8001a90 <Time_Timebase_Init+0x10c>)
 80019e0:	7812      	ldrb	r2, [r2, #0]
 80019e2:	0412      	lsls	r2, r2, #16
 80019e4:	4311      	orrs	r1, r2
 80019e6:	4a2b      	ldr	r2, [pc, #172]	; (8001a94 <Time_Timebase_Init+0x110>)
 80019e8:	7812      	ldrb	r2, [r2, #0]
 80019ea:	0192      	lsls	r2, r2, #6
 80019ec:	430a      	orrs	r2, r1
 80019ee:	492a      	ldr	r1, [pc, #168]	; (8001a98 <Time_Timebase_Init+0x114>)
 80019f0:	7809      	ldrb	r1, [r1, #0]
 80019f2:	430a      	orrs	r2, r1
 80019f4:	4611      	mov	r1, r2
 80019f6:	4a22      	ldr	r2, [pc, #136]	; (8001a80 <Time_Timebase_Init+0xfc>)
 80019f8:	430b      	orrs	r3, r1
 80019fa:	6053      	str	r3, [r2, #4]

	RCC->PLLCFGR |= (1U << 22U);
 80019fc:	4b20      	ldr	r3, [pc, #128]	; (8001a80 <Time_Timebase_Init+0xfc>)
 80019fe:	685b      	ldr	r3, [r3, #4]
 8001a00:	4a1f      	ldr	r2, [pc, #124]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a02:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001a06:	6053      	str	r3, [r2, #4]

	//	RCC -> APB2ENR |= 0x4000;
	RCC->CR |= RCC_CR_PLLON;
 8001a08:	4b1d      	ldr	r3, [pc, #116]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a0a:	681b      	ldr	r3, [r3, #0]
 8001a0c:	4a1c      	ldr	r2, [pc, #112]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a0e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001a12:	6013      	str	r3, [r2, #0]
	while (!(RCC->CR & RCC_CR_PLLRDY))
 8001a14:	bf00      	nop
 8001a16:	4b1a      	ldr	r3, [pc, #104]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a18:	681b      	ldr	r3, [r3, #0]
 8001a1a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a1e:	2b00      	cmp	r3, #0
 8001a20:	d0f9      	beq.n	8001a16 <Time_Timebase_Init+0x92>
	{
	}


	RCC->CFGR &=~(1U << 0U);
 8001a22:	4b17      	ldr	r3, [pc, #92]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a24:	689b      	ldr	r3, [r3, #8]
 8001a26:	4a16      	ldr	r2, [pc, #88]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a28:	f023 0301 	bic.w	r3, r3, #1
 8001a2c:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= (1U << 1U);
 8001a2e:	4b14      	ldr	r3, [pc, #80]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a30:	689b      	ldr	r3, [r3, #8]
 8001a32:	4a13      	ldr	r2, [pc, #76]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a34:	f043 0302 	orr.w	r3, r3, #2
 8001a38:	6093      	str	r3, [r2, #8]

	while ((RCC->CFGR & RCC_CFGR_SWS_PLL) != RCC_CFGR_SWS_PLL)
 8001a3a:	bf00      	nop
 8001a3c:	4b10      	ldr	r3, [pc, #64]	; (8001a80 <Time_Timebase_Init+0xfc>)
 8001a3e:	689b      	ldr	r3, [r3, #8]
 8001a40:	f003 0308 	and.w	r3, r3, #8
 8001a44:	2b08      	cmp	r3, #8
 8001a46:	d1f9      	bne.n	8001a3c <Time_Timebase_Init+0xb8>
		;

	SystemCoreClockUpdate();
 8001a48:	f000 f832 	bl	8001ab0 <SystemCoreClockUpdate>

	/*Load the timer with number of clock cycles per second*/
	SysTick->LOAD = ONE_SEC_LOAD - 1;
 8001a4c:	4b13      	ldr	r3, [pc, #76]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a4e:	4a14      	ldr	r2, [pc, #80]	; (8001aa0 <Time_Timebase_Init+0x11c>)
 8001a50:	605a      	str	r2, [r3, #4]

	/*Clear systick current value register*/
	SysTick->VAL = 0;
 8001a52:	4b12      	ldr	r3, [pc, #72]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a54:	2200      	movs	r2, #0
 8001a56:	609a      	str	r2, [r3, #8]

	/*Select internal clock source*/
	SysTick->CTRL = CTRL_CLCKSRC;
 8001a58:	4b10      	ldr	r3, [pc, #64]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a5a:	2204      	movs	r2, #4
 8001a5c:	601a      	str	r2, [r3, #0]

	/*Enable interrupt*/
	SysTick->CTRL |= CTRL_TICKINT;
 8001a5e:	4b0f      	ldr	r3, [pc, #60]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a60:	681b      	ldr	r3, [r3, #0]
 8001a62:	4a0e      	ldr	r2, [pc, #56]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a64:	f043 0302 	orr.w	r3, r3, #2
 8001a68:	6013      	str	r3, [r2, #0]

	/*Enable systick*/
	SysTick->CTRL |= CTRL_ENABLE;
 8001a6a:	4b0c      	ldr	r3, [pc, #48]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a6c:	681b      	ldr	r3, [r3, #0]
 8001a6e:	4a0b      	ldr	r2, [pc, #44]	; (8001a9c <Time_Timebase_Init+0x118>)
 8001a70:	f043 0301 	orr.w	r3, r3, #1
 8001a74:	6013      	str	r3, [r2, #0]
  __ASM volatile ("cpsie i" : : : "memory");
 8001a76:	b662      	cpsie	i
}
 8001a78:	bf00      	nop

	/*Enable global interrupts*/
	__enable_irq();
}
 8001a7a:	bf00      	nop
 8001a7c:	bd80      	pop	{r7, pc}
 8001a7e:	bf00      	nop
 8001a80:	40023800 	.word	0x40023800
 8001a84:	40007000 	.word	0x40007000
 8001a88:	40023c00 	.word	0x40023c00
 8001a8c:	2000004a 	.word	0x2000004a
 8001a90:	20000070 	.word	0x20000070
 8001a94:	20000049 	.word	0x20000049
 8001a98:	20000048 	.word	0x20000048
 8001a9c:	e000e010 	.word	0xe000e010
 8001aa0:	0501bcff 	.word	0x0501bcff

08001aa4 <SysTick_Handler>:
/**
 * @brief Routine handler for systick increment
 *
 */
void SysTick_Handler(void)
{
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	af00      	add	r7, sp, #0
	tick_increment();
 8001aa8:	f7ff ff2a 	bl	8001900 <tick_increment>
}
 8001aac:	bf00      	nop
 8001aae:	bd80      	pop	{r7, pc}

08001ab0 <SystemCoreClockUpdate>:

void SystemCoreClockUpdate(void)
{
 8001ab0:	b480      	push	{r7}
 8001ab2:	b087      	sub	sp, #28
 8001ab4:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8001ab6:	2300      	movs	r3, #0
 8001ab8:	613b      	str	r3, [r7, #16]
 8001aba:	2300      	movs	r3, #0
 8001abc:	617b      	str	r3, [r7, #20]
 8001abe:	2302      	movs	r3, #2
 8001ac0:	60fb      	str	r3, [r7, #12]
 8001ac2:	2300      	movs	r3, #0
 8001ac4:	60bb      	str	r3, [r7, #8]
 8001ac6:	2302      	movs	r3, #2
 8001ac8:	607b      	str	r3, [r7, #4]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001aca:	4b34      	ldr	r3, [pc, #208]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001acc:	689b      	ldr	r3, [r3, #8]
 8001ace:	f003 030c 	and.w	r3, r3, #12
 8001ad2:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8001ad4:	693b      	ldr	r3, [r7, #16]
 8001ad6:	2b08      	cmp	r3, #8
 8001ad8:	d011      	beq.n	8001afe <SystemCoreClockUpdate+0x4e>
 8001ada:	693b      	ldr	r3, [r7, #16]
 8001adc:	2b08      	cmp	r3, #8
 8001ade:	d844      	bhi.n	8001b6a <SystemCoreClockUpdate+0xba>
 8001ae0:	693b      	ldr	r3, [r7, #16]
 8001ae2:	2b00      	cmp	r3, #0
 8001ae4:	d003      	beq.n	8001aee <SystemCoreClockUpdate+0x3e>
 8001ae6:	693b      	ldr	r3, [r7, #16]
 8001ae8:	2b04      	cmp	r3, #4
 8001aea:	d004      	beq.n	8001af6 <SystemCoreClockUpdate+0x46>
 8001aec:	e03d      	b.n	8001b6a <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8001aee:	4b2c      	ldr	r3, [pc, #176]	; (8001ba0 <SystemCoreClockUpdate+0xf0>)
 8001af0:	4a2c      	ldr	r2, [pc, #176]	; (8001ba4 <SystemCoreClockUpdate+0xf4>)
 8001af2:	601a      	str	r2, [r3, #0]
      break;
 8001af4:	e03d      	b.n	8001b72 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8001af6:	4b2a      	ldr	r3, [pc, #168]	; (8001ba0 <SystemCoreClockUpdate+0xf0>)
 8001af8:	4a2b      	ldr	r2, [pc, #172]	; (8001ba8 <SystemCoreClockUpdate+0xf8>)
 8001afa:	601a      	str	r2, [r3, #0]
      break;
 8001afc:	e039      	b.n	8001b72 <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8001afe:	4b27      	ldr	r3, [pc, #156]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001b00:	685b      	ldr	r3, [r3, #4]
 8001b02:	0d9b      	lsrs	r3, r3, #22
 8001b04:	f003 0301 	and.w	r3, r3, #1
 8001b08:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001b0a:	4b24      	ldr	r3, [pc, #144]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001b0c:	685b      	ldr	r3, [r3, #4]
 8001b0e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001b12:	607b      	str	r3, [r7, #4]

      if (pllsource != 0)
 8001b14:	68bb      	ldr	r3, [r7, #8]
 8001b16:	2b00      	cmp	r3, #0
 8001b18:	d00c      	beq.n	8001b34 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001b1a:	4a23      	ldr	r2, [pc, #140]	; (8001ba8 <SystemCoreClockUpdate+0xf8>)
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b22:	4a1e      	ldr	r2, [pc, #120]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001b24:	6852      	ldr	r2, [r2, #4]
 8001b26:	0992      	lsrs	r2, r2, #6
 8001b28:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001b2c:	fb02 f303 	mul.w	r3, r2, r3
 8001b30:	617b      	str	r3, [r7, #20]
 8001b32:	e00b      	b.n	8001b4c <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001b34:	4a1b      	ldr	r2, [pc, #108]	; (8001ba4 <SystemCoreClockUpdate+0xf4>)
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b3c:	4a17      	ldr	r2, [pc, #92]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001b3e:	6852      	ldr	r2, [r2, #4]
 8001b40:	0992      	lsrs	r2, r2, #6
 8001b42:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001b46:	fb02 f303 	mul.w	r3, r2, r3
 8001b4a:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8001b4c:	4b13      	ldr	r3, [pc, #76]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001b4e:	685b      	ldr	r3, [r3, #4]
 8001b50:	0c1b      	lsrs	r3, r3, #16
 8001b52:	f003 0303 	and.w	r3, r3, #3
 8001b56:	3301      	adds	r3, #1
 8001b58:	005b      	lsls	r3, r3, #1
 8001b5a:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8001b5c:	697a      	ldr	r2, [r7, #20]
 8001b5e:	68fb      	ldr	r3, [r7, #12]
 8001b60:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b64:	4a0e      	ldr	r2, [pc, #56]	; (8001ba0 <SystemCoreClockUpdate+0xf0>)
 8001b66:	6013      	str	r3, [r2, #0]
      break;
 8001b68:	e003      	b.n	8001b72 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 8001b6a:	4b0d      	ldr	r3, [pc, #52]	; (8001ba0 <SystemCoreClockUpdate+0xf0>)
 8001b6c:	4a0d      	ldr	r2, [pc, #52]	; (8001ba4 <SystemCoreClockUpdate+0xf4>)
 8001b6e:	601a      	str	r2, [r3, #0]
      break;
 8001b70:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8001b72:	4b0a      	ldr	r3, [pc, #40]	; (8001b9c <SystemCoreClockUpdate+0xec>)
 8001b74:	689b      	ldr	r3, [r3, #8]
 8001b76:	091b      	lsrs	r3, r3, #4
 8001b78:	f003 030f 	and.w	r3, r3, #15
 8001b7c:	4a0b      	ldr	r2, [pc, #44]	; (8001bac <SystemCoreClockUpdate+0xfc>)
 8001b7e:	5cd3      	ldrb	r3, [r2, r3]
 8001b80:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8001b82:	4b07      	ldr	r3, [pc, #28]	; (8001ba0 <SystemCoreClockUpdate+0xf0>)
 8001b84:	681a      	ldr	r2, [r3, #0]
 8001b86:	693b      	ldr	r3, [r7, #16]
 8001b88:	fa22 f303 	lsr.w	r3, r2, r3
 8001b8c:	4a04      	ldr	r2, [pc, #16]	; (8001ba0 <SystemCoreClockUpdate+0xf0>)
 8001b8e:	6013      	str	r3, [r2, #0]
}
 8001b90:	bf00      	nop
 8001b92:	371c      	adds	r7, #28
 8001b94:	46bd      	mov	sp, r7
 8001b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b9a:	4770      	bx	lr
 8001b9c:	40023800 	.word	0x40023800
 8001ba0:	20000044 	.word	0x20000044
 8001ba4:	00f42400 	.word	0x00f42400
 8001ba8:	017d7840 	.word	0x017d7840
 8001bac:	08002ce8 	.word	0x08002ce8

08001bb0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001bb0:	480d      	ldr	r0, [pc, #52]	; (8001be8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001bb2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001bb4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001bb8:	480c      	ldr	r0, [pc, #48]	; (8001bec <LoopForever+0x6>)
  ldr r1, =_edata
 8001bba:	490d      	ldr	r1, [pc, #52]	; (8001bf0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001bbc:	4a0d      	ldr	r2, [pc, #52]	; (8001bf4 <LoopForever+0xe>)
  movs r3, #0
 8001bbe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001bc0:	e002      	b.n	8001bc8 <LoopCopyDataInit>

08001bc2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001bc2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001bc4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001bc6:	3304      	adds	r3, #4

08001bc8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001bc8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001bca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001bcc:	d3f9      	bcc.n	8001bc2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001bce:	4a0a      	ldr	r2, [pc, #40]	; (8001bf8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001bd0:	4c0a      	ldr	r4, [pc, #40]	; (8001bfc <LoopForever+0x16>)
  movs r3, #0
 8001bd2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001bd4:	e001      	b.n	8001bda <LoopFillZerobss>

08001bd6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001bd6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001bd8:	3204      	adds	r2, #4

08001bda <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001bda:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001bdc:	d3fb      	bcc.n	8001bd6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001bde:	f000 f811 	bl	8001c04 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001be2:	f7ff f9f9 	bl	8000fd8 <main>

08001be6 <LoopForever>:

LoopForever:
  b LoopForever
 8001be6:	e7fe      	b.n	8001be6 <LoopForever>
  ldr   r0, =_estack
 8001be8:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8001bec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001bf0:	2000004c 	.word	0x2000004c
  ldr r2, =_sidata
 8001bf4:	08002ed8 	.word	0x08002ed8
  ldr r2, =_sbss
 8001bf8:	2000004c 	.word	0x2000004c
  ldr r4, =_ebss
 8001bfc:	20000074 	.word	0x20000074

08001c00 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001c00:	e7fe      	b.n	8001c00 <ADC_IRQHandler>
	...

08001c04 <__libc_init_array>:
 8001c04:	b570      	push	{r4, r5, r6, lr}
 8001c06:	4d0d      	ldr	r5, [pc, #52]	; (8001c3c <__libc_init_array+0x38>)
 8001c08:	4c0d      	ldr	r4, [pc, #52]	; (8001c40 <__libc_init_array+0x3c>)
 8001c0a:	1b64      	subs	r4, r4, r5
 8001c0c:	10a4      	asrs	r4, r4, #2
 8001c0e:	2600      	movs	r6, #0
 8001c10:	42a6      	cmp	r6, r4
 8001c12:	d109      	bne.n	8001c28 <__libc_init_array+0x24>
 8001c14:	4d0b      	ldr	r5, [pc, #44]	; (8001c44 <__libc_init_array+0x40>)
 8001c16:	4c0c      	ldr	r4, [pc, #48]	; (8001c48 <__libc_init_array+0x44>)
 8001c18:	f001 f85a 	bl	8002cd0 <_init>
 8001c1c:	1b64      	subs	r4, r4, r5
 8001c1e:	10a4      	asrs	r4, r4, #2
 8001c20:	2600      	movs	r6, #0
 8001c22:	42a6      	cmp	r6, r4
 8001c24:	d105      	bne.n	8001c32 <__libc_init_array+0x2e>
 8001c26:	bd70      	pop	{r4, r5, r6, pc}
 8001c28:	f855 3b04 	ldr.w	r3, [r5], #4
 8001c2c:	4798      	blx	r3
 8001c2e:	3601      	adds	r6, #1
 8001c30:	e7ee      	b.n	8001c10 <__libc_init_array+0xc>
 8001c32:	f855 3b04 	ldr.w	r3, [r5], #4
 8001c36:	4798      	blx	r3
 8001c38:	3601      	adds	r6, #1
 8001c3a:	e7f2      	b.n	8001c22 <__libc_init_array+0x1e>
 8001c3c:	08002ed0 	.word	0x08002ed0
 8001c40:	08002ed0 	.word	0x08002ed0
 8001c44:	08002ed0 	.word	0x08002ed0
 8001c48:	08002ed4 	.word	0x08002ed4
 8001c4c:	00000000 	.word	0x00000000

08001c50 <sin>:
 8001c50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001c52:	ec53 2b10 	vmov	r2, r3, d0
 8001c56:	4828      	ldr	r0, [pc, #160]	; (8001cf8 <sin+0xa8>)
 8001c58:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8001c5c:	4281      	cmp	r1, r0
 8001c5e:	dc07      	bgt.n	8001c70 <sin+0x20>
 8001c60:	ed9f 1b23 	vldr	d1, [pc, #140]	; 8001cf0 <sin+0xa0>
 8001c64:	2000      	movs	r0, #0
 8001c66:	b005      	add	sp, #20
 8001c68:	f85d eb04 	ldr.w	lr, [sp], #4
 8001c6c:	f000 b910 	b.w	8001e90 <__kernel_sin>
 8001c70:	4822      	ldr	r0, [pc, #136]	; (8001cfc <sin+0xac>)
 8001c72:	4281      	cmp	r1, r0
 8001c74:	dd09      	ble.n	8001c8a <sin+0x3a>
 8001c76:	ee10 0a10 	vmov	r0, s0
 8001c7a:	4619      	mov	r1, r3
 8001c7c:	f7fe fbda 	bl	8000434 <__aeabi_dsub>
 8001c80:	ec41 0b10 	vmov	d0, r0, r1
 8001c84:	b005      	add	sp, #20
 8001c86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c8a:	4668      	mov	r0, sp
 8001c8c:	f000 f9c0 	bl	8002010 <__ieee754_rem_pio2>
 8001c90:	f000 0003 	and.w	r0, r0, #3
 8001c94:	2801      	cmp	r0, #1
 8001c96:	d00c      	beq.n	8001cb2 <sin+0x62>
 8001c98:	2802      	cmp	r0, #2
 8001c9a:	d011      	beq.n	8001cc0 <sin+0x70>
 8001c9c:	b9f0      	cbnz	r0, 8001cdc <sin+0x8c>
 8001c9e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001ca2:	ed9d 0b00 	vldr	d0, [sp]
 8001ca6:	2001      	movs	r0, #1
 8001ca8:	f000 f8f2 	bl	8001e90 <__kernel_sin>
 8001cac:	ec51 0b10 	vmov	r0, r1, d0
 8001cb0:	e7e6      	b.n	8001c80 <sin+0x30>
 8001cb2:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001cb6:	ed9d 0b00 	vldr	d0, [sp]
 8001cba:	f000 f821 	bl	8001d00 <__kernel_cos>
 8001cbe:	e7f5      	b.n	8001cac <sin+0x5c>
 8001cc0:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001cc4:	ed9d 0b00 	vldr	d0, [sp]
 8001cc8:	2001      	movs	r0, #1
 8001cca:	f000 f8e1 	bl	8001e90 <__kernel_sin>
 8001cce:	ec53 2b10 	vmov	r2, r3, d0
 8001cd2:	ee10 0a10 	vmov	r0, s0
 8001cd6:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8001cda:	e7d1      	b.n	8001c80 <sin+0x30>
 8001cdc:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001ce0:	ed9d 0b00 	vldr	d0, [sp]
 8001ce4:	f000 f80c 	bl	8001d00 <__kernel_cos>
 8001ce8:	e7f1      	b.n	8001cce <sin+0x7e>
 8001cea:	bf00      	nop
 8001cec:	f3af 8000 	nop.w
	...
 8001cf8:	3fe921fb 	.word	0x3fe921fb
 8001cfc:	7fefffff 	.word	0x7fefffff

08001d00 <__kernel_cos>:
 8001d00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001d04:	ec57 6b10 	vmov	r6, r7, d0
 8001d08:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8001d0c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8001d10:	ed8d 1b00 	vstr	d1, [sp]
 8001d14:	da07      	bge.n	8001d26 <__kernel_cos+0x26>
 8001d16:	ee10 0a10 	vmov	r0, s0
 8001d1a:	4639      	mov	r1, r7
 8001d1c:	f7fe fdca 	bl	80008b4 <__aeabi_d2iz>
 8001d20:	2800      	cmp	r0, #0
 8001d22:	f000 8088 	beq.w	8001e36 <__kernel_cos+0x136>
 8001d26:	4632      	mov	r2, r6
 8001d28:	463b      	mov	r3, r7
 8001d2a:	4630      	mov	r0, r6
 8001d2c:	4639      	mov	r1, r7
 8001d2e:	f7fe fa53 	bl	80001d8 <__aeabi_dmul>
 8001d32:	4b51      	ldr	r3, [pc, #324]	; (8001e78 <__kernel_cos+0x178>)
 8001d34:	2200      	movs	r2, #0
 8001d36:	4604      	mov	r4, r0
 8001d38:	460d      	mov	r5, r1
 8001d3a:	f7fe fa4d 	bl	80001d8 <__aeabi_dmul>
 8001d3e:	a340      	add	r3, pc, #256	; (adr r3, 8001e40 <__kernel_cos+0x140>)
 8001d40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d44:	4682      	mov	sl, r0
 8001d46:	468b      	mov	fp, r1
 8001d48:	4620      	mov	r0, r4
 8001d4a:	4629      	mov	r1, r5
 8001d4c:	f7fe fa44 	bl	80001d8 <__aeabi_dmul>
 8001d50:	a33d      	add	r3, pc, #244	; (adr r3, 8001e48 <__kernel_cos+0x148>)
 8001d52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d56:	f7fe fb6f 	bl	8000438 <__adddf3>
 8001d5a:	4622      	mov	r2, r4
 8001d5c:	462b      	mov	r3, r5
 8001d5e:	f7fe fa3b 	bl	80001d8 <__aeabi_dmul>
 8001d62:	a33b      	add	r3, pc, #236	; (adr r3, 8001e50 <__kernel_cos+0x150>)
 8001d64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d68:	f7fe fb64 	bl	8000434 <__aeabi_dsub>
 8001d6c:	4622      	mov	r2, r4
 8001d6e:	462b      	mov	r3, r5
 8001d70:	f7fe fa32 	bl	80001d8 <__aeabi_dmul>
 8001d74:	a338      	add	r3, pc, #224	; (adr r3, 8001e58 <__kernel_cos+0x158>)
 8001d76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d7a:	f7fe fb5d 	bl	8000438 <__adddf3>
 8001d7e:	4622      	mov	r2, r4
 8001d80:	462b      	mov	r3, r5
 8001d82:	f7fe fa29 	bl	80001d8 <__aeabi_dmul>
 8001d86:	a336      	add	r3, pc, #216	; (adr r3, 8001e60 <__kernel_cos+0x160>)
 8001d88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d8c:	f7fe fb52 	bl	8000434 <__aeabi_dsub>
 8001d90:	4622      	mov	r2, r4
 8001d92:	462b      	mov	r3, r5
 8001d94:	f7fe fa20 	bl	80001d8 <__aeabi_dmul>
 8001d98:	a333      	add	r3, pc, #204	; (adr r3, 8001e68 <__kernel_cos+0x168>)
 8001d9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d9e:	f7fe fb4b 	bl	8000438 <__adddf3>
 8001da2:	4622      	mov	r2, r4
 8001da4:	462b      	mov	r3, r5
 8001da6:	f7fe fa17 	bl	80001d8 <__aeabi_dmul>
 8001daa:	4622      	mov	r2, r4
 8001dac:	462b      	mov	r3, r5
 8001dae:	f7fe fa13 	bl	80001d8 <__aeabi_dmul>
 8001db2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8001db6:	4604      	mov	r4, r0
 8001db8:	460d      	mov	r5, r1
 8001dba:	4630      	mov	r0, r6
 8001dbc:	4639      	mov	r1, r7
 8001dbe:	f7fe fa0b 	bl	80001d8 <__aeabi_dmul>
 8001dc2:	460b      	mov	r3, r1
 8001dc4:	4602      	mov	r2, r0
 8001dc6:	4629      	mov	r1, r5
 8001dc8:	4620      	mov	r0, r4
 8001dca:	f7fe fb33 	bl	8000434 <__aeabi_dsub>
 8001dce:	4b2b      	ldr	r3, [pc, #172]	; (8001e7c <__kernel_cos+0x17c>)
 8001dd0:	4598      	cmp	r8, r3
 8001dd2:	4606      	mov	r6, r0
 8001dd4:	460f      	mov	r7, r1
 8001dd6:	dc10      	bgt.n	8001dfa <__kernel_cos+0xfa>
 8001dd8:	4602      	mov	r2, r0
 8001dda:	460b      	mov	r3, r1
 8001ddc:	4650      	mov	r0, sl
 8001dde:	4659      	mov	r1, fp
 8001de0:	f7fe fb28 	bl	8000434 <__aeabi_dsub>
 8001de4:	460b      	mov	r3, r1
 8001de6:	4926      	ldr	r1, [pc, #152]	; (8001e80 <__kernel_cos+0x180>)
 8001de8:	4602      	mov	r2, r0
 8001dea:	2000      	movs	r0, #0
 8001dec:	f7fe fb22 	bl	8000434 <__aeabi_dsub>
 8001df0:	ec41 0b10 	vmov	d0, r0, r1
 8001df4:	b003      	add	sp, #12
 8001df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001dfa:	4b22      	ldr	r3, [pc, #136]	; (8001e84 <__kernel_cos+0x184>)
 8001dfc:	4920      	ldr	r1, [pc, #128]	; (8001e80 <__kernel_cos+0x180>)
 8001dfe:	4598      	cmp	r8, r3
 8001e00:	bfcc      	ite	gt
 8001e02:	4d21      	ldrgt	r5, [pc, #132]	; (8001e88 <__kernel_cos+0x188>)
 8001e04:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8001e08:	2400      	movs	r4, #0
 8001e0a:	4622      	mov	r2, r4
 8001e0c:	462b      	mov	r3, r5
 8001e0e:	2000      	movs	r0, #0
 8001e10:	f7fe fb10 	bl	8000434 <__aeabi_dsub>
 8001e14:	4622      	mov	r2, r4
 8001e16:	4680      	mov	r8, r0
 8001e18:	4689      	mov	r9, r1
 8001e1a:	462b      	mov	r3, r5
 8001e1c:	4650      	mov	r0, sl
 8001e1e:	4659      	mov	r1, fp
 8001e20:	f7fe fb08 	bl	8000434 <__aeabi_dsub>
 8001e24:	4632      	mov	r2, r6
 8001e26:	463b      	mov	r3, r7
 8001e28:	f7fe fb04 	bl	8000434 <__aeabi_dsub>
 8001e2c:	4602      	mov	r2, r0
 8001e2e:	460b      	mov	r3, r1
 8001e30:	4640      	mov	r0, r8
 8001e32:	4649      	mov	r1, r9
 8001e34:	e7da      	b.n	8001dec <__kernel_cos+0xec>
 8001e36:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8001e70 <__kernel_cos+0x170>
 8001e3a:	e7db      	b.n	8001df4 <__kernel_cos+0xf4>
 8001e3c:	f3af 8000 	nop.w
 8001e40:	be8838d4 	.word	0xbe8838d4
 8001e44:	bda8fae9 	.word	0xbda8fae9
 8001e48:	bdb4b1c4 	.word	0xbdb4b1c4
 8001e4c:	3e21ee9e 	.word	0x3e21ee9e
 8001e50:	809c52ad 	.word	0x809c52ad
 8001e54:	3e927e4f 	.word	0x3e927e4f
 8001e58:	19cb1590 	.word	0x19cb1590
 8001e5c:	3efa01a0 	.word	0x3efa01a0
 8001e60:	16c15177 	.word	0x16c15177
 8001e64:	3f56c16c 	.word	0x3f56c16c
 8001e68:	5555554c 	.word	0x5555554c
 8001e6c:	3fa55555 	.word	0x3fa55555
 8001e70:	00000000 	.word	0x00000000
 8001e74:	3ff00000 	.word	0x3ff00000
 8001e78:	3fe00000 	.word	0x3fe00000
 8001e7c:	3fd33332 	.word	0x3fd33332
 8001e80:	3ff00000 	.word	0x3ff00000
 8001e84:	3fe90000 	.word	0x3fe90000
 8001e88:	3fd20000 	.word	0x3fd20000
 8001e8c:	00000000 	.word	0x00000000

08001e90 <__kernel_sin>:
 8001e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001e94:	ed2d 8b04 	vpush	{d8-d9}
 8001e98:	eeb0 8a41 	vmov.f32	s16, s2
 8001e9c:	eef0 8a61 	vmov.f32	s17, s3
 8001ea0:	ec55 4b10 	vmov	r4, r5, d0
 8001ea4:	b083      	sub	sp, #12
 8001ea6:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8001eaa:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8001eae:	9001      	str	r0, [sp, #4]
 8001eb0:	da06      	bge.n	8001ec0 <__kernel_sin+0x30>
 8001eb2:	ee10 0a10 	vmov	r0, s0
 8001eb6:	4629      	mov	r1, r5
 8001eb8:	f7fe fcfc 	bl	80008b4 <__aeabi_d2iz>
 8001ebc:	2800      	cmp	r0, #0
 8001ebe:	d051      	beq.n	8001f64 <__kernel_sin+0xd4>
 8001ec0:	4622      	mov	r2, r4
 8001ec2:	462b      	mov	r3, r5
 8001ec4:	4620      	mov	r0, r4
 8001ec6:	4629      	mov	r1, r5
 8001ec8:	f7fe f986 	bl	80001d8 <__aeabi_dmul>
 8001ecc:	4682      	mov	sl, r0
 8001ece:	468b      	mov	fp, r1
 8001ed0:	4602      	mov	r2, r0
 8001ed2:	460b      	mov	r3, r1
 8001ed4:	4620      	mov	r0, r4
 8001ed6:	4629      	mov	r1, r5
 8001ed8:	f7fe f97e 	bl	80001d8 <__aeabi_dmul>
 8001edc:	a341      	add	r3, pc, #260	; (adr r3, 8001fe4 <__kernel_sin+0x154>)
 8001ede:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ee2:	4680      	mov	r8, r0
 8001ee4:	4689      	mov	r9, r1
 8001ee6:	4650      	mov	r0, sl
 8001ee8:	4659      	mov	r1, fp
 8001eea:	f7fe f975 	bl	80001d8 <__aeabi_dmul>
 8001eee:	a33f      	add	r3, pc, #252	; (adr r3, 8001fec <__kernel_sin+0x15c>)
 8001ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ef4:	f7fe fa9e 	bl	8000434 <__aeabi_dsub>
 8001ef8:	4652      	mov	r2, sl
 8001efa:	465b      	mov	r3, fp
 8001efc:	f7fe f96c 	bl	80001d8 <__aeabi_dmul>
 8001f00:	a33c      	add	r3, pc, #240	; (adr r3, 8001ff4 <__kernel_sin+0x164>)
 8001f02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f06:	f7fe fa97 	bl	8000438 <__adddf3>
 8001f0a:	4652      	mov	r2, sl
 8001f0c:	465b      	mov	r3, fp
 8001f0e:	f7fe f963 	bl	80001d8 <__aeabi_dmul>
 8001f12:	a33a      	add	r3, pc, #232	; (adr r3, 8001ffc <__kernel_sin+0x16c>)
 8001f14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f18:	f7fe fa8c 	bl	8000434 <__aeabi_dsub>
 8001f1c:	4652      	mov	r2, sl
 8001f1e:	465b      	mov	r3, fp
 8001f20:	f7fe f95a 	bl	80001d8 <__aeabi_dmul>
 8001f24:	a337      	add	r3, pc, #220	; (adr r3, 8002004 <__kernel_sin+0x174>)
 8001f26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f2a:	f7fe fa85 	bl	8000438 <__adddf3>
 8001f2e:	9b01      	ldr	r3, [sp, #4]
 8001f30:	4606      	mov	r6, r0
 8001f32:	460f      	mov	r7, r1
 8001f34:	b9eb      	cbnz	r3, 8001f72 <__kernel_sin+0xe2>
 8001f36:	4602      	mov	r2, r0
 8001f38:	460b      	mov	r3, r1
 8001f3a:	4650      	mov	r0, sl
 8001f3c:	4659      	mov	r1, fp
 8001f3e:	f7fe f94b 	bl	80001d8 <__aeabi_dmul>
 8001f42:	a325      	add	r3, pc, #148	; (adr r3, 8001fd8 <__kernel_sin+0x148>)
 8001f44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f48:	f7fe fa74 	bl	8000434 <__aeabi_dsub>
 8001f4c:	4642      	mov	r2, r8
 8001f4e:	464b      	mov	r3, r9
 8001f50:	f7fe f942 	bl	80001d8 <__aeabi_dmul>
 8001f54:	4602      	mov	r2, r0
 8001f56:	460b      	mov	r3, r1
 8001f58:	4620      	mov	r0, r4
 8001f5a:	4629      	mov	r1, r5
 8001f5c:	f7fe fa6c 	bl	8000438 <__adddf3>
 8001f60:	4604      	mov	r4, r0
 8001f62:	460d      	mov	r5, r1
 8001f64:	ec45 4b10 	vmov	d0, r4, r5
 8001f68:	b003      	add	sp, #12
 8001f6a:	ecbd 8b04 	vpop	{d8-d9}
 8001f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f72:	4b1b      	ldr	r3, [pc, #108]	; (8001fe0 <__kernel_sin+0x150>)
 8001f74:	ec51 0b18 	vmov	r0, r1, d8
 8001f78:	2200      	movs	r2, #0
 8001f7a:	f7fe f92d 	bl	80001d8 <__aeabi_dmul>
 8001f7e:	4632      	mov	r2, r6
 8001f80:	ec41 0b19 	vmov	d9, r0, r1
 8001f84:	463b      	mov	r3, r7
 8001f86:	4640      	mov	r0, r8
 8001f88:	4649      	mov	r1, r9
 8001f8a:	f7fe f925 	bl	80001d8 <__aeabi_dmul>
 8001f8e:	4602      	mov	r2, r0
 8001f90:	460b      	mov	r3, r1
 8001f92:	ec51 0b19 	vmov	r0, r1, d9
 8001f96:	f7fe fa4d 	bl	8000434 <__aeabi_dsub>
 8001f9a:	4652      	mov	r2, sl
 8001f9c:	465b      	mov	r3, fp
 8001f9e:	f7fe f91b 	bl	80001d8 <__aeabi_dmul>
 8001fa2:	ec53 2b18 	vmov	r2, r3, d8
 8001fa6:	f7fe fa45 	bl	8000434 <__aeabi_dsub>
 8001faa:	a30b      	add	r3, pc, #44	; (adr r3, 8001fd8 <__kernel_sin+0x148>)
 8001fac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fb0:	4606      	mov	r6, r0
 8001fb2:	460f      	mov	r7, r1
 8001fb4:	4640      	mov	r0, r8
 8001fb6:	4649      	mov	r1, r9
 8001fb8:	f7fe f90e 	bl	80001d8 <__aeabi_dmul>
 8001fbc:	4602      	mov	r2, r0
 8001fbe:	460b      	mov	r3, r1
 8001fc0:	4630      	mov	r0, r6
 8001fc2:	4639      	mov	r1, r7
 8001fc4:	f7fe fa38 	bl	8000438 <__adddf3>
 8001fc8:	4602      	mov	r2, r0
 8001fca:	460b      	mov	r3, r1
 8001fcc:	4620      	mov	r0, r4
 8001fce:	4629      	mov	r1, r5
 8001fd0:	f7fe fa30 	bl	8000434 <__aeabi_dsub>
 8001fd4:	e7c4      	b.n	8001f60 <__kernel_sin+0xd0>
 8001fd6:	bf00      	nop
 8001fd8:	55555549 	.word	0x55555549
 8001fdc:	3fc55555 	.word	0x3fc55555
 8001fe0:	3fe00000 	.word	0x3fe00000
 8001fe4:	5acfd57c 	.word	0x5acfd57c
 8001fe8:	3de5d93a 	.word	0x3de5d93a
 8001fec:	8a2b9ceb 	.word	0x8a2b9ceb
 8001ff0:	3e5ae5e6 	.word	0x3e5ae5e6
 8001ff4:	57b1fe7d 	.word	0x57b1fe7d
 8001ff8:	3ec71de3 	.word	0x3ec71de3
 8001ffc:	19c161d5 	.word	0x19c161d5
 8002000:	3f2a01a0 	.word	0x3f2a01a0
 8002004:	1110f8a6 	.word	0x1110f8a6
 8002008:	3f811111 	.word	0x3f811111
 800200c:	00000000 	.word	0x00000000

08002010 <__ieee754_rem_pio2>:
 8002010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002014:	ed2d 8b02 	vpush	{d8}
 8002018:	ec55 4b10 	vmov	r4, r5, d0
 800201c:	4bca      	ldr	r3, [pc, #808]	; (8002348 <__ieee754_rem_pio2+0x338>)
 800201e:	b08b      	sub	sp, #44	; 0x2c
 8002020:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8002024:	4598      	cmp	r8, r3
 8002026:	4682      	mov	sl, r0
 8002028:	9502      	str	r5, [sp, #8]
 800202a:	dc08      	bgt.n	800203e <__ieee754_rem_pio2+0x2e>
 800202c:	2200      	movs	r2, #0
 800202e:	2300      	movs	r3, #0
 8002030:	ed80 0b00 	vstr	d0, [r0]
 8002034:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8002038:	f04f 0b00 	mov.w	fp, #0
 800203c:	e028      	b.n	8002090 <__ieee754_rem_pio2+0x80>
 800203e:	4bc3      	ldr	r3, [pc, #780]	; (800234c <__ieee754_rem_pio2+0x33c>)
 8002040:	4598      	cmp	r8, r3
 8002042:	dc78      	bgt.n	8002136 <__ieee754_rem_pio2+0x126>
 8002044:	9b02      	ldr	r3, [sp, #8]
 8002046:	4ec2      	ldr	r6, [pc, #776]	; (8002350 <__ieee754_rem_pio2+0x340>)
 8002048:	2b00      	cmp	r3, #0
 800204a:	ee10 0a10 	vmov	r0, s0
 800204e:	a3b0      	add	r3, pc, #704	; (adr r3, 8002310 <__ieee754_rem_pio2+0x300>)
 8002050:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002054:	4629      	mov	r1, r5
 8002056:	dd39      	ble.n	80020cc <__ieee754_rem_pio2+0xbc>
 8002058:	f7fe f9ec 	bl	8000434 <__aeabi_dsub>
 800205c:	45b0      	cmp	r8, r6
 800205e:	4604      	mov	r4, r0
 8002060:	460d      	mov	r5, r1
 8002062:	d01b      	beq.n	800209c <__ieee754_rem_pio2+0x8c>
 8002064:	a3ac      	add	r3, pc, #688	; (adr r3, 8002318 <__ieee754_rem_pio2+0x308>)
 8002066:	e9d3 2300 	ldrd	r2, r3, [r3]
 800206a:	f7fe f9e3 	bl	8000434 <__aeabi_dsub>
 800206e:	4602      	mov	r2, r0
 8002070:	460b      	mov	r3, r1
 8002072:	e9ca 2300 	strd	r2, r3, [sl]
 8002076:	4620      	mov	r0, r4
 8002078:	4629      	mov	r1, r5
 800207a:	f7fe f9db 	bl	8000434 <__aeabi_dsub>
 800207e:	a3a6      	add	r3, pc, #664	; (adr r3, 8002318 <__ieee754_rem_pio2+0x308>)
 8002080:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002084:	f7fe f9d6 	bl	8000434 <__aeabi_dsub>
 8002088:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800208c:	f04f 0b01 	mov.w	fp, #1
 8002090:	4658      	mov	r0, fp
 8002092:	b00b      	add	sp, #44	; 0x2c
 8002094:	ecbd 8b02 	vpop	{d8}
 8002098:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800209c:	a3a0      	add	r3, pc, #640	; (adr r3, 8002320 <__ieee754_rem_pio2+0x310>)
 800209e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020a2:	f7fe f9c7 	bl	8000434 <__aeabi_dsub>
 80020a6:	a3a0      	add	r3, pc, #640	; (adr r3, 8002328 <__ieee754_rem_pio2+0x318>)
 80020a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020ac:	4604      	mov	r4, r0
 80020ae:	460d      	mov	r5, r1
 80020b0:	f7fe f9c0 	bl	8000434 <__aeabi_dsub>
 80020b4:	4602      	mov	r2, r0
 80020b6:	460b      	mov	r3, r1
 80020b8:	e9ca 2300 	strd	r2, r3, [sl]
 80020bc:	4620      	mov	r0, r4
 80020be:	4629      	mov	r1, r5
 80020c0:	f7fe f9b8 	bl	8000434 <__aeabi_dsub>
 80020c4:	a398      	add	r3, pc, #608	; (adr r3, 8002328 <__ieee754_rem_pio2+0x318>)
 80020c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020ca:	e7db      	b.n	8002084 <__ieee754_rem_pio2+0x74>
 80020cc:	f7fe f9b4 	bl	8000438 <__adddf3>
 80020d0:	45b0      	cmp	r8, r6
 80020d2:	4604      	mov	r4, r0
 80020d4:	460d      	mov	r5, r1
 80020d6:	d016      	beq.n	8002106 <__ieee754_rem_pio2+0xf6>
 80020d8:	a38f      	add	r3, pc, #572	; (adr r3, 8002318 <__ieee754_rem_pio2+0x308>)
 80020da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020de:	f7fe f9ab 	bl	8000438 <__adddf3>
 80020e2:	4602      	mov	r2, r0
 80020e4:	460b      	mov	r3, r1
 80020e6:	e9ca 2300 	strd	r2, r3, [sl]
 80020ea:	4620      	mov	r0, r4
 80020ec:	4629      	mov	r1, r5
 80020ee:	f7fe f9a1 	bl	8000434 <__aeabi_dsub>
 80020f2:	a389      	add	r3, pc, #548	; (adr r3, 8002318 <__ieee754_rem_pio2+0x308>)
 80020f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020f8:	f7fe f99e 	bl	8000438 <__adddf3>
 80020fc:	f04f 3bff 	mov.w	fp, #4294967295
 8002100:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002104:	e7c4      	b.n	8002090 <__ieee754_rem_pio2+0x80>
 8002106:	a386      	add	r3, pc, #536	; (adr r3, 8002320 <__ieee754_rem_pio2+0x310>)
 8002108:	e9d3 2300 	ldrd	r2, r3, [r3]
 800210c:	f7fe f994 	bl	8000438 <__adddf3>
 8002110:	a385      	add	r3, pc, #532	; (adr r3, 8002328 <__ieee754_rem_pio2+0x318>)
 8002112:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002116:	4604      	mov	r4, r0
 8002118:	460d      	mov	r5, r1
 800211a:	f7fe f98d 	bl	8000438 <__adddf3>
 800211e:	4602      	mov	r2, r0
 8002120:	460b      	mov	r3, r1
 8002122:	e9ca 2300 	strd	r2, r3, [sl]
 8002126:	4620      	mov	r0, r4
 8002128:	4629      	mov	r1, r5
 800212a:	f7fe f983 	bl	8000434 <__aeabi_dsub>
 800212e:	a37e      	add	r3, pc, #504	; (adr r3, 8002328 <__ieee754_rem_pio2+0x318>)
 8002130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002134:	e7e0      	b.n	80020f8 <__ieee754_rem_pio2+0xe8>
 8002136:	4b87      	ldr	r3, [pc, #540]	; (8002354 <__ieee754_rem_pio2+0x344>)
 8002138:	4598      	cmp	r8, r3
 800213a:	f300 80d8 	bgt.w	80022ee <__ieee754_rem_pio2+0x2de>
 800213e:	f000 f96d 	bl	800241c <fabs>
 8002142:	ec55 4b10 	vmov	r4, r5, d0
 8002146:	ee10 0a10 	vmov	r0, s0
 800214a:	a379      	add	r3, pc, #484	; (adr r3, 8002330 <__ieee754_rem_pio2+0x320>)
 800214c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002150:	4629      	mov	r1, r5
 8002152:	f7fe f841 	bl	80001d8 <__aeabi_dmul>
 8002156:	4b80      	ldr	r3, [pc, #512]	; (8002358 <__ieee754_rem_pio2+0x348>)
 8002158:	2200      	movs	r2, #0
 800215a:	f7fe f96d 	bl	8000438 <__adddf3>
 800215e:	f7fe fba9 	bl	80008b4 <__aeabi_d2iz>
 8002162:	4683      	mov	fp, r0
 8002164:	f7fe fab4 	bl	80006d0 <__aeabi_i2d>
 8002168:	4602      	mov	r2, r0
 800216a:	460b      	mov	r3, r1
 800216c:	ec43 2b18 	vmov	d8, r2, r3
 8002170:	a367      	add	r3, pc, #412	; (adr r3, 8002310 <__ieee754_rem_pio2+0x300>)
 8002172:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002176:	f7fe f82f 	bl	80001d8 <__aeabi_dmul>
 800217a:	4602      	mov	r2, r0
 800217c:	460b      	mov	r3, r1
 800217e:	4620      	mov	r0, r4
 8002180:	4629      	mov	r1, r5
 8002182:	f7fe f957 	bl	8000434 <__aeabi_dsub>
 8002186:	a364      	add	r3, pc, #400	; (adr r3, 8002318 <__ieee754_rem_pio2+0x308>)
 8002188:	e9d3 2300 	ldrd	r2, r3, [r3]
 800218c:	4606      	mov	r6, r0
 800218e:	460f      	mov	r7, r1
 8002190:	ec51 0b18 	vmov	r0, r1, d8
 8002194:	f7fe f820 	bl	80001d8 <__aeabi_dmul>
 8002198:	f1bb 0f1f 	cmp.w	fp, #31
 800219c:	4604      	mov	r4, r0
 800219e:	460d      	mov	r5, r1
 80021a0:	dc0d      	bgt.n	80021be <__ieee754_rem_pio2+0x1ae>
 80021a2:	4b6e      	ldr	r3, [pc, #440]	; (800235c <__ieee754_rem_pio2+0x34c>)
 80021a4:	f10b 32ff 	add.w	r2, fp, #4294967295
 80021a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80021ac:	4543      	cmp	r3, r8
 80021ae:	d006      	beq.n	80021be <__ieee754_rem_pio2+0x1ae>
 80021b0:	4622      	mov	r2, r4
 80021b2:	462b      	mov	r3, r5
 80021b4:	4630      	mov	r0, r6
 80021b6:	4639      	mov	r1, r7
 80021b8:	f7fe f93c 	bl	8000434 <__aeabi_dsub>
 80021bc:	e00e      	b.n	80021dc <__ieee754_rem_pio2+0x1cc>
 80021be:	462b      	mov	r3, r5
 80021c0:	4622      	mov	r2, r4
 80021c2:	4630      	mov	r0, r6
 80021c4:	4639      	mov	r1, r7
 80021c6:	f7fe f935 	bl	8000434 <__aeabi_dsub>
 80021ca:	ea4f 5328 	mov.w	r3, r8, asr #20
 80021ce:	9303      	str	r3, [sp, #12]
 80021d0:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80021d4:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 80021d8:	2b10      	cmp	r3, #16
 80021da:	dc02      	bgt.n	80021e2 <__ieee754_rem_pio2+0x1d2>
 80021dc:	e9ca 0100 	strd	r0, r1, [sl]
 80021e0:	e039      	b.n	8002256 <__ieee754_rem_pio2+0x246>
 80021e2:	a34f      	add	r3, pc, #316	; (adr r3, 8002320 <__ieee754_rem_pio2+0x310>)
 80021e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021e8:	ec51 0b18 	vmov	r0, r1, d8
 80021ec:	f7fd fff4 	bl	80001d8 <__aeabi_dmul>
 80021f0:	4604      	mov	r4, r0
 80021f2:	460d      	mov	r5, r1
 80021f4:	4602      	mov	r2, r0
 80021f6:	460b      	mov	r3, r1
 80021f8:	4630      	mov	r0, r6
 80021fa:	4639      	mov	r1, r7
 80021fc:	f7fe f91a 	bl	8000434 <__aeabi_dsub>
 8002200:	4602      	mov	r2, r0
 8002202:	460b      	mov	r3, r1
 8002204:	4680      	mov	r8, r0
 8002206:	4689      	mov	r9, r1
 8002208:	4630      	mov	r0, r6
 800220a:	4639      	mov	r1, r7
 800220c:	f7fe f912 	bl	8000434 <__aeabi_dsub>
 8002210:	4622      	mov	r2, r4
 8002212:	462b      	mov	r3, r5
 8002214:	f7fe f90e 	bl	8000434 <__aeabi_dsub>
 8002218:	a343      	add	r3, pc, #268	; (adr r3, 8002328 <__ieee754_rem_pio2+0x318>)
 800221a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800221e:	4604      	mov	r4, r0
 8002220:	460d      	mov	r5, r1
 8002222:	ec51 0b18 	vmov	r0, r1, d8
 8002226:	f7fd ffd7 	bl	80001d8 <__aeabi_dmul>
 800222a:	4622      	mov	r2, r4
 800222c:	462b      	mov	r3, r5
 800222e:	f7fe f901 	bl	8000434 <__aeabi_dsub>
 8002232:	4602      	mov	r2, r0
 8002234:	460b      	mov	r3, r1
 8002236:	4604      	mov	r4, r0
 8002238:	460d      	mov	r5, r1
 800223a:	4640      	mov	r0, r8
 800223c:	4649      	mov	r1, r9
 800223e:	f7fe f8f9 	bl	8000434 <__aeabi_dsub>
 8002242:	9a03      	ldr	r2, [sp, #12]
 8002244:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8002248:	1ad3      	subs	r3, r2, r3
 800224a:	2b31      	cmp	r3, #49	; 0x31
 800224c:	dc24      	bgt.n	8002298 <__ieee754_rem_pio2+0x288>
 800224e:	e9ca 0100 	strd	r0, r1, [sl]
 8002252:	4646      	mov	r6, r8
 8002254:	464f      	mov	r7, r9
 8002256:	e9da 8900 	ldrd	r8, r9, [sl]
 800225a:	4630      	mov	r0, r6
 800225c:	4642      	mov	r2, r8
 800225e:	464b      	mov	r3, r9
 8002260:	4639      	mov	r1, r7
 8002262:	f7fe f8e7 	bl	8000434 <__aeabi_dsub>
 8002266:	462b      	mov	r3, r5
 8002268:	4622      	mov	r2, r4
 800226a:	f7fe f8e3 	bl	8000434 <__aeabi_dsub>
 800226e:	9b02      	ldr	r3, [sp, #8]
 8002270:	2b00      	cmp	r3, #0
 8002272:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002276:	f6bf af0b 	bge.w	8002090 <__ieee754_rem_pio2+0x80>
 800227a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800227e:	f8ca 3004 	str.w	r3, [sl, #4]
 8002282:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002286:	f8ca 8000 	str.w	r8, [sl]
 800228a:	f8ca 0008 	str.w	r0, [sl, #8]
 800228e:	f8ca 300c 	str.w	r3, [sl, #12]
 8002292:	f1cb 0b00 	rsb	fp, fp, #0
 8002296:	e6fb      	b.n	8002090 <__ieee754_rem_pio2+0x80>
 8002298:	a327      	add	r3, pc, #156	; (adr r3, 8002338 <__ieee754_rem_pio2+0x328>)
 800229a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800229e:	ec51 0b18 	vmov	r0, r1, d8
 80022a2:	f7fd ff99 	bl	80001d8 <__aeabi_dmul>
 80022a6:	4604      	mov	r4, r0
 80022a8:	460d      	mov	r5, r1
 80022aa:	4602      	mov	r2, r0
 80022ac:	460b      	mov	r3, r1
 80022ae:	4640      	mov	r0, r8
 80022b0:	4649      	mov	r1, r9
 80022b2:	f7fe f8bf 	bl	8000434 <__aeabi_dsub>
 80022b6:	4602      	mov	r2, r0
 80022b8:	460b      	mov	r3, r1
 80022ba:	4606      	mov	r6, r0
 80022bc:	460f      	mov	r7, r1
 80022be:	4640      	mov	r0, r8
 80022c0:	4649      	mov	r1, r9
 80022c2:	f7fe f8b7 	bl	8000434 <__aeabi_dsub>
 80022c6:	4622      	mov	r2, r4
 80022c8:	462b      	mov	r3, r5
 80022ca:	f7fe f8b3 	bl	8000434 <__aeabi_dsub>
 80022ce:	a31c      	add	r3, pc, #112	; (adr r3, 8002340 <__ieee754_rem_pio2+0x330>)
 80022d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022d4:	4604      	mov	r4, r0
 80022d6:	460d      	mov	r5, r1
 80022d8:	ec51 0b18 	vmov	r0, r1, d8
 80022dc:	f7fd ff7c 	bl	80001d8 <__aeabi_dmul>
 80022e0:	4622      	mov	r2, r4
 80022e2:	462b      	mov	r3, r5
 80022e4:	f7fe f8a6 	bl	8000434 <__aeabi_dsub>
 80022e8:	4604      	mov	r4, r0
 80022ea:	460d      	mov	r5, r1
 80022ec:	e760      	b.n	80021b0 <__ieee754_rem_pio2+0x1a0>
 80022ee:	4b1c      	ldr	r3, [pc, #112]	; (8002360 <__ieee754_rem_pio2+0x350>)
 80022f0:	4598      	cmp	r8, r3
 80022f2:	dd37      	ble.n	8002364 <__ieee754_rem_pio2+0x354>
 80022f4:	ee10 2a10 	vmov	r2, s0
 80022f8:	462b      	mov	r3, r5
 80022fa:	4620      	mov	r0, r4
 80022fc:	4629      	mov	r1, r5
 80022fe:	f7fe f899 	bl	8000434 <__aeabi_dsub>
 8002302:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002306:	e9ca 0100 	strd	r0, r1, [sl]
 800230a:	e695      	b.n	8002038 <__ieee754_rem_pio2+0x28>
 800230c:	f3af 8000 	nop.w
 8002310:	54400000 	.word	0x54400000
 8002314:	3ff921fb 	.word	0x3ff921fb
 8002318:	1a626331 	.word	0x1a626331
 800231c:	3dd0b461 	.word	0x3dd0b461
 8002320:	1a600000 	.word	0x1a600000
 8002324:	3dd0b461 	.word	0x3dd0b461
 8002328:	2e037073 	.word	0x2e037073
 800232c:	3ba3198a 	.word	0x3ba3198a
 8002330:	6dc9c883 	.word	0x6dc9c883
 8002334:	3fe45f30 	.word	0x3fe45f30
 8002338:	2e000000 	.word	0x2e000000
 800233c:	3ba3198a 	.word	0x3ba3198a
 8002340:	252049c1 	.word	0x252049c1
 8002344:	397b839a 	.word	0x397b839a
 8002348:	3fe921fb 	.word	0x3fe921fb
 800234c:	4002d97b 	.word	0x4002d97b
 8002350:	3ff921fb 	.word	0x3ff921fb
 8002354:	413921fb 	.word	0x413921fb
 8002358:	3fe00000 	.word	0x3fe00000
 800235c:	08002cf8 	.word	0x08002cf8
 8002360:	7fefffff 	.word	0x7fefffff
 8002364:	ea4f 5628 	mov.w	r6, r8, asr #20
 8002368:	f2a6 4616 	subw	r6, r6, #1046	; 0x416
 800236c:	eba8 5106 	sub.w	r1, r8, r6, lsl #20
 8002370:	4620      	mov	r0, r4
 8002372:	460d      	mov	r5, r1
 8002374:	f7fe fa9e 	bl	80008b4 <__aeabi_d2iz>
 8002378:	f7fe f9aa 	bl	80006d0 <__aeabi_i2d>
 800237c:	4602      	mov	r2, r0
 800237e:	460b      	mov	r3, r1
 8002380:	4620      	mov	r0, r4
 8002382:	4629      	mov	r1, r5
 8002384:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002388:	f7fe f854 	bl	8000434 <__aeabi_dsub>
 800238c:	4b21      	ldr	r3, [pc, #132]	; (8002414 <__ieee754_rem_pio2+0x404>)
 800238e:	2200      	movs	r2, #0
 8002390:	f7fd ff22 	bl	80001d8 <__aeabi_dmul>
 8002394:	460d      	mov	r5, r1
 8002396:	4604      	mov	r4, r0
 8002398:	f7fe fa8c 	bl	80008b4 <__aeabi_d2iz>
 800239c:	f7fe f998 	bl	80006d0 <__aeabi_i2d>
 80023a0:	4602      	mov	r2, r0
 80023a2:	460b      	mov	r3, r1
 80023a4:	4620      	mov	r0, r4
 80023a6:	4629      	mov	r1, r5
 80023a8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80023ac:	f7fe f842 	bl	8000434 <__aeabi_dsub>
 80023b0:	4b18      	ldr	r3, [pc, #96]	; (8002414 <__ieee754_rem_pio2+0x404>)
 80023b2:	2200      	movs	r2, #0
 80023b4:	f7fd ff10 	bl	80001d8 <__aeabi_dmul>
 80023b8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80023bc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80023c0:	2703      	movs	r7, #3
 80023c2:	2400      	movs	r4, #0
 80023c4:	2500      	movs	r5, #0
 80023c6:	e978 0102 	ldrd	r0, r1, [r8, #-8]!
 80023ca:	4622      	mov	r2, r4
 80023cc:	462b      	mov	r3, r5
 80023ce:	46b9      	mov	r9, r7
 80023d0:	3f01      	subs	r7, #1
 80023d2:	f7fe fa3d 	bl	8000850 <__aeabi_dcmpeq>
 80023d6:	2800      	cmp	r0, #0
 80023d8:	d1f5      	bne.n	80023c6 <__ieee754_rem_pio2+0x3b6>
 80023da:	4b0f      	ldr	r3, [pc, #60]	; (8002418 <__ieee754_rem_pio2+0x408>)
 80023dc:	9301      	str	r3, [sp, #4]
 80023de:	2302      	movs	r3, #2
 80023e0:	9300      	str	r3, [sp, #0]
 80023e2:	4632      	mov	r2, r6
 80023e4:	464b      	mov	r3, r9
 80023e6:	4651      	mov	r1, sl
 80023e8:	a804      	add	r0, sp, #16
 80023ea:	f000 f821 	bl	8002430 <__kernel_rem_pio2>
 80023ee:	9b02      	ldr	r3, [sp, #8]
 80023f0:	2b00      	cmp	r3, #0
 80023f2:	4683      	mov	fp, r0
 80023f4:	f6bf ae4c 	bge.w	8002090 <__ieee754_rem_pio2+0x80>
 80023f8:	e9da 2100 	ldrd	r2, r1, [sl]
 80023fc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002400:	e9ca 2300 	strd	r2, r3, [sl]
 8002404:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 8002408:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800240c:	e9ca 2302 	strd	r2, r3, [sl, #8]
 8002410:	e73f      	b.n	8002292 <__ieee754_rem_pio2+0x282>
 8002412:	bf00      	nop
 8002414:	41700000 	.word	0x41700000
 8002418:	08002d78 	.word	0x08002d78

0800241c <fabs>:
 800241c:	ec51 0b10 	vmov	r0, r1, d0
 8002420:	ee10 2a10 	vmov	r2, s0
 8002424:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8002428:	ec43 2b10 	vmov	d0, r2, r3
 800242c:	4770      	bx	lr
	...

08002430 <__kernel_rem_pio2>:
 8002430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002434:	ed2d 8b02 	vpush	{d8}
 8002438:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 800243c:	f112 0f14 	cmn.w	r2, #20
 8002440:	9306      	str	r3, [sp, #24]
 8002442:	9104      	str	r1, [sp, #16]
 8002444:	4bc2      	ldr	r3, [pc, #776]	; (8002750 <__kernel_rem_pio2+0x320>)
 8002446:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8002448:	9009      	str	r0, [sp, #36]	; 0x24
 800244a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800244e:	9300      	str	r3, [sp, #0]
 8002450:	9b06      	ldr	r3, [sp, #24]
 8002452:	f103 33ff 	add.w	r3, r3, #4294967295
 8002456:	bfa8      	it	ge
 8002458:	1ed4      	subge	r4, r2, #3
 800245a:	9305      	str	r3, [sp, #20]
 800245c:	bfb2      	itee	lt
 800245e:	2400      	movlt	r4, #0
 8002460:	2318      	movge	r3, #24
 8002462:	fb94 f4f3 	sdivge	r4, r4, r3
 8002466:	f06f 0317 	mvn.w	r3, #23
 800246a:	fb04 3303 	mla	r3, r4, r3, r3
 800246e:	eb03 0a02 	add.w	sl, r3, r2
 8002472:	9b00      	ldr	r3, [sp, #0]
 8002474:	9a05      	ldr	r2, [sp, #20]
 8002476:	ed9f 8bb2 	vldr	d8, [pc, #712]	; 8002740 <__kernel_rem_pio2+0x310>
 800247a:	eb03 0802 	add.w	r8, r3, r2
 800247e:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8002480:	1aa7      	subs	r7, r4, r2
 8002482:	ae20      	add	r6, sp, #128	; 0x80
 8002484:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8002488:	2500      	movs	r5, #0
 800248a:	4545      	cmp	r5, r8
 800248c:	dd13      	ble.n	80024b6 <__kernel_rem_pio2+0x86>
 800248e:	9b06      	ldr	r3, [sp, #24]
 8002490:	aa20      	add	r2, sp, #128	; 0x80
 8002492:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8002496:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 800249a:	f04f 0800 	mov.w	r8, #0
 800249e:	9b00      	ldr	r3, [sp, #0]
 80024a0:	4598      	cmp	r8, r3
 80024a2:	dc31      	bgt.n	8002508 <__kernel_rem_pio2+0xd8>
 80024a4:	ed9f 7ba6 	vldr	d7, [pc, #664]	; 8002740 <__kernel_rem_pio2+0x310>
 80024a8:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80024ac:	ed8d 7b02 	vstr	d7, [sp, #8]
 80024b0:	462f      	mov	r7, r5
 80024b2:	2600      	movs	r6, #0
 80024b4:	e01b      	b.n	80024ee <__kernel_rem_pio2+0xbe>
 80024b6:	42ef      	cmn	r7, r5
 80024b8:	d407      	bmi.n	80024ca <__kernel_rem_pio2+0x9a>
 80024ba:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 80024be:	f7fe f907 	bl	80006d0 <__aeabi_i2d>
 80024c2:	e8e6 0102 	strd	r0, r1, [r6], #8
 80024c6:	3501      	adds	r5, #1
 80024c8:	e7df      	b.n	800248a <__kernel_rem_pio2+0x5a>
 80024ca:	ec51 0b18 	vmov	r0, r1, d8
 80024ce:	e7f8      	b.n	80024c2 <__kernel_rem_pio2+0x92>
 80024d0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80024d4:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 80024d8:	f7fd fe7e 	bl	80001d8 <__aeabi_dmul>
 80024dc:	4602      	mov	r2, r0
 80024de:	460b      	mov	r3, r1
 80024e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80024e4:	f7fd ffa8 	bl	8000438 <__adddf3>
 80024e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80024ec:	3601      	adds	r6, #1
 80024ee:	9b05      	ldr	r3, [sp, #20]
 80024f0:	429e      	cmp	r6, r3
 80024f2:	f1a7 0708 	sub.w	r7, r7, #8
 80024f6:	ddeb      	ble.n	80024d0 <__kernel_rem_pio2+0xa0>
 80024f8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80024fc:	f108 0801 	add.w	r8, r8, #1
 8002500:	ecab 7b02 	vstmia	fp!, {d7}
 8002504:	3508      	adds	r5, #8
 8002506:	e7ca      	b.n	800249e <__kernel_rem_pio2+0x6e>
 8002508:	9b00      	ldr	r3, [sp, #0]
 800250a:	aa0c      	add	r2, sp, #48	; 0x30
 800250c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002510:	930b      	str	r3, [sp, #44]	; 0x2c
 8002512:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8002514:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8002518:	9c00      	ldr	r4, [sp, #0]
 800251a:	930a      	str	r3, [sp, #40]	; 0x28
 800251c:	00e3      	lsls	r3, r4, #3
 800251e:	9308      	str	r3, [sp, #32]
 8002520:	ab98      	add	r3, sp, #608	; 0x260
 8002522:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002526:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 800252a:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800252e:	ab70      	add	r3, sp, #448	; 0x1c0
 8002530:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8002534:	46c3      	mov	fp, r8
 8002536:	46a1      	mov	r9, r4
 8002538:	f1b9 0f00 	cmp.w	r9, #0
 800253c:	f1a5 0508 	sub.w	r5, r5, #8
 8002540:	dc77      	bgt.n	8002632 <__kernel_rem_pio2+0x202>
 8002542:	ec47 6b10 	vmov	d0, r6, r7
 8002546:	4650      	mov	r0, sl
 8002548:	f000 fac2 	bl	8002ad0 <scalbn>
 800254c:	ec57 6b10 	vmov	r6, r7, d0
 8002550:	2200      	movs	r2, #0
 8002552:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8002556:	ee10 0a10 	vmov	r0, s0
 800255a:	4639      	mov	r1, r7
 800255c:	f7fd fe3c 	bl	80001d8 <__aeabi_dmul>
 8002560:	ec41 0b10 	vmov	d0, r0, r1
 8002564:	f000 fb34 	bl	8002bd0 <floor>
 8002568:	4b7a      	ldr	r3, [pc, #488]	; (8002754 <__kernel_rem_pio2+0x324>)
 800256a:	ec51 0b10 	vmov	r0, r1, d0
 800256e:	2200      	movs	r2, #0
 8002570:	f7fd fe32 	bl	80001d8 <__aeabi_dmul>
 8002574:	4602      	mov	r2, r0
 8002576:	460b      	mov	r3, r1
 8002578:	4630      	mov	r0, r6
 800257a:	4639      	mov	r1, r7
 800257c:	f7fd ff5a 	bl	8000434 <__aeabi_dsub>
 8002580:	460f      	mov	r7, r1
 8002582:	4606      	mov	r6, r0
 8002584:	f7fe f996 	bl	80008b4 <__aeabi_d2iz>
 8002588:	9002      	str	r0, [sp, #8]
 800258a:	f7fe f8a1 	bl	80006d0 <__aeabi_i2d>
 800258e:	4602      	mov	r2, r0
 8002590:	460b      	mov	r3, r1
 8002592:	4630      	mov	r0, r6
 8002594:	4639      	mov	r1, r7
 8002596:	f7fd ff4d 	bl	8000434 <__aeabi_dsub>
 800259a:	f1ba 0f00 	cmp.w	sl, #0
 800259e:	4606      	mov	r6, r0
 80025a0:	460f      	mov	r7, r1
 80025a2:	dd6d      	ble.n	8002680 <__kernel_rem_pio2+0x250>
 80025a4:	1e61      	subs	r1, r4, #1
 80025a6:	ab0c      	add	r3, sp, #48	; 0x30
 80025a8:	9d02      	ldr	r5, [sp, #8]
 80025aa:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80025ae:	f1ca 0018 	rsb	r0, sl, #24
 80025b2:	fa43 f200 	asr.w	r2, r3, r0
 80025b6:	4415      	add	r5, r2
 80025b8:	4082      	lsls	r2, r0
 80025ba:	1a9b      	subs	r3, r3, r2
 80025bc:	aa0c      	add	r2, sp, #48	; 0x30
 80025be:	9502      	str	r5, [sp, #8]
 80025c0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 80025c4:	f1ca 0217 	rsb	r2, sl, #23
 80025c8:	fa43 fb02 	asr.w	fp, r3, r2
 80025cc:	f1bb 0f00 	cmp.w	fp, #0
 80025d0:	dd65      	ble.n	800269e <__kernel_rem_pio2+0x26e>
 80025d2:	9b02      	ldr	r3, [sp, #8]
 80025d4:	2200      	movs	r2, #0
 80025d6:	3301      	adds	r3, #1
 80025d8:	9302      	str	r3, [sp, #8]
 80025da:	4615      	mov	r5, r2
 80025dc:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 80025e0:	4294      	cmp	r4, r2
 80025e2:	f300 809f 	bgt.w	8002724 <__kernel_rem_pio2+0x2f4>
 80025e6:	f1ba 0f00 	cmp.w	sl, #0
 80025ea:	dd07      	ble.n	80025fc <__kernel_rem_pio2+0x1cc>
 80025ec:	f1ba 0f01 	cmp.w	sl, #1
 80025f0:	f000 80c1 	beq.w	8002776 <__kernel_rem_pio2+0x346>
 80025f4:	f1ba 0f02 	cmp.w	sl, #2
 80025f8:	f000 80c7 	beq.w	800278a <__kernel_rem_pio2+0x35a>
 80025fc:	f1bb 0f02 	cmp.w	fp, #2
 8002600:	d14d      	bne.n	800269e <__kernel_rem_pio2+0x26e>
 8002602:	4632      	mov	r2, r6
 8002604:	463b      	mov	r3, r7
 8002606:	4954      	ldr	r1, [pc, #336]	; (8002758 <__kernel_rem_pio2+0x328>)
 8002608:	2000      	movs	r0, #0
 800260a:	f7fd ff13 	bl	8000434 <__aeabi_dsub>
 800260e:	4606      	mov	r6, r0
 8002610:	460f      	mov	r7, r1
 8002612:	2d00      	cmp	r5, #0
 8002614:	d043      	beq.n	800269e <__kernel_rem_pio2+0x26e>
 8002616:	4650      	mov	r0, sl
 8002618:	ed9f 0b4b 	vldr	d0, [pc, #300]	; 8002748 <__kernel_rem_pio2+0x318>
 800261c:	f000 fa58 	bl	8002ad0 <scalbn>
 8002620:	4630      	mov	r0, r6
 8002622:	4639      	mov	r1, r7
 8002624:	ec53 2b10 	vmov	r2, r3, d0
 8002628:	f7fd ff04 	bl	8000434 <__aeabi_dsub>
 800262c:	4606      	mov	r6, r0
 800262e:	460f      	mov	r7, r1
 8002630:	e035      	b.n	800269e <__kernel_rem_pio2+0x26e>
 8002632:	4b4a      	ldr	r3, [pc, #296]	; (800275c <__kernel_rem_pio2+0x32c>)
 8002634:	2200      	movs	r2, #0
 8002636:	4630      	mov	r0, r6
 8002638:	4639      	mov	r1, r7
 800263a:	f7fd fdcd 	bl	80001d8 <__aeabi_dmul>
 800263e:	f7fe f939 	bl	80008b4 <__aeabi_d2iz>
 8002642:	f7fe f845 	bl	80006d0 <__aeabi_i2d>
 8002646:	4602      	mov	r2, r0
 8002648:	460b      	mov	r3, r1
 800264a:	ec43 2b18 	vmov	d8, r2, r3
 800264e:	4b44      	ldr	r3, [pc, #272]	; (8002760 <__kernel_rem_pio2+0x330>)
 8002650:	2200      	movs	r2, #0
 8002652:	f7fd fdc1 	bl	80001d8 <__aeabi_dmul>
 8002656:	4602      	mov	r2, r0
 8002658:	460b      	mov	r3, r1
 800265a:	4630      	mov	r0, r6
 800265c:	4639      	mov	r1, r7
 800265e:	f7fd fee9 	bl	8000434 <__aeabi_dsub>
 8002662:	f7fe f927 	bl	80008b4 <__aeabi_d2iz>
 8002666:	e9d5 2300 	ldrd	r2, r3, [r5]
 800266a:	f84b 0b04 	str.w	r0, [fp], #4
 800266e:	ec51 0b18 	vmov	r0, r1, d8
 8002672:	f7fd fee1 	bl	8000438 <__adddf3>
 8002676:	f109 39ff 	add.w	r9, r9, #4294967295
 800267a:	4606      	mov	r6, r0
 800267c:	460f      	mov	r7, r1
 800267e:	e75b      	b.n	8002538 <__kernel_rem_pio2+0x108>
 8002680:	d106      	bne.n	8002690 <__kernel_rem_pio2+0x260>
 8002682:	1e63      	subs	r3, r4, #1
 8002684:	aa0c      	add	r2, sp, #48	; 0x30
 8002686:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800268a:	ea4f 5be3 	mov.w	fp, r3, asr #23
 800268e:	e79d      	b.n	80025cc <__kernel_rem_pio2+0x19c>
 8002690:	4b34      	ldr	r3, [pc, #208]	; (8002764 <__kernel_rem_pio2+0x334>)
 8002692:	2200      	movs	r2, #0
 8002694:	f7fe f8fa 	bl	800088c <__aeabi_dcmpge>
 8002698:	2800      	cmp	r0, #0
 800269a:	d140      	bne.n	800271e <__kernel_rem_pio2+0x2ee>
 800269c:	4683      	mov	fp, r0
 800269e:	2200      	movs	r2, #0
 80026a0:	2300      	movs	r3, #0
 80026a2:	4630      	mov	r0, r6
 80026a4:	4639      	mov	r1, r7
 80026a6:	f7fe f8d3 	bl	8000850 <__aeabi_dcmpeq>
 80026aa:	2800      	cmp	r0, #0
 80026ac:	f000 80c1 	beq.w	8002832 <__kernel_rem_pio2+0x402>
 80026b0:	1e65      	subs	r5, r4, #1
 80026b2:	462b      	mov	r3, r5
 80026b4:	2200      	movs	r2, #0
 80026b6:	9900      	ldr	r1, [sp, #0]
 80026b8:	428b      	cmp	r3, r1
 80026ba:	da6d      	bge.n	8002798 <__kernel_rem_pio2+0x368>
 80026bc:	2a00      	cmp	r2, #0
 80026be:	f000 808a 	beq.w	80027d6 <__kernel_rem_pio2+0x3a6>
 80026c2:	ab0c      	add	r3, sp, #48	; 0x30
 80026c4:	f1aa 0a18 	sub.w	sl, sl, #24
 80026c8:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 80026cc:	2b00      	cmp	r3, #0
 80026ce:	f000 80ae 	beq.w	800282e <__kernel_rem_pio2+0x3fe>
 80026d2:	4650      	mov	r0, sl
 80026d4:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8002748 <__kernel_rem_pio2+0x318>
 80026d8:	f000 f9fa 	bl	8002ad0 <scalbn>
 80026dc:	1c6b      	adds	r3, r5, #1
 80026de:	00da      	lsls	r2, r3, #3
 80026e0:	9205      	str	r2, [sp, #20]
 80026e2:	ec57 6b10 	vmov	r6, r7, d0
 80026e6:	aa70      	add	r2, sp, #448	; 0x1c0
 80026e8:	f8df 9070 	ldr.w	r9, [pc, #112]	; 800275c <__kernel_rem_pio2+0x32c>
 80026ec:	eb02 0ac3 	add.w	sl, r2, r3, lsl #3
 80026f0:	462c      	mov	r4, r5
 80026f2:	f04f 0800 	mov.w	r8, #0
 80026f6:	2c00      	cmp	r4, #0
 80026f8:	f280 80d4 	bge.w	80028a4 <__kernel_rem_pio2+0x474>
 80026fc:	462c      	mov	r4, r5
 80026fe:	2c00      	cmp	r4, #0
 8002700:	f2c0 8102 	blt.w	8002908 <__kernel_rem_pio2+0x4d8>
 8002704:	4b18      	ldr	r3, [pc, #96]	; (8002768 <__kernel_rem_pio2+0x338>)
 8002706:	461e      	mov	r6, r3
 8002708:	ab70      	add	r3, sp, #448	; 0x1c0
 800270a:	eb03 08c4 	add.w	r8, r3, r4, lsl #3
 800270e:	1b2b      	subs	r3, r5, r4
 8002710:	f04f 0900 	mov.w	r9, #0
 8002714:	f04f 0a00 	mov.w	sl, #0
 8002718:	2700      	movs	r7, #0
 800271a:	9306      	str	r3, [sp, #24]
 800271c:	e0e6      	b.n	80028ec <__kernel_rem_pio2+0x4bc>
 800271e:	f04f 0b02 	mov.w	fp, #2
 8002722:	e756      	b.n	80025d2 <__kernel_rem_pio2+0x1a2>
 8002724:	f8d8 3000 	ldr.w	r3, [r8]
 8002728:	bb05      	cbnz	r5, 800276c <__kernel_rem_pio2+0x33c>
 800272a:	b123      	cbz	r3, 8002736 <__kernel_rem_pio2+0x306>
 800272c:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8002730:	f8c8 3000 	str.w	r3, [r8]
 8002734:	2301      	movs	r3, #1
 8002736:	3201      	adds	r2, #1
 8002738:	f108 0804 	add.w	r8, r8, #4
 800273c:	461d      	mov	r5, r3
 800273e:	e74f      	b.n	80025e0 <__kernel_rem_pio2+0x1b0>
	...
 800274c:	3ff00000 	.word	0x3ff00000
 8002750:	08002ec0 	.word	0x08002ec0
 8002754:	40200000 	.word	0x40200000
 8002758:	3ff00000 	.word	0x3ff00000
 800275c:	3e700000 	.word	0x3e700000
 8002760:	41700000 	.word	0x41700000
 8002764:	3fe00000 	.word	0x3fe00000
 8002768:	08002e80 	.word	0x08002e80
 800276c:	1acb      	subs	r3, r1, r3
 800276e:	f8c8 3000 	str.w	r3, [r8]
 8002772:	462b      	mov	r3, r5
 8002774:	e7df      	b.n	8002736 <__kernel_rem_pio2+0x306>
 8002776:	1e62      	subs	r2, r4, #1
 8002778:	ab0c      	add	r3, sp, #48	; 0x30
 800277a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800277e:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8002782:	a90c      	add	r1, sp, #48	; 0x30
 8002784:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8002788:	e738      	b.n	80025fc <__kernel_rem_pio2+0x1cc>
 800278a:	1e62      	subs	r2, r4, #1
 800278c:	ab0c      	add	r3, sp, #48	; 0x30
 800278e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002792:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002796:	e7f4      	b.n	8002782 <__kernel_rem_pio2+0x352>
 8002798:	a90c      	add	r1, sp, #48	; 0x30
 800279a:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800279e:	3b01      	subs	r3, #1
 80027a0:	430a      	orrs	r2, r1
 80027a2:	e788      	b.n	80026b6 <__kernel_rem_pio2+0x286>
 80027a4:	3301      	adds	r3, #1
 80027a6:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 80027aa:	2900      	cmp	r1, #0
 80027ac:	d0fa      	beq.n	80027a4 <__kernel_rem_pio2+0x374>
 80027ae:	9a08      	ldr	r2, [sp, #32]
 80027b0:	f502 7218 	add.w	r2, r2, #608	; 0x260
 80027b4:	446a      	add	r2, sp
 80027b6:	3a98      	subs	r2, #152	; 0x98
 80027b8:	9208      	str	r2, [sp, #32]
 80027ba:	9a06      	ldr	r2, [sp, #24]
 80027bc:	a920      	add	r1, sp, #128	; 0x80
 80027be:	18a2      	adds	r2, r4, r2
 80027c0:	18e3      	adds	r3, r4, r3
 80027c2:	f104 0801 	add.w	r8, r4, #1
 80027c6:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
 80027ca:	9302      	str	r3, [sp, #8]
 80027cc:	9b02      	ldr	r3, [sp, #8]
 80027ce:	4543      	cmp	r3, r8
 80027d0:	da04      	bge.n	80027dc <__kernel_rem_pio2+0x3ac>
 80027d2:	461c      	mov	r4, r3
 80027d4:	e6a2      	b.n	800251c <__kernel_rem_pio2+0xec>
 80027d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80027d8:	2301      	movs	r3, #1
 80027da:	e7e4      	b.n	80027a6 <__kernel_rem_pio2+0x376>
 80027dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80027de:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 80027e2:	f7fd ff75 	bl	80006d0 <__aeabi_i2d>
 80027e6:	e8e5 0102 	strd	r0, r1, [r5], #8
 80027ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80027ec:	46ab      	mov	fp, r5
 80027ee:	461c      	mov	r4, r3
 80027f0:	f04f 0900 	mov.w	r9, #0
 80027f4:	2600      	movs	r6, #0
 80027f6:	2700      	movs	r7, #0
 80027f8:	9b05      	ldr	r3, [sp, #20]
 80027fa:	4599      	cmp	r9, r3
 80027fc:	dd06      	ble.n	800280c <__kernel_rem_pio2+0x3dc>
 80027fe:	9b08      	ldr	r3, [sp, #32]
 8002800:	e8e3 6702 	strd	r6, r7, [r3], #8
 8002804:	f108 0801 	add.w	r8, r8, #1
 8002808:	9308      	str	r3, [sp, #32]
 800280a:	e7df      	b.n	80027cc <__kernel_rem_pio2+0x39c>
 800280c:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8002810:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8002814:	f7fd fce0 	bl	80001d8 <__aeabi_dmul>
 8002818:	4602      	mov	r2, r0
 800281a:	460b      	mov	r3, r1
 800281c:	4630      	mov	r0, r6
 800281e:	4639      	mov	r1, r7
 8002820:	f7fd fe0a 	bl	8000438 <__adddf3>
 8002824:	f109 0901 	add.w	r9, r9, #1
 8002828:	4606      	mov	r6, r0
 800282a:	460f      	mov	r7, r1
 800282c:	e7e4      	b.n	80027f8 <__kernel_rem_pio2+0x3c8>
 800282e:	3d01      	subs	r5, #1
 8002830:	e747      	b.n	80026c2 <__kernel_rem_pio2+0x292>
 8002832:	ec47 6b10 	vmov	d0, r6, r7
 8002836:	f1ca 0000 	rsb	r0, sl, #0
 800283a:	f000 f949 	bl	8002ad0 <scalbn>
 800283e:	ec57 6b10 	vmov	r6, r7, d0
 8002842:	4ba0      	ldr	r3, [pc, #640]	; (8002ac4 <__kernel_rem_pio2+0x694>)
 8002844:	ee10 0a10 	vmov	r0, s0
 8002848:	2200      	movs	r2, #0
 800284a:	4639      	mov	r1, r7
 800284c:	f7fe f81e 	bl	800088c <__aeabi_dcmpge>
 8002850:	b1f8      	cbz	r0, 8002892 <__kernel_rem_pio2+0x462>
 8002852:	4b9d      	ldr	r3, [pc, #628]	; (8002ac8 <__kernel_rem_pio2+0x698>)
 8002854:	2200      	movs	r2, #0
 8002856:	4630      	mov	r0, r6
 8002858:	4639      	mov	r1, r7
 800285a:	f7fd fcbd 	bl	80001d8 <__aeabi_dmul>
 800285e:	f7fe f829 	bl	80008b4 <__aeabi_d2iz>
 8002862:	4680      	mov	r8, r0
 8002864:	f7fd ff34 	bl	80006d0 <__aeabi_i2d>
 8002868:	4b96      	ldr	r3, [pc, #600]	; (8002ac4 <__kernel_rem_pio2+0x694>)
 800286a:	2200      	movs	r2, #0
 800286c:	f7fd fcb4 	bl	80001d8 <__aeabi_dmul>
 8002870:	460b      	mov	r3, r1
 8002872:	4602      	mov	r2, r0
 8002874:	4639      	mov	r1, r7
 8002876:	4630      	mov	r0, r6
 8002878:	f7fd fddc 	bl	8000434 <__aeabi_dsub>
 800287c:	f7fe f81a 	bl	80008b4 <__aeabi_d2iz>
 8002880:	1c65      	adds	r5, r4, #1
 8002882:	ab0c      	add	r3, sp, #48	; 0x30
 8002884:	f10a 0a18 	add.w	sl, sl, #24
 8002888:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800288c:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8002890:	e71f      	b.n	80026d2 <__kernel_rem_pio2+0x2a2>
 8002892:	4630      	mov	r0, r6
 8002894:	4639      	mov	r1, r7
 8002896:	f7fe f80d 	bl	80008b4 <__aeabi_d2iz>
 800289a:	ab0c      	add	r3, sp, #48	; 0x30
 800289c:	4625      	mov	r5, r4
 800289e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80028a2:	e716      	b.n	80026d2 <__kernel_rem_pio2+0x2a2>
 80028a4:	ab0c      	add	r3, sp, #48	; 0x30
 80028a6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80028aa:	f7fd ff11 	bl	80006d0 <__aeabi_i2d>
 80028ae:	4632      	mov	r2, r6
 80028b0:	463b      	mov	r3, r7
 80028b2:	f7fd fc91 	bl	80001d8 <__aeabi_dmul>
 80028b6:	4642      	mov	r2, r8
 80028b8:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 80028bc:	464b      	mov	r3, r9
 80028be:	4630      	mov	r0, r6
 80028c0:	4639      	mov	r1, r7
 80028c2:	f7fd fc89 	bl	80001d8 <__aeabi_dmul>
 80028c6:	3c01      	subs	r4, #1
 80028c8:	4606      	mov	r6, r0
 80028ca:	460f      	mov	r7, r1
 80028cc:	e713      	b.n	80026f6 <__kernel_rem_pio2+0x2c6>
 80028ce:	e8f8 2302 	ldrd	r2, r3, [r8], #8
 80028d2:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 80028d6:	f7fd fc7f 	bl	80001d8 <__aeabi_dmul>
 80028da:	4602      	mov	r2, r0
 80028dc:	460b      	mov	r3, r1
 80028de:	4648      	mov	r0, r9
 80028e0:	4651      	mov	r1, sl
 80028e2:	f7fd fda9 	bl	8000438 <__adddf3>
 80028e6:	3701      	adds	r7, #1
 80028e8:	4681      	mov	r9, r0
 80028ea:	468a      	mov	sl, r1
 80028ec:	9b00      	ldr	r3, [sp, #0]
 80028ee:	429f      	cmp	r7, r3
 80028f0:	dc02      	bgt.n	80028f8 <__kernel_rem_pio2+0x4c8>
 80028f2:	9b06      	ldr	r3, [sp, #24]
 80028f4:	429f      	cmp	r7, r3
 80028f6:	ddea      	ble.n	80028ce <__kernel_rem_pio2+0x49e>
 80028f8:	9a06      	ldr	r2, [sp, #24]
 80028fa:	ab48      	add	r3, sp, #288	; 0x120
 80028fc:	eb03 06c2 	add.w	r6, r3, r2, lsl #3
 8002900:	e9c6 9a00 	strd	r9, sl, [r6]
 8002904:	3c01      	subs	r4, #1
 8002906:	e6fa      	b.n	80026fe <__kernel_rem_pio2+0x2ce>
 8002908:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 800290a:	2b02      	cmp	r3, #2
 800290c:	dc0b      	bgt.n	8002926 <__kernel_rem_pio2+0x4f6>
 800290e:	2b00      	cmp	r3, #0
 8002910:	dc39      	bgt.n	8002986 <__kernel_rem_pio2+0x556>
 8002912:	d05d      	beq.n	80029d0 <__kernel_rem_pio2+0x5a0>
 8002914:	9b02      	ldr	r3, [sp, #8]
 8002916:	f003 0007 	and.w	r0, r3, #7
 800291a:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 800291e:	ecbd 8b02 	vpop	{d8}
 8002922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002926:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8002928:	2b03      	cmp	r3, #3
 800292a:	d1f3      	bne.n	8002914 <__kernel_rem_pio2+0x4e4>
 800292c:	9b05      	ldr	r3, [sp, #20]
 800292e:	9500      	str	r5, [sp, #0]
 8002930:	f503 7318 	add.w	r3, r3, #608	; 0x260
 8002934:	eb0d 0403 	add.w	r4, sp, r3
 8002938:	f5a4 74a4 	sub.w	r4, r4, #328	; 0x148
 800293c:	46a2      	mov	sl, r4
 800293e:	9b00      	ldr	r3, [sp, #0]
 8002940:	2b00      	cmp	r3, #0
 8002942:	f1aa 0a08 	sub.w	sl, sl, #8
 8002946:	dc69      	bgt.n	8002a1c <__kernel_rem_pio2+0x5ec>
 8002948:	46aa      	mov	sl, r5
 800294a:	f1ba 0f01 	cmp.w	sl, #1
 800294e:	f1a4 0408 	sub.w	r4, r4, #8
 8002952:	f300 8083 	bgt.w	8002a5c <__kernel_rem_pio2+0x62c>
 8002956:	9c05      	ldr	r4, [sp, #20]
 8002958:	ab48      	add	r3, sp, #288	; 0x120
 800295a:	441c      	add	r4, r3
 800295c:	2000      	movs	r0, #0
 800295e:	2100      	movs	r1, #0
 8002960:	2d01      	cmp	r5, #1
 8002962:	f300 809a 	bgt.w	8002a9a <__kernel_rem_pio2+0x66a>
 8002966:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	; 0x120
 800296a:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 800296e:	f1bb 0f00 	cmp.w	fp, #0
 8002972:	f040 8098 	bne.w	8002aa6 <__kernel_rem_pio2+0x676>
 8002976:	9b04      	ldr	r3, [sp, #16]
 8002978:	e9c3 7800 	strd	r7, r8, [r3]
 800297c:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8002980:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8002984:	e7c6      	b.n	8002914 <__kernel_rem_pio2+0x4e4>
 8002986:	9e05      	ldr	r6, [sp, #20]
 8002988:	ab48      	add	r3, sp, #288	; 0x120
 800298a:	441e      	add	r6, r3
 800298c:	462c      	mov	r4, r5
 800298e:	2000      	movs	r0, #0
 8002990:	2100      	movs	r1, #0
 8002992:	2c00      	cmp	r4, #0
 8002994:	da33      	bge.n	80029fe <__kernel_rem_pio2+0x5ce>
 8002996:	f1bb 0f00 	cmp.w	fp, #0
 800299a:	d036      	beq.n	8002a0a <__kernel_rem_pio2+0x5da>
 800299c:	4602      	mov	r2, r0
 800299e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80029a2:	9c04      	ldr	r4, [sp, #16]
 80029a4:	e9c4 2300 	strd	r2, r3, [r4]
 80029a8:	4602      	mov	r2, r0
 80029aa:	460b      	mov	r3, r1
 80029ac:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 80029b0:	f7fd fd40 	bl	8000434 <__aeabi_dsub>
 80029b4:	ae4a      	add	r6, sp, #296	; 0x128
 80029b6:	2401      	movs	r4, #1
 80029b8:	42a5      	cmp	r5, r4
 80029ba:	da29      	bge.n	8002a10 <__kernel_rem_pio2+0x5e0>
 80029bc:	f1bb 0f00 	cmp.w	fp, #0
 80029c0:	d002      	beq.n	80029c8 <__kernel_rem_pio2+0x598>
 80029c2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80029c6:	4619      	mov	r1, r3
 80029c8:	9b04      	ldr	r3, [sp, #16]
 80029ca:	e9c3 0102 	strd	r0, r1, [r3, #8]
 80029ce:	e7a1      	b.n	8002914 <__kernel_rem_pio2+0x4e4>
 80029d0:	9c05      	ldr	r4, [sp, #20]
 80029d2:	ab48      	add	r3, sp, #288	; 0x120
 80029d4:	441c      	add	r4, r3
 80029d6:	2000      	movs	r0, #0
 80029d8:	2100      	movs	r1, #0
 80029da:	2d00      	cmp	r5, #0
 80029dc:	da09      	bge.n	80029f2 <__kernel_rem_pio2+0x5c2>
 80029de:	f1bb 0f00 	cmp.w	fp, #0
 80029e2:	d002      	beq.n	80029ea <__kernel_rem_pio2+0x5ba>
 80029e4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80029e8:	4619      	mov	r1, r3
 80029ea:	9b04      	ldr	r3, [sp, #16]
 80029ec:	e9c3 0100 	strd	r0, r1, [r3]
 80029f0:	e790      	b.n	8002914 <__kernel_rem_pio2+0x4e4>
 80029f2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80029f6:	f7fd fd1f 	bl	8000438 <__adddf3>
 80029fa:	3d01      	subs	r5, #1
 80029fc:	e7ed      	b.n	80029da <__kernel_rem_pio2+0x5aa>
 80029fe:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 8002a02:	f7fd fd19 	bl	8000438 <__adddf3>
 8002a06:	3c01      	subs	r4, #1
 8002a08:	e7c3      	b.n	8002992 <__kernel_rem_pio2+0x562>
 8002a0a:	4602      	mov	r2, r0
 8002a0c:	460b      	mov	r3, r1
 8002a0e:	e7c8      	b.n	80029a2 <__kernel_rem_pio2+0x572>
 8002a10:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8002a14:	f7fd fd10 	bl	8000438 <__adddf3>
 8002a18:	3401      	adds	r4, #1
 8002a1a:	e7cd      	b.n	80029b8 <__kernel_rem_pio2+0x588>
 8002a1c:	e9da 8900 	ldrd	r8, r9, [sl]
 8002a20:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8002a24:	9b00      	ldr	r3, [sp, #0]
 8002a26:	3b01      	subs	r3, #1
 8002a28:	9300      	str	r3, [sp, #0]
 8002a2a:	4632      	mov	r2, r6
 8002a2c:	463b      	mov	r3, r7
 8002a2e:	4640      	mov	r0, r8
 8002a30:	4649      	mov	r1, r9
 8002a32:	f7fd fd01 	bl	8000438 <__adddf3>
 8002a36:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8002a3a:	4602      	mov	r2, r0
 8002a3c:	460b      	mov	r3, r1
 8002a3e:	4640      	mov	r0, r8
 8002a40:	4649      	mov	r1, r9
 8002a42:	f7fd fcf7 	bl	8000434 <__aeabi_dsub>
 8002a46:	4632      	mov	r2, r6
 8002a48:	463b      	mov	r3, r7
 8002a4a:	f7fd fcf5 	bl	8000438 <__adddf3>
 8002a4e:	ed9d 7b06 	vldr	d7, [sp, #24]
 8002a52:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8002a56:	ed8a 7b00 	vstr	d7, [sl]
 8002a5a:	e770      	b.n	800293e <__kernel_rem_pio2+0x50e>
 8002a5c:	e9d4 8900 	ldrd	r8, r9, [r4]
 8002a60:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 8002a64:	4640      	mov	r0, r8
 8002a66:	4632      	mov	r2, r6
 8002a68:	463b      	mov	r3, r7
 8002a6a:	4649      	mov	r1, r9
 8002a6c:	f7fd fce4 	bl	8000438 <__adddf3>
 8002a70:	e9cd 0100 	strd	r0, r1, [sp]
 8002a74:	4602      	mov	r2, r0
 8002a76:	460b      	mov	r3, r1
 8002a78:	4640      	mov	r0, r8
 8002a7a:	4649      	mov	r1, r9
 8002a7c:	f7fd fcda 	bl	8000434 <__aeabi_dsub>
 8002a80:	4632      	mov	r2, r6
 8002a82:	463b      	mov	r3, r7
 8002a84:	f7fd fcd8 	bl	8000438 <__adddf3>
 8002a88:	ed9d 7b00 	vldr	d7, [sp]
 8002a8c:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8002a90:	ed84 7b00 	vstr	d7, [r4]
 8002a94:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002a98:	e757      	b.n	800294a <__kernel_rem_pio2+0x51a>
 8002a9a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8002a9e:	f7fd fccb 	bl	8000438 <__adddf3>
 8002aa2:	3d01      	subs	r5, #1
 8002aa4:	e75c      	b.n	8002960 <__kernel_rem_pio2+0x530>
 8002aa6:	9b04      	ldr	r3, [sp, #16]
 8002aa8:	9a04      	ldr	r2, [sp, #16]
 8002aaa:	601f      	str	r7, [r3, #0]
 8002aac:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 8002ab0:	605c      	str	r4, [r3, #4]
 8002ab2:	609d      	str	r5, [r3, #8]
 8002ab4:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8002ab8:	60d3      	str	r3, [r2, #12]
 8002aba:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002abe:	6110      	str	r0, [r2, #16]
 8002ac0:	6153      	str	r3, [r2, #20]
 8002ac2:	e727      	b.n	8002914 <__kernel_rem_pio2+0x4e4>
 8002ac4:	41700000 	.word	0x41700000
 8002ac8:	3e700000 	.word	0x3e700000
 8002acc:	00000000 	.word	0x00000000

08002ad0 <scalbn>:
 8002ad0:	b570      	push	{r4, r5, r6, lr}
 8002ad2:	ec55 4b10 	vmov	r4, r5, d0
 8002ad6:	f3c5 510a 	ubfx	r1, r5, #20, #11
 8002ada:	4606      	mov	r6, r0
 8002adc:	462b      	mov	r3, r5
 8002ade:	b999      	cbnz	r1, 8002b08 <scalbn+0x38>
 8002ae0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8002ae4:	4323      	orrs	r3, r4
 8002ae6:	d03f      	beq.n	8002b68 <scalbn+0x98>
 8002ae8:	4b35      	ldr	r3, [pc, #212]	; (8002bc0 <scalbn+0xf0>)
 8002aea:	4629      	mov	r1, r5
 8002aec:	ee10 0a10 	vmov	r0, s0
 8002af0:	2200      	movs	r2, #0
 8002af2:	f7fd fb71 	bl	80001d8 <__aeabi_dmul>
 8002af6:	4b33      	ldr	r3, [pc, #204]	; (8002bc4 <scalbn+0xf4>)
 8002af8:	429e      	cmp	r6, r3
 8002afa:	4604      	mov	r4, r0
 8002afc:	460d      	mov	r5, r1
 8002afe:	da10      	bge.n	8002b22 <scalbn+0x52>
 8002b00:	a327      	add	r3, pc, #156	; (adr r3, 8002ba0 <scalbn+0xd0>)
 8002b02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b06:	e01f      	b.n	8002b48 <scalbn+0x78>
 8002b08:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8002b0c:	4291      	cmp	r1, r2
 8002b0e:	d10c      	bne.n	8002b2a <scalbn+0x5a>
 8002b10:	ee10 2a10 	vmov	r2, s0
 8002b14:	4620      	mov	r0, r4
 8002b16:	4629      	mov	r1, r5
 8002b18:	f7fd fc8e 	bl	8000438 <__adddf3>
 8002b1c:	4604      	mov	r4, r0
 8002b1e:	460d      	mov	r5, r1
 8002b20:	e022      	b.n	8002b68 <scalbn+0x98>
 8002b22:	460b      	mov	r3, r1
 8002b24:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8002b28:	3936      	subs	r1, #54	; 0x36
 8002b2a:	f24c 3250 	movw	r2, #50000	; 0xc350
 8002b2e:	4296      	cmp	r6, r2
 8002b30:	dd0d      	ble.n	8002b4e <scalbn+0x7e>
 8002b32:	2d00      	cmp	r5, #0
 8002b34:	a11c      	add	r1, pc, #112	; (adr r1, 8002ba8 <scalbn+0xd8>)
 8002b36:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002b3a:	da02      	bge.n	8002b42 <scalbn+0x72>
 8002b3c:	a11c      	add	r1, pc, #112	; (adr r1, 8002bb0 <scalbn+0xe0>)
 8002b3e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002b42:	a319      	add	r3, pc, #100	; (adr r3, 8002ba8 <scalbn+0xd8>)
 8002b44:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b48:	f7fd fb46 	bl	80001d8 <__aeabi_dmul>
 8002b4c:	e7e6      	b.n	8002b1c <scalbn+0x4c>
 8002b4e:	1872      	adds	r2, r6, r1
 8002b50:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8002b54:	428a      	cmp	r2, r1
 8002b56:	dcec      	bgt.n	8002b32 <scalbn+0x62>
 8002b58:	2a00      	cmp	r2, #0
 8002b5a:	dd08      	ble.n	8002b6e <scalbn+0x9e>
 8002b5c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8002b60:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8002b64:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8002b68:	ec45 4b10 	vmov	d0, r4, r5
 8002b6c:	bd70      	pop	{r4, r5, r6, pc}
 8002b6e:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8002b72:	da08      	bge.n	8002b86 <scalbn+0xb6>
 8002b74:	2d00      	cmp	r5, #0
 8002b76:	a10a      	add	r1, pc, #40	; (adr r1, 8002ba0 <scalbn+0xd0>)
 8002b78:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002b7c:	dac0      	bge.n	8002b00 <scalbn+0x30>
 8002b7e:	a10e      	add	r1, pc, #56	; (adr r1, 8002bb8 <scalbn+0xe8>)
 8002b80:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002b84:	e7bc      	b.n	8002b00 <scalbn+0x30>
 8002b86:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8002b8a:	3236      	adds	r2, #54	; 0x36
 8002b8c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8002b90:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8002b94:	4620      	mov	r0, r4
 8002b96:	4b0c      	ldr	r3, [pc, #48]	; (8002bc8 <scalbn+0xf8>)
 8002b98:	2200      	movs	r2, #0
 8002b9a:	e7d5      	b.n	8002b48 <scalbn+0x78>
 8002b9c:	f3af 8000 	nop.w
 8002ba0:	c2f8f359 	.word	0xc2f8f359
 8002ba4:	01a56e1f 	.word	0x01a56e1f
 8002ba8:	8800759c 	.word	0x8800759c
 8002bac:	7e37e43c 	.word	0x7e37e43c
 8002bb0:	8800759c 	.word	0x8800759c
 8002bb4:	fe37e43c 	.word	0xfe37e43c
 8002bb8:	c2f8f359 	.word	0xc2f8f359
 8002bbc:	81a56e1f 	.word	0x81a56e1f
 8002bc0:	43500000 	.word	0x43500000
 8002bc4:	ffff3cb0 	.word	0xffff3cb0
 8002bc8:	3c900000 	.word	0x3c900000
 8002bcc:	00000000 	.word	0x00000000

08002bd0 <floor>:
 8002bd0:	ec51 0b10 	vmov	r0, r1, d0
 8002bd4:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8002bd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002bdc:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
 8002be0:	2e13      	cmp	r6, #19
 8002be2:	ee10 5a10 	vmov	r5, s0
 8002be6:	ee10 8a10 	vmov	r8, s0
 8002bea:	460c      	mov	r4, r1
 8002bec:	dc31      	bgt.n	8002c52 <floor+0x82>
 8002bee:	2e00      	cmp	r6, #0
 8002bf0:	da14      	bge.n	8002c1c <floor+0x4c>
 8002bf2:	a333      	add	r3, pc, #204	; (adr r3, 8002cc0 <floor+0xf0>)
 8002bf4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bf8:	f7fd fc1e 	bl	8000438 <__adddf3>
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	2300      	movs	r3, #0
 8002c00:	f7fd fe4e 	bl	80008a0 <__aeabi_dcmpgt>
 8002c04:	b138      	cbz	r0, 8002c16 <floor+0x46>
 8002c06:	2c00      	cmp	r4, #0
 8002c08:	da53      	bge.n	8002cb2 <floor+0xe2>
 8002c0a:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8002c0e:	4325      	orrs	r5, r4
 8002c10:	d052      	beq.n	8002cb8 <floor+0xe8>
 8002c12:	4c2d      	ldr	r4, [pc, #180]	; (8002cc8 <floor+0xf8>)
 8002c14:	2500      	movs	r5, #0
 8002c16:	4621      	mov	r1, r4
 8002c18:	4628      	mov	r0, r5
 8002c1a:	e024      	b.n	8002c66 <floor+0x96>
 8002c1c:	4f2b      	ldr	r7, [pc, #172]	; (8002ccc <floor+0xfc>)
 8002c1e:	4137      	asrs	r7, r6
 8002c20:	ea01 0307 	and.w	r3, r1, r7
 8002c24:	4303      	orrs	r3, r0
 8002c26:	d01e      	beq.n	8002c66 <floor+0x96>
 8002c28:	a325      	add	r3, pc, #148	; (adr r3, 8002cc0 <floor+0xf0>)
 8002c2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c2e:	f7fd fc03 	bl	8000438 <__adddf3>
 8002c32:	2200      	movs	r2, #0
 8002c34:	2300      	movs	r3, #0
 8002c36:	f7fd fe33 	bl	80008a0 <__aeabi_dcmpgt>
 8002c3a:	2800      	cmp	r0, #0
 8002c3c:	d0eb      	beq.n	8002c16 <floor+0x46>
 8002c3e:	2c00      	cmp	r4, #0
 8002c40:	bfbe      	ittt	lt
 8002c42:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8002c46:	4133      	asrlt	r3, r6
 8002c48:	18e4      	addlt	r4, r4, r3
 8002c4a:	ea24 0407 	bic.w	r4, r4, r7
 8002c4e:	2500      	movs	r5, #0
 8002c50:	e7e1      	b.n	8002c16 <floor+0x46>
 8002c52:	2e33      	cmp	r6, #51	; 0x33
 8002c54:	dd0b      	ble.n	8002c6e <floor+0x9e>
 8002c56:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8002c5a:	d104      	bne.n	8002c66 <floor+0x96>
 8002c5c:	ee10 2a10 	vmov	r2, s0
 8002c60:	460b      	mov	r3, r1
 8002c62:	f7fd fbe9 	bl	8000438 <__adddf3>
 8002c66:	ec41 0b10 	vmov	d0, r0, r1
 8002c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002c6e:	f2a3 4313 	subw	r3, r3, #1043	; 0x413
 8002c72:	f04f 37ff 	mov.w	r7, #4294967295
 8002c76:	40df      	lsrs	r7, r3
 8002c78:	4238      	tst	r0, r7
 8002c7a:	d0f4      	beq.n	8002c66 <floor+0x96>
 8002c7c:	a310      	add	r3, pc, #64	; (adr r3, 8002cc0 <floor+0xf0>)
 8002c7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c82:	f7fd fbd9 	bl	8000438 <__adddf3>
 8002c86:	2200      	movs	r2, #0
 8002c88:	2300      	movs	r3, #0
 8002c8a:	f7fd fe09 	bl	80008a0 <__aeabi_dcmpgt>
 8002c8e:	2800      	cmp	r0, #0
 8002c90:	d0c1      	beq.n	8002c16 <floor+0x46>
 8002c92:	2c00      	cmp	r4, #0
 8002c94:	da0a      	bge.n	8002cac <floor+0xdc>
 8002c96:	2e14      	cmp	r6, #20
 8002c98:	d101      	bne.n	8002c9e <floor+0xce>
 8002c9a:	3401      	adds	r4, #1
 8002c9c:	e006      	b.n	8002cac <floor+0xdc>
 8002c9e:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8002ca2:	2301      	movs	r3, #1
 8002ca4:	40b3      	lsls	r3, r6
 8002ca6:	441d      	add	r5, r3
 8002ca8:	45a8      	cmp	r8, r5
 8002caa:	d8f6      	bhi.n	8002c9a <floor+0xca>
 8002cac:	ea25 0507 	bic.w	r5, r5, r7
 8002cb0:	e7b1      	b.n	8002c16 <floor+0x46>
 8002cb2:	2500      	movs	r5, #0
 8002cb4:	462c      	mov	r4, r5
 8002cb6:	e7ae      	b.n	8002c16 <floor+0x46>
 8002cb8:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8002cbc:	e7ab      	b.n	8002c16 <floor+0x46>
 8002cbe:	bf00      	nop
 8002cc0:	8800759c 	.word	0x8800759c
 8002cc4:	7e37e43c 	.word	0x7e37e43c
 8002cc8:	bff00000 	.word	0xbff00000
 8002ccc:	000fffff 	.word	0x000fffff

08002cd0 <_init>:
 8002cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002cd2:	bf00      	nop
 8002cd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002cd6:	bc08      	pop	{r3}
 8002cd8:	469e      	mov	lr, r3
 8002cda:	4770      	bx	lr

08002cdc <_fini>:
 8002cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002cde:	bf00      	nop
 8002ce0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002ce2:	bc08      	pop	{r3}
 8002ce4:	469e      	mov	lr, r3
 8002ce6:	4770      	bx	lr
